(setglobal Typedecl_unboxed!
  (letrec
    (get_unboxed_type_representation
       (function env ty fuel[int]
         (funct-body typing/typedecl_unboxed.ml(21)<ghost>:1334-2286
           (before typing/typedecl_unboxed.ml(22):1350-2286
             (if (< fuel 0)
               (before typing/typedecl_unboxed.ml(22):1367-1371 0a)
               (before typing/typedecl_unboxed.ml(23):1379-2286
                 (let
                   (ty =
                      (after typing/typedecl_unboxed.ml(23):1388-1429
                        (apply (field 24 (global Ctype!))
                          (after typing/typedecl_unboxed.ml(23):1399-1429
                            (apply (field 62 (global Ctype!)) env ty)))))
                   (before typing/typedecl_unboxed.ml(24):1435-2286
                     (let (*match* = (field 0 ty))
                       (catch
                         (switch *match*
                          case tag 3:
                           (let
                             (args =a (field 1 *match*)
                              p =a (field 0 *match*))
                             (before typing/typedecl_unboxed.ml(26):1486-2269
                               (catch
                                 (try
                                   (exit 6
                                     (after typing/typedecl_unboxed.ml(26):1498-1517
                                       (apply (field 12 (global Env!)) p env)))
                                  with exn
                                   (if (== exn (field 7 (global Stdlib!)))
                                     (before typing/typedecl_unboxed.ml(27):1552-1559
                                       (makeblock 0 ty))
                                     (reraise exn)))
                                with (6 val)
                                 (let
                                   (*match* =a (field 2 val)
                                    type_params =a (field 0 val))
                                   (catch
                                     (catch
                                       (let (*match* =a (field 10 val))
                                         (if *match*
                                           (before typing/typedecl_unboxed.ml(28):1596-1616
                                             (makeblock 0
                                               (field 0 (global Predef!))))
                                           (let
                                             (*match* =a (field 11 val)
                                              *match* =a (field 0 *match*))
                                             (if *match*
                                               (switch* *match*
                                                case int 0:
                                                 (before typing/typedecl_unboxed.ml(39):2096-2100
                                                   0a)
                                                case int 1: (exit 3)
                                                case tag 0:
                                                 (let
                                                   (*match* =a
                                                      (field 0 *match*))
                                                   (if *match*
                                                     (let
                                                       (*match* =a
                                                          (field 1 *match*))
                                                       (if *match* (exit 3)
                                                         (let
                                                           (*match* =a
                                                              (field 0
                                                                *match*)
                                                            ty2 =a
                                                              (field 2
                                                                *match*))
                                                           (exit 2 ty2))))
                                                     (exit 3)))
                                                case tag 1:
                                                 (let
                                                   (*match* =a
                                                      (field 0 *match*))
                                                   (if *match*
                                                     (let
                                                       (*match* =a
                                                          (field 0 *match*)
                                                        *match* =a
                                                          (field 1 *match*))
                                                       (switch* *match*
                                                        case tag 0:
                                                         (let
                                                           (*match* =a
                                                              (field 0
                                                                *match*))
                                                           (if *match*
                                                             (let
                                                               (*match* =a
                                                                  (field 1
                                                                    *match*))
                                                               (if *match*
                                                                 (exit 3)
                                                                 (let
                                                                   (*match* =a
                                                                    (field 1
                                                                    *match*))
                                                                   (if
                                                                    *match*
                                                                    (exit 3)
                                                                    (let
                                                                    (ty2 =a
                                                                    (field 0
                                                                    *match*))
                                                                    (exit 2
                                                                    ty2))))))
                                                             (exit 3)))
                                                        case tag 1:
                                                         (let
                                                           (*match* =a
                                                              (field 0
                                                                *match*))
                                                           (if *match*
                                                             (let
                                                               (*match* =a
                                                                  (field 1
                                                                    *match*))
                                                               (if *match*
                                                                 (exit 3)
                                                                 (let
                                                                   (*match* =a
                                                                    (field 1
                                                                    *match*))
                                                                   (if
                                                                    *match*
                                                                    (exit 3)
                                                                    (let
                                                                    (*match* =a
                                                                    (field 0
                                                                    *match*)
                                                                    ty2 =a
                                                                    (field 2
                                                                    *match*))
                                                                    (exit 2
                                                                    ty2))))))
                                                             (exit 3)))))
                                                     (exit 3))))
                                               (before typing/typedecl_unboxed.ml(29):1661-1668
                                                 (makeblock 0 ty))))))
                                      with (3)
                                       (before typing/typedecl_unboxed.ml(42):2213-2225
                                         (raise
                                           (after typing/typedecl_unboxed.ml(42):2213-2225
                                             (makeblock 0
                                               (global Assert_failure!)
                                               [0:
                                                "typing/typedecl_unboxed.ml"
                                                42 11])))))
                                    with (2 ty2)
                                     (before typing/typedecl_unboxed.ml(36):1895-2060
                                       (let
                                         (ty2 =
                                            (let (*match* = (field 0 ty2))
                                              (catch
                                                (switch *match*
                                                 case tag 10:
                                                  (let
                                                    (t =a (field 0 *match*))
                                                    (before typing/typedecl_unboxed.ml(36):1941-1942
                                                      t))
                                                 default: (exit 1))
                                               with (1)
                                                (before typing/typedecl_unboxed.ml(36):1950-1953
                                                  ty2))))
                                         (before typing/typedecl_unboxed.ml(37):1965-2060
                                           (after typing/typedecl_unboxed.ml(37):1965-2060
                                             (apply
                                               get_unboxed_type_representation
                                               env
                                               (after typing/typedecl_unboxed.ml(38):2011-2049
                                                 (apply
                                                   (field 58 (global Ctype!))
                                                   env type_params ty2 args))
                                               (- fuel 1)))))))))))
                          default: (exit 8))
                        with (8)
                         (before typing/typedecl_unboxed.ml(44):2279-2286
                           (makeblock 0 ty))))))))))))
    (let
      (get_unboxed_type_representation =
         (function env ty
           (funct-body typing/typedecl_unboxed.ml(46)<ghost>:2324-2420
             (before typing/typedecl_unboxed.ml(48):2378-2420
               (after typing/typedecl_unboxed.ml(48):2378-2420
                 (apply get_unboxed_type_representation env ty 100))))))
      (pseudo _none_(0)<ghost>:-1--1
        (makeblock 0 get_unboxed_type_representation)))))
