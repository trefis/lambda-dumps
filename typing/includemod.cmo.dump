(setglobal Includemod!
  (let
    (Error = (makeblock 248 "Includemod.Error" (caml_fresh_oo_id 0))
     negate_mark =
       (function param
         (funct-body typing/includemod.ml(55):2395-2533
           (switch* param
            case int 0: (before typing/includemod.ml(56):2421-2430 0a)
            case int 1: (before typing/includemod.ml(57):2452-2465 2a)
            case int 2: (before typing/includemod.ml(58):2487-2500 1a)
            case int 3: (before typing/includemod.ml(59):2521-2533 3a))))
     mark_positive =
       (function param
         (funct-body typing/includemod.ml(61):2555-2643
           (if (>= param 2) (before typing/includemod.ml(63):2638-2643 0a)
             (before typing/includemod.ml(62):2597-2601 1a))))
     value_descriptions =
       (function loc env mark cxt subst id vd1 vd2
         (funct-body typing/includemod.ml(71)<ghost>:2926-3300
           (before typing/includemod.ml(72):2966-3300
             (seq
               (after typing/includemod.ml(72):2966-3008
                 (apply (field 10 (global Cmt_format!)) vd1 vd2))
               (before typing/includemod.ml(73):3012-3300
                 (seq
                   (if
                     (after typing/includemod.ml(73):3015-3033
                       (apply mark_positive mark))
                     (before typing/includemod.ml(74):3043-3082
                       (after typing/includemod.ml(74):3043-3082
                         (apply (field 88 (global Env!))
                           (after typing/includemod.ml(74):3063-3078
                             (apply (field 14 (global Ident!)) id))
                           vd1)))
                     0a)
                   (before typing/includemod.ml(75):3086-3300
                     (let
                       (vd2 =
                          (after typing/includemod.ml(75):3096-3129
                            (apply (field 13 (global Subst!)) subst vd2)))
                       (before typing/includemod.ml(76):3135-3300
                         (try
                           (after typing/includemod.ml(77):3143-3206
                             (apply (field 1 (global Includecore!)) loc env
                               (after typing/includemod.ml(77):3183-3198
                                 (apply (field 14 (global Ident!)) id))
                               vd1 vd2))
                          with exn
                           (if (== exn (field 0 (global Includecore!)))
                             (before typing/includemod.ml(79):3244-3300
                               (raise
                                 (after typing/includemod.ml(79):3249-3300
                                   (makeblock 0 Error
                                     (makeblock 0
                                       (makeblock 0 cxt env
                                         (makeblock 1 id vd1 vd2))
                                       0a)))))
                             (reraise exn))))))))))))
     type_declarations =
       (function loc env mark param cxt subst id decl1 decl2
         (funct-body typing/includemod.ml(83)<ghost>:3367-3784
           (before typing/includemod.ml(84):3422-3784
             (let
               (mark =
                  (after typing/includemod.ml(84):3433-3451
                    (apply mark_positive mark)))
               (before typing/includemod.ml(85):3457-3784
                 (seq
                   (if mark
                     (before typing/includemod.ml(86):3474-3514
                       (after typing/includemod.ml(86):3474-3514
                         (apply (field 90 (global Env!))
                           (after typing/includemod.ml(86):3493-3508
                             (apply (field 14 (global Ident!)) id))
                           decl1)))
                     0a)
                   (before typing/includemod.ml(87):3518-3784
                     (let
                       (decl2 =
                          (after typing/includemod.ml(87):3530-3564
                            (apply (field 14 (global Subst!)) subst decl2)))
                       (before typing/includemod.ml(88):3570-3784
                         (let
                           (*match* =
                              (after typing/includemod.ml(89):3580-3675
                                (apply (field 2 (global Includecore!)) 0a loc
                                  env mark
                                  (after typing/includemod.ml(90):3631-3646
                                    (apply (field 14 (global Ident!)) id))
                                  decl1 (makeblock 0 id) decl2)))
                           (if *match*
                             (let (err =a (field 0 *match*))
                               (before typing/includemod.ml(94):3720-3784
                                 (raise
                                   (after typing/includemod.ml(94):3725-3784
                                     (makeblock 0 Error
                                       (makeblock 0
                                         (makeblock 0 cxt env
                                           (makeblock 2 id decl1 decl2 err))
                                         0a))))))
                             (before typing/includemod.ml(92):3695-3697 0a))))))))))))
     extension_constructors =
       (function loc env mark cxt subst id ext1 ext2
         (funct-body typing/includemod.ml(98)<ghost>:3861-4171
           (before typing/includemod.ml(99):3903-4171
             (let
               (mark =
                  (after typing/includemod.ml(99):3914-3932
                    (apply mark_positive mark)))
               (before typing/includemod.ml(100):3938-4171
                 (let
                   (ext2 =
                      (after typing/includemod.ml(100):3949-3987
                        (apply (field 15 (global Subst!)) subst ext2)))
                   (before typing/includemod.ml(101):3993-4171
                     (let
                       (*match* =
                          (after typing/includemod.ml(101):3999-4061
                            (apply (field 3 (global Includecore!)) loc env
                              mark id ext1 ext2)))
                       (if *match*
                         (let (err =a (field 0 *match*))
                           (before typing/includemod.ml(104):4104-4171
                             (raise
                               (after typing/includemod.ml(104):4109-4171
                                 (makeblock 0 Error
                                   (makeblock 0
                                     (makeblock 0 cxt env
                                       (makeblock 3 id ext1 ext2 err))
                                     0a))))))
                         (before typing/includemod.ml(102):4079-4081 0a))))))))))
     class_type_declarations =
       (function loc param env cxt subst id decl1 decl2
         (funct-body typing/includemod.ml(108)<ghost>:4245-4545
           (before typing/includemod.ml(109):4294-4545
             (let
               (decl2 =
                  (after typing/includemod.ml(109):4306-4342
                    (apply (field 17 (global Subst!)) subst decl2)))
               (before typing/includemod.ml(110):4348-4545
                 (let
                   (reason =
                      (after typing/includemod.ml(110):4354-4411
                        (apply (field 1 (global Includeclass!)) loc env decl1
                          decl2)))
                   (if reason
                     (before typing/includemod.ml(113):4454-4545
                       (raise
                         (after typing/includemod.ml(113):4459-4545
                           (makeblock 0 Error
                             (makeblock 0
                               (makeblock 0 cxt env
                                 (makeblock 8 id decl1 decl2 reason))
                               0a)))))
                     (before typing/includemod.ml(111):4431-4433 0a))))))))
     class_declarations =
       (function param env cxt subst id decl1 decl2
         (funct-body typing/includemod.ml(116)<ghost>:4570-4831
           (before typing/includemod.ml(117):4614-4831
             (let
               (decl2 =
                  (after typing/includemod.ml(117):4626-4661
                    (apply (field 16 (global Subst!)) subst decl2)))
               (before typing/includemod.ml(118):4667-4831
                 (let
                   (reason =
                      (after typing/includemod.ml(118):4673-4720
                        (apply (field 2 (global Includeclass!)) env decl1
                          decl2)))
                   (if reason
                     (before typing/includemod.ml(121):4763-4831
                       (raise
                         (after typing/includemod.ml(121):4768-4831
                           (makeblock 0 Error
                             (makeblock 0
                               (makeblock 0 cxt env
                                 (makeblock 9 id decl1 decl2 reason))
                               0a)))))
                     (before typing/includemod.ml(119):4740-4742 0a))))))))
     Dont_match =
       (makeblock 248 "Includemod.Dont_match" (caml_fresh_oo_id 0))
     may_expand_module_path =
       (function env path
         (funct-body typing/includemod.ml(127)<ghost>:4935-5028
           (before typing/includemod.ml(128):4948-5028
             (try
               (seq
                 (ignore
                   (after typing/includemod.ml(128):4959-4996
                     (apply (field 20 (global Env!)) path env)))
                 (before typing/includemod.ml(128):4998-5002 1a))
              with exn
               (if (== exn (field 7 (global Stdlib!)))
                 (before typing/includemod.ml(129):5023-5028 0a)
                 (reraise exn))))))
     expand_module_path =
       (function env cxt path
         (funct-body typing/includemod.ml(131)<ghost>:5053-5187
           (before typing/includemod.ml(132):5070-5187
             (try
               (after typing/includemod.ml(133):5078-5113
                 (apply (field 20 (global Env!)) path env))
              with exn
               (if (== exn (field 7 (global Stdlib!)))
                 (before typing/includemod.ml(135):5138-5187
                   (raise
                     (after typing/includemod.ml(135):5143-5187
                       (makeblock 0 Error
                         (makeblock 0
                           (makeblock 0 cxt env (makeblock 10 path)) 0a)))))
                 (reraise exn))))))
     expand_module_alias =
       (function env cxt path
         (funct-body typing/includemod.ml(137)<ghost>:5213-5341
           (before typing/includemod.ml(138):5230-5341
             (try
               (field 0
                 (after typing/includemod.ml(138):5234-5260
                   (apply (field 14 (global Env!)) path env)))
              with exn
               (if (== exn (field 7 (global Stdlib!)))
                 (before typing/includemod.ml(140):5293-5341
                   (raise
                     (after typing/includemod.ml(140):5298-5341
                       (makeblock 0 Error
                         (makeblock 0
                           (makeblock 0 cxt env (makeblock 11 path)) 0a)))))
                 (reraise exn))))))
     kind_of_field_desc =
       (function param
         (funct-body typing/includemod.ml(160):5805-6050
           (switch* param
            case tag 0: (before typing/includemod.ml(161):5835-5842 "value")
            case tag 1: (before typing/includemod.ml(162):5863-5869 "type")
            case tag 2:
             (before typing/includemod.ml(163):5892-5915
               "extension constructor")
            case tag 3: (before typing/includemod.ml(164):5938-5946 "module")
            case tag 4:
             (before typing/includemod.ml(165):5970-5983 "module type")
            case tag 5: (before typing/includemod.ml(166):6005-6012 "class")
            case tag 6:
             (before typing/includemod.ml(167):6038-6050 "class type"))))
     FieldMap =
       (module-defn(FieldMap) typing/includemod.ml(172):6195-6292
         (apply
           (let (let = (field 0 (global Stdlib__map!)))
             (field 0 (global Stdlib__map!)))
           (let
             (compare = (function prim prim stub (caml_compare prim prim)))
             (pseudo typing/includemod.ml(172):6222-6291
               (makeblock 0 compare)))))
     item_ident_name =
       (function param
         (funct-body typing/includemod.ml(177):6316-6861
           (switch* param
            case tag 0:
             (let (d =a (field 1 param) id =a (field 0 param))
               (before typing/includemod.ml(178):6352-6395
                 (makeblock 0 id (field 2 d)
                   (makeblock 0
                     (after typing/includemod.ml(178):6379-6394
                       (apply (field 14 (global Ident!)) id))))))
            case tag 1:
             (let (d =a (field 1 param) id =a (field 0 param))
               (before typing/includemod.ml(179):6425-6468
                 (makeblock 0 id (field 8 d)
                   (makeblock 1
                     (after typing/includemod.ml(179):6452-6467
                       (apply (field 14 (global Ident!)) id))))))
            case tag 2:
             (let (d =a (field 1 param) id =a (field 0 param))
               (before typing/includemod.ml(180):6500-6544
                 (makeblock 0 id (field 5 d)
                   (makeblock 2
                     (after typing/includemod.ml(180):6528-6543
                       (apply (field 14 (global Ident!)) id))))))
            case tag 3:
             (let (d =a (field 2 param) id =a (field 0 param))
               (before typing/includemod.ml(181):6579-6622
                 (makeblock 0 id (field 2 d)
                   (makeblock 3
                     (after typing/includemod.ml(181):6606-6621
                       (apply (field 14 (global Ident!)) id))))))
            case tag 4:
             (let (d =a (field 1 param) id =a (field 0 param))
               (before typing/includemod.ml(182):6652-6697
                 (makeblock 0 id (field 2 d)
                   (makeblock 4
                     (after typing/includemod.ml(182):6681-6696
                       (apply (field 14 (global Ident!)) id))))))
            case tag 5:
             (let (d =a (field 1 param) id =a (field 0 param))
               (before typing/includemod.ml(183):6728-6771
                 (makeblock 0 id (field 5 d)
                   (makeblock 5
                     (after typing/includemod.ml(183):6755-6770
                       (apply (field 14 (global Ident!)) id))))))
            case tag 6:
             (let (d =a (field 1 param) id =a (field 0 param))
               (before typing/includemod.ml(185):6813-6861
                 (makeblock 0 id (field 4 d)
                   (makeblock 6
                     (after typing/includemod.ml(185):6845-6860
                       (apply (field 14 (global Ident!)) id)))))))))
     is_runtime_component =
       (function param
         (funct-body typing/includemod.ml(187):6890-7169
           (catch
             (catch
               (switch param
                case tag 0:
                 (catch
                   (let
                     (*match* =a (field 1 param)
                      *match* =a (field 1 *match*))
                     (switch *match* case tag 0: (exit 9)
                                     default: (exit 11)))
                  with (11) (exit 10))
                case tag 2: (exit 10)
                case tag 3:
                 (let (*match* =a (field 1 param))
                   (if *match* (exit 9) (exit 10)))
                case tag 5: (exit 10)
                default: (exit 9))
              with (9) (before typing/includemod.ml(192):7053-7058 0a))
            with (10) (before typing/includemod.ml(196):7165-7169 1a)))))
    (letrec
      (print_list
         (function pr ppf param
           (funct-body typing/includemod.ml(200)<ghost>:7214-7334
             (if param
               (let (l =a (field 1 param) a =a (field 0 param))
                 (if l
                   (let (a =a a)
                     (before typing/includemod.ml(203):7279-7334
                       (seq
                         (after typing/includemod.ml(203):7279-7287
                           (apply pr ppf a))
                         (before typing/includemod.ml(203):7289-7334
                           (seq
                             (after typing/includemod.ml(203):7289-7313
                               (apply (field 122 (global Stdlib__format!))
                                 ppf
                                 [0: [12: ';' [17: [0: "@ " 1 0] 0a]] ";@ "]))
                             (before typing/includemod.ml(203):7315-7334
                               (after typing/includemod.ml(203):7315-7334
                                 (apply print_list pr ppf l))))))))
                   (before typing/includemod.ml(202):7256-7264
                     (after typing/includemod.ml(202):7256-7264
                       (apply pr ppf a)))))
               (before typing/includemod.ml(201):7242-7244 0a)))))
      (let
        (print_list =
           (function pr ppf l
             (funct-body typing/includemod.ml(204)<ghost>:7350-7410
               (before typing/includemod.ml(205):7363-7410
                 (after typing/includemod.ml(205):7363-7410
                   (apply (field 122 (global Stdlib__format!)) ppf
                     [0:
                      [12:
                       '[' [18: [1: [0: 0a ""]] [15: [17: 0a [12: ']' 0a]]]]]
                      "[@[%a@]]"]
                     (after typing/includemod.ml(205):7393-7408
                       (apply print_list pr))
                     l))))))
        (letrec
          (print_coercion
             (function ppf c
               (funct-body typing/includemod.ml(207)<ghost>:7435-8061
                 (before typing/includemod.ml(208):7445-8061
                   (let
                     (pr =
                        (function fmt
                          (funct-body typing/includemod.ml(208)<ghost>:7452-7480
                            (before typing/includemod.ml(208):7458-7480
                              (after typing/includemod.ml(208):7458-7480
                                (apply (field 122 (global Stdlib__format!))
                                  ppf fmt))))))
                     (before typing/includemod.ml(209):7486-8061
                       (switch* c
                        case int 0:
                         (before typing/includemod.ml(210):7519-7526
                           (after typing/includemod.ml(210):7519-7526
                             (apply pr [0: [11: "id" 0a] "id"])))
                        case tag 0:
                         (let (nl =a (field 1 c) fl =a (field 0 c))
                           (before typing/includemod.ml(212):7567-7673
                             (after typing/includemod.ml(212):7567-7673
                               (apply pr
                                 [0:
                                  [18:
                                   [1: [0: [11: "<2>" 0a] "<2>"]]
                                   [11:
                                    "struct"
                                    [17:
                                     [0: "@ " 1 0]
                                     [15:
                                      [17: [0: "@ " 1 0] [15: [17: 0a 0a]]]]]]]
                                  "@[<2>struct@ %a@ %a@]"]
                                 (after typing/includemod.ml(213):7602-7630
                                   (apply print_list print_coercion2))
                                 fl
                                 (after typing/includemod.ml(214):7642-7670
                                   (apply print_list print_coercion3))
                                 nl))))
                        case tag 1:
                         (let (out =a (field 1 c) inp =a (field 0 c))
                           (before typing/includemod.ml(216):7714-7799
                             (after typing/includemod.ml(216):7714-7799
                               (apply pr
                                 [0:
                                  [18:
                                   [1: [0: [11: "<2>" 0a] "<2>"]]
                                   [11:
                                    "functor"
                                    [17:
                                     [0: "@ " 1 0]
                                     [12:
                                      '('
                                      [15:
                                       [12:
                                        ')'
                                        [17:
                                         [0: "@ " 1 0]
                                         [12:
                                          '(' [15: [12: ')' [17: 0a 0a]]]]]]]]]]]
                                  "@[<2>functor@ (%a)@ (%a)@]"]
                                 print_coercion inp print_coercion out))))
                        case tag 2:
                         (let
                           (*match* =a (field 0 c)
                            pc_type =a (field 1 *match*)
                            pc_desc =a (field 0 *match*))
                           (before typing/includemod.ml(220):7863-7948
                             (after typing/includemod.ml(220):7863-7948
                               (apply pr
                                 [0:
                                  [11:
                                   "prim "
                                   [2:
                                    0a
                                    [17:
                                     [0: "@ " 1 0]
                                     [12: '(' [15: [12: ')' 0a]]]]]]
                                  "prim %s@ (%a)"]
                                 (field 0 pc_desc)
                                 (field 7 (global Printtyp!)) pc_type))))
                        case tag 3:
                         (let (c =a (field 2 c) p =a (field 1 c))
                           (before typing/includemod.ml(223):7986-8061
                             (after typing/includemod.ml(223):7986-8061
                               (apply pr
                                 [0:
                                  [18:
                                   [1: [0: [11: "<2>" 0a] "<2>"]]
                                   [11:
                                    "alias "
                                    [15:
                                     [17:
                                      [0: "@ " 1 0]
                                      [12: '(' [15: [12: ')' [17: 0a 0a]]]]]]]]
                                  "@[<2>alias %a@ (%a)@]"]
                                 (field 3 (global Printtyp!)) p
                                 print_coercion c))))))))))
            print_coercion2
              (function ppf param
                (funct-body typing/includemod.ml(226)<ghost>:8082-8148
                  (let (c =a (field 1 param) n =a (field 0 param))
                    (before typing/includemod.ml(227):8097-8148
                      (after typing/includemod.ml(227):8097-8148
                        (apply (field 122 (global Stdlib__format!)) ppf
                          [0:
                           [18:
                            [1: [0: 0a ""]]
                            [4:
                             0a 0a 0a
                             [12: ',' [17: [0: "@ " 1 0] [15: [17: 0a 0a]]]]]]
                           "@[%d,@ %a@]"]
                          n print_coercion c))))))
            print_coercion3
              (function ppf param
                (funct-body typing/includemod.ml(228)<ghost>:8169-8268
                  (let
                    (c =a (field 2 param)
                     n =a (field 1 param)
                     i =a (field 0 param))
                    (before typing/includemod.ml(229):8187-8268
                      (after typing/includemod.ml(229):8187-8268
                        (apply (field 122 (global Stdlib__format!)) ppf
                          [0:
                           [18:
                            [1: [0: 0a ""]]
                            [2:
                             0a
                             [11:
                              ", "
                              [4:
                               0a 0a 0a
                               [12:
                                ',' [17: [0: "@ " 1 0] [15: [17: 0a 0a]]]]]]]]
                           "@[%s, %d,@ %a@]"]
                          (after typing/includemod.ml(230):8228-8249
                            (apply (field 15 (global Ident!)) i))
                          n print_coercion c)))))))
          (let
            (simplify_structure_coercion =
               (function cc id_pos_list
                 (funct-body typing/includemod.ml(234)<ghost>:8339-8612
                   (before typing/includemod.ml(235):8358-8612
                     (letrec
                       (is_identity_coercion
                          (function pos[int] param
                            (funct-body typing/includemod.ml(235)<ghost>:8387-8515
                              (if param
                                (let
                                  (rem =a (field 1 param)
                                   *match* =a (field 0 param)
                                   c =a (field 1 *match*)
                                   n =a (field 0 *match*))
                                  (before typing/includemod.ml(239):8450-8515
                                    (&& (== n pos)
                                      (&& (== c 0a)
                                        (after typing/includemod.ml(239):8481-8515
                                          (apply is_identity_coercion
                                            (+ pos 1) rem))))))
                                (before typing/includemod.ml(237):8418-8422
                                  1a)))))
                       (before typing/includemod.ml(240):8521-8612
                         (if
                           (after typing/includemod.ml(240):8524-8549
                             (apply is_identity_coercion 0 cc))
                           (before typing/includemod.ml(241):8557-8569 0a)
                           (before typing/includemod.ml(242):8577-8612
                             (makeblock 0 cc id_pos_list)))))))))
            (letrec
              (modtypes
                 (function loc env mark cxt subst mty1 mty2
                   (funct-body typing/includemod.ml(248)<ghost>:8776-9275
                     (before typing/includemod.ml(249):8815-9275
                       (try
                         (after typing/includemod.ml(250):8823-8870
                           (apply try_modtypes loc env mark cxt subst mty1
                             mty2))
                        with err
                         (if (== err Dont_match)
                           (before typing/includemod.ml(253):8902-8999
                             (raise
                               (after typing/includemod.ml(253):8907-8999
                                 (makeblock 0 Error
                                   (makeblock 0
                                     (makeblock 0 cxt env
                                       (makeblock 4 mty1
                                         (after typing/includemod.ml(254):8961-8996
                                           (apply (field 18 (global Subst!))
                                             1a subst mty2))))
                                     0a)))))
                           (let (tag =a (field 0 err))
                             (if (== tag Error)
                               (let (reasons =a (field 1 err))
                                 (before typing/includemod.ml(256):9034-9275
                                   (let (*match* = mty1 *match* = mty2)
                                     (catch
                                       (switch *match*
                                        case tag 3: (exit 13)
                                        default:
                                         (switch *match*
                                          case tag 3: (exit 13)
                                          default:
                                           (before typing/includemod.ml(260):9138-9275
                                             (raise
                                               (after typing/includemod.ml(260):9143-9275
                                                 (makeblock 0 Error
                                                   (makeblock 0
                                                     (makeblock 0 cxt env
                                                       (makeblock 4 mty1
                                                         (after typing/includemod.ml(261):9203-9238
                                                           (apply
                                                             (field 18
                                                               (global Subst!))
                                                             1a subst mty2))))
                                                     reasons)))))))
                                      with (13)
                                       (before typing/includemod.ml(258):9105-9114
                                         (reraise
                                           (after typing/includemod.ml(258):9111-9114
                                             err)))))))
                               (reraise err))))))))
                try_modtypes
                  (function loc env mark cxt subst mty1 mty2
                    (funct-body typing/includemod.ml(264)<ghost>:9294-11463
                      (before typing/includemod.ml(265):9333-11463
                        (let (*match* = mty1 *match* = mty2)
                          (catch
                            (catch
                              (switch* *match*
                               case tag 0:
                                (let (p1 =a (field 0 *match*))
                                  (before typing/includemod.ml(289):10212-10241
                                    (if
                                      (after typing/includemod.ml(289):10212-10241
                                        (apply may_expand_module_path env p1))
                                      (before typing/includemod.ml(290):10251-10333
                                        (after typing/includemod.ml(290):10251-10333
                                          (apply try_modtypes loc env mark
                                            cxt subst
                                            (after typing/includemod.ml(291):10297-10328
                                              (apply expand_module_path env
                                                cxt p1))
                                            mty2)))
                                      (exit 22))))
                               case tag 1:
                                (let (sig1 =a (field 0 *match*))
                                  (switch* *match*
                                   case tag 0: (exit 22)
                                   case tag 1:
                                    (let (sig2 =a (field 0 *match*))
                                      (before typing/includemod.ml(295):10488-10533
                                        (after typing/includemod.ml(295):10488-10533
                                          (apply signatures loc env mark cxt
                                            subst sig1 sig2))))
                                   case tag 2: (exit 21)
                                   case tag 3: (exit 21)))
                               case tag 2:
                                (let
                                  (*match* =a (field 1 *match*)
                                   param1 =a (field 0 *match*))
                                  (if *match*
                                    (let
                                      (res1 =a (field 2 *match*)
                                       arg1 =a (field 0 *match*))
                                      (switch* *match*
                                       case tag 0: (exit 22)
                                       case tag 1: (exit 21)
                                       case tag 2:
                                        (let (*match* =a (field 1 *match*))
                                          (if *match*
                                            (let
                                              (param1 =a param1
                                               res2 =a (field 2 *match*)
                                               arg2 =a (field 0 *match*)
                                               param2 =a (field 0 *match*))
                                              (before typing/includemod.ml(304):10884-11426
                                                (let
                                                  (arg2' =
                                                     (after typing/includemod.ml(304):10896-10925
                                                       (apply
                                                         (field 18
                                                           (global Subst!))
                                                         0a subst arg2)))
                                                  (before typing/includemod.ml(305):10935-11426
                                                    (let
                                                      (cc_arg =
                                                         (after typing/includemod.ml(306):10956-11052
                                                           (apply modtypes
                                                             loc env
                                                             (after typing/includemod.ml(306):10980-10998
                                                               (apply
                                                                 negate_mark
                                                                 mark))
                                                             (makeblock 0
                                                               (makeblock 2
                                                                 param1)
                                                               cxt)
                                                             (field 0
                                                               (global Subst!))
                                                             arg2' arg1)))
                                                      (before typing/includemod.ml(309):11068-11426
                                                        (let
                                                          (cc_res =
                                                             (after typing/includemod.ml(310):11089-11265
                                                               (apply
                                                                 modtypes loc
                                                                 (after typing/includemod.ml(310):11103-11147
                                                                   (apply
                                                                    (field 50
                                                                    (global Env!))
                                                                    0a param1
                                                                    0a arg2'
                                                                    env))
                                                                 mark
                                                                 (makeblock 0
                                                                   (makeblock 3
                                                                    param1)
                                                                   cxt)
                                                                 (after typing/includemod.ml(312):11193-11245
                                                                   (apply
                                                                    (field 4
                                                                    (global Subst!))
                                                                    param2
                                                                    (makeblock 0
                                                                    param1)
                                                                    subst))
                                                                 res1 res2)))
                                                          (before typing/includemod.ml(315):11281-11426
                                                            (let
                                                              (*match* =
                                                                 cc_arg
                                                               *match* =
                                                                 cc_res)
                                                              (catch
                                                                (if
                                                                  (isint
                                                                    *match*)
                                                                  (if
                                                                    (isint
                                                                    *match*)
                                                                    (before typing/includemod.ml(316):11357-11369
                                                                    0a)
                                                                    (exit 20))
                                                                  (exit 20))
                                                               with (20)
                                                                (before typing/includemod.ml(317):11385-11416
                                                                  (makeblock 1
                                                                    cc_arg
                                                                    cc_res))))))))))))
                                            (exit 21)))
                                       case tag 3: (exit 21)))
                                    (let (res1 =a (field 2 *match*))
                                      (switch* *match*
                                       case tag 0: (exit 22)
                                       case tag 1: (exit 21)
                                       case tag 2:
                                        (let (*match* =a (field 1 *match*))
                                          (if *match* (exit 21)
                                            (let (res2 =a (field 2 *match*))
                                              (before typing/includemod.ml(297):10613-10788
                                                (let
                                                  (cc =
                                                     (after typing/includemod.ml(298):10631-10689
                                                       (apply modtypes loc
                                                         env mark
                                                         (makeblock 0
                                                           (makeblock 3
                                                             param1)
                                                           cxt)
                                                         subst res1 res2)))
                                                  (if (isint cc)
                                                    (before typing/includemod.ml(299):10719-10731
                                                      0a)
                                                    (before typing/includemod.ml(300):10746-10780
                                                      (makeblock 1 0a cc))))))))
                                       case tag 3: (exit 21)))))
                               case tag 3:
                                (let (p1 =a (field 0 *match*))
                                  (switch *match*
                                   case tag 3:
                                    (let (p2 =a (field 0 *match*))
                                      (before typing/includemod.ml(267):9395-9772
                                        (seq
                                          (if
                                            (after typing/includemod.ml(267):9398-9423
                                              (apply (field 26 (global Env!))
                                                p2 env))
                                            (before typing/includemod.ml(268):9437-9485
                                              (raise
                                                (after typing/includemod.ml(268):9443-9485
                                                  (makeblock 0 Error
                                                    (makeblock 0
                                                      (makeblock 0 cxt env
                                                        (makeblock 12 p2))
                                                      0a)))))
                                            0a)
                                          (before typing/includemod.ml(269):9493-9772
                                            (seq
                                              (if
                                                (not
                                                  (after typing/includemod.ml(269):9500-9517
                                                    (apply
                                                      (field 0
                                                        (global Path!))
                                                      p1 p2)))
                                                (before typing/includemod.ml(269):9523-9752
                                                  (let
                                                    (p1 =
                                                       (after typing/includemod.ml(270):9546-9583
                                                         (apply
                                                           (field 27
                                                             (global Env!))
                                                           0a env p1))
                                                     p2 =
                                                       (after typing/includemod.ml(271):9601-9676
                                                         (apply
                                                           (field 27
                                                             (global Env!))
                                                           0a env
                                                           (after typing/includemod.ml(272):9648-9676
                                                             (apply
                                                               (field 9
                                                                 (global Subst!))
                                                               subst p2)))))
                                                    (before typing/includemod.ml(274):9696-9742
                                                      (if
                                                        (not
                                                          (after typing/includemod.ml(274):9703-9720
                                                            (apply
                                                              (field 0
                                                                (global Path!))
                                                              p1 p2)))
                                                        (before typing/includemod.ml(274):9726-9742
                                                          (raise
                                                            (after typing/includemod.ml(274):9732-9742
                                                              Dont_match)))
                                                        0a))))
                                                0a)
                                              (before typing/includemod.ml(276):9760-9772
                                                0a))))))
                                   default:
                                    (let (p1 =a p1)
                                      (before typing/includemod.ml(277):9798-10184
                                        (let
                                          (p1 =
                                             (try
                                               (after typing/includemod.ml(279):9831-9884
                                                 (apply
                                                   (field 27 (global Env!))
                                                   (makeblock 0
                                                     (field 0
                                                       (global Location!)))
                                                   env p1))
                                              with exn
                                               (catch
                                                 (let (tag =a (field 0 exn))
                                                   (if
                                                     (== tag
                                                       (field 86
                                                         (global Env!)))
                                                     (let
                                                       (*match* =a
                                                          (field 1 exn))
                                                       (switch* *match*
                                                        case tag 0:
                                                         (let
                                                           (path =a
                                                              (field 2
                                                                *match*))
                                                           (before typing/includemod.ml(281):9951-10000
                                                             (raise
                                                               (after typing/includemod.ml(281):9957-10000
                                                                 (makeblock 0
                                                                   Error
                                                                   (makeblock 0
                                                                    (makeblock 0
                                                                    cxt env
                                                                    (makeblock 11
                                                                    path))
                                                                    0a))))))
                                                        case tag 1: (exit 18)))
                                                     (exit 18)))
                                                with (18) (reraise exn))))
                                          (before typing/includemod.ml(283):10016-10176
                                            (let
                                              (mty1 =
                                                 (after typing/includemod.ml(284):10035-10117
                                                   (apply
                                                     (field 4
                                                       (global Mtype!))
                                                     1a env
                                                     (after typing/includemod.ml(285):10082-10114
                                                       (apply
                                                         expand_module_alias
                                                         env cxt p1))
                                                     p1)))
                                              (before typing/includemod.ml(287):10133-10176
                                                (after typing/includemod.ml(287):10133-10176
                                                  (apply modtypes loc env
                                                    mark cxt subst mty1 mty2)))))))))))
                             with (22)
                              (switch *match*
                               case tag 0:
                                (before typing/includemod.ml(293):10364-10433
                                  (after typing/includemod.ml(293):10364-10433
                                    (apply try_modtypes2 loc env mark cxt
                                      mty1
                                      (after typing/includemod.ml(293):10402-10433
                                        (apply (field 18 (global Subst!)) 0a
                                          subst mty2)))))
                               default: (exit 21)))
                           with (21)
                            (before typing/includemod.ml(320):11447-11463
                              (raise
                                (after typing/includemod.ml(320):11453-11463
                                  Dont_match))))))))
                try_modtypes2
                  (function loc env mark cxt mty1 mty2
                    (funct-body typing/includemod.ml(322)<ghost>:11483-11937
                      (before typing/includemod.ml(324):11546-11937
                        (let (*match* = mty1 *match* = mty2)
                          (catch
                            (catch
                              (switch *match*
                               case tag 0:
                                (switch *match*
                                 case tag 0:
                                  (let
                                    (p2 =a (field 0 *match*)
                                     p1 =a (field 0 *match*))
                                    (before typing/includemod.ml(326):11612-11720
                                      (if
                                        (after typing/includemod.ml(326):11612-11720
                                          (apply (field 0 (global Path!))
                                            (after typing/includemod.ml(326):11622-11661
                                              (apply (field 29 (global Env!))
                                                0a env p1))
                                            (after typing/includemod.ml(327):11681-11720
                                              (apply (field 29 (global Env!))
                                                0a env p2))))
                                        (before typing/includemod.ml(328):11730-11742
                                          0a)
                                        (exit 25))))
                                 default: (exit 24))
                               default: (exit 25))
                             with (25)
                              (switch *match*
                               case tag 0:
                                (let (p2 =a (field 0 *match*))
                                  (before typing/includemod.ml(329):11770-11799
                                    (if
                                      (after typing/includemod.ml(329):11770-11799
                                        (apply may_expand_module_path env p2))
                                      (before typing/includemod.ml(330):11809-11900
                                        (after typing/includemod.ml(330):11809-11900
                                          (apply try_modtypes loc env mark
                                            cxt (field 0 (global Subst!))
                                            mty1
                                            (after typing/includemod.ml(331):11869-11900
                                              (apply expand_module_path env
                                                cxt p2)))))
                                      (exit 24))))
                               default: (exit 24)))
                           with (24)
                            (before typing/includemod.ml(333):11921-11937
                              (raise
                                (after typing/includemod.ml(333):11927-11937
                                  Dont_match))))))))
                signatures
                  (function loc env mark cxt subst sig1 sig2
                    (funct-body typing/includemod.ml(337)<ghost>:11990-15865
                      (before typing/includemod.ml(339):12087-15865
                        (let
                          (new_env =
                             (after typing/includemod.ml(340):12105-12155
                               (apply (field 60 (global Env!)) sig1
                                 (after typing/includemod.ml(340):12128-12155
                                   (apply (field 94 (global Env!)) 1a env)))))
                          (before typing/includemod.ml(342):12197-15865
                            (let
                              (*match* =
                                 (after typing/includemod.ml(343):12223-12457
                                   (apply (field 20 (global Stdlib__list!))
                                     (function param item
                                       (funct-body typing/includemod.ml(344):12244-12438
                                         (let
                                           (pos =a (field 1 param)
                                            l =a (field 0 param))
                                           (catch
                                             (switch item
                                              case tag 3:
                                               (let
                                                 (*match* =a (field 1 item))
                                                 (if *match* (exit 55)
                                                   (let
                                                     (id =a (field 0 item))
                                                     (before typing/includemod.ml(346):12331-12365
                                                       (makeblock 0 (*,int)
                                                         (makeblock 0
                                                           (makeblock 0 (*,int,*)
                                                             id pos 0a)
                                                           l)
                                                         (+ pos 1))))))
                                              default: (exit 55))
                                            with (55)
                                             (before typing/includemod.ml(347):12384-12437
                                               (makeblock 0 (*,int) l
                                                 (if
                                                   (after typing/includemod.ml(347):12391-12416
                                                     (apply
                                                       is_runtime_component
                                                       item))
                                                   (before typing/includemod.ml(347):12422-12427
                                                     (+ pos 1))
                                                   (before typing/includemod.ml(347):12433-12436
                                                     pos))))))))
                                     [0: 0a 0] sig1))
                               id_pos_list =a (field 0 *match*))
                              (before typing/includemod.ml(351):12596-15865
                                (letrec
                                  (build_component_table
                                     (function pos[int] tbl param
                                       (funct-body typing/includemod.ml(351)<ghost>:12626-13394
                                         (if param
                                           (let (item =a (field 0 param))
                                             (catch
                                               (catch
                                                 (catch
                                                   (switch item
                                                    case tag 0: (exit 53)
                                                    case tag 3:
                                                     (let
                                                       (*match* =a
                                                          (field 4 item))
                                                       (if *match* (exit 51)
                                                         (exit 52)))
                                                    case tag 4: (exit 53)
                                                    default:
                                                     (let
                                                       (*match* =a
                                                          (field 3 item))
                                                       (if *match* (exit 51)
                                                         (exit 52))))
                                                  with (53)
                                                   (let
                                                     (*match* =a
                                                        (field 2 item))
                                                     (if *match* (exit 51)
                                                       (exit 52))))
                                                with (52)
                                                 (let
                                                   (item =a item
                                                    rem =a (field 1 param))
                                                   (before typing/includemod.ml(364):13118-13394
                                                     (let
                                                       (*match* =
                                                          (after typing/includemod.ml(364):13141-13161
                                                            (apply
                                                              item_ident_name
                                                              item))
                                                        name =a
                                                          (field 2 *match*)
                                                        id =a
                                                          (field 0 *match*))
                                                       (before typing/includemod.ml(365):13173-13394
                                                         (catch
                                                           (if
                                                             (after typing/includemod.ml(366):13205-13230
                                                               (apply
                                                                 is_runtime_component
                                                                 item))
                                                             (before typing/includemod.ml(366):13236-13248
                                                               (let
                                                                 (nextpos =
                                                                    (+ pos 1)
                                                                  pos =a[int]
                                                                    pos)
                                                                 (exit 43
                                                                   nextpos
                                                                   pos)))
                                                             (before typing/includemod.ml(367):13264-13271
                                                               (let
                                                                 (nextpos =a[int]
                                                                    pos
                                                                  pos = -1)
                                                                 (exit 43
                                                                   nextpos
                                                                   pos))))
                                                          with (43 nextpos[int] pos[int])
                                                           (before typing/includemod.ml(369):13291-13394
                                                             (after typing/includemod.ml(369):13291-13394
                                                               (apply
                                                                 build_component_table
                                                                 nextpos
                                                                 (after typing/includemod.ml(370):13351-13390
                                                                   (apply
                                                                    (field 3
                                                                    FieldMap)
                                                                    name
                                                                    (makeblock 0 (*,*,int)
                                                                    id item
                                                                    pos) tbl))
                                                                 rem)))))))))
                                              with (51)
                                               (let (rem =a (field 1 param))
                                                 (before typing/includemod.ml(361):12950-13055
                                                   (let
                                                     (pos =[int]
                                                        (if
                                                          (after typing/includemod.ml(361):12963-12988
                                                            (apply
                                                              is_runtime_component
                                                              item))
                                                          (before typing/includemod.ml(361):12994-13001
                                                            (+ pos 1))
                                                          (before typing/includemod.ml(361):13007-13010
                                                            pos)))
                                                     (before typing/includemod.ml(362):13022-13055
                                                       (after typing/includemod.ml(362):13022-13055
                                                         (apply
                                                           build_component_table
                                                           pos tbl rem))))))))
                                           (before typing/includemod.ml(352):12657-12665
                                             (makeblock 0 (int,*) pos tbl))))))
                                  (before typing/includemod.ml(371):13400-15865
                                    (let
                                      (*match* =
                                         (after typing/includemod.ml(372):13423-13466
                                           (apply build_component_table 0
                                             (field 0 FieldMap) sig1))
                                       comps1 =a (field 1 *match*)
                                       len1 =a (field 0 *match*))
                                      (before typing/includemod.ml(373):13472-15865
                                        (let
                                          (len2 =[int]
                                             (after typing/includemod.ml(374):13487-13583
                                               (apply
                                                 (field 20
                                                   (global Stdlib__list!))
                                                 (function n[int] i : int
                                                   (funct-body typing/includemod.ml(375):13508-13564
                                                     (before typing/includemod.ml(375):13520-13563
                                                       (if
                                                         (after typing/includemod.ml(375):13523-13545
                                                           (apply
                                                             is_runtime_component
                                                             i))
                                                         (before typing/includemod.ml(375):13551-13556
                                                           (+ n 1))
                                                         (before typing/includemod.ml(375):13562-13563
                                                           n)))))
                                                 0 sig2)))
                                          (before typing/includemod.ml(384):13877-15865
                                            (letrec
                                              (pair_components
                                                 (function subst paired
                                                   unpaired param
                                                   (funct-body typing/includemod.ml(384)<ghost>:13901-15760
                                                     (if param
                                                       (let
                                                         (rem =a
                                                            (field 1 param)
                                                          item2 =a
                                                            (field 0 param))
                                                         (before typing/includemod.ml(399):14408-15760
                                                           (let
                                                             (*match* =
                                                                (after typing/includemod.ml(399):14432-14453
                                                                  (apply
                                                                    item_ident_name
                                                                    item2))
                                                              name2 =a
                                                                (field 2
                                                                  *match*)
                                                              loc =a
                                                                (field 1
                                                                  *match*)
                                                              id2 =a
                                                                (field 0
                                                                  *match*))
                                                             (before typing/includemod.ml(400):14465-15760
                                                               (catch
                                                                 (let
                                                                   (*match* =
                                                                    item2
                                                                    *match* =
                                                                    name2)
                                                                   (catch
                                                                    (let
                                                                    (*match* =
                                                                    (switch *match*
                                                                    case tag 1:
                                                                    (let
                                                                    (*match* =a
                                                                    (field 1
                                                                    *match*)
                                                                    *match* =a
                                                                    (field 4
                                                                    *match*))
                                                                    (if
                                                                    *match*
                                                                    (exit 32)
                                                                    (switch *match*
                                                                    case tag 1:
                                                                    (let
                                                                    (s =a
                                                                    (field 0
                                                                    *match*))
                                                                    (before typing/includemod.ml(403):14603-14622
                                                                    (if
                                                                    (after typing/includemod.ml(403):14603-14622
                                                                    (apply
                                                                    (field 25
                                                                    (global Btype!))
                                                                    s))
                                                                    (before typing/includemod.ml(406):14751-14807
                                                                    (makeblock 0
                                                                    (makeblock 1
                                                                    (after typing/includemod.ml(406):14762-14800
                                                                    (apply
                                                                    (field 3
                                                                    (global Stdlib__string!))
                                                                    s 0
                                                                    (-
                                                                    (string.length
                                                                    s) 4))))
                                                                    0a))
                                                                    (exit 32))))
                                                                    default:
                                                                    (exit 32))))
                                                                    default:
                                                                    (exit 32))
                                                                    report =a
                                                                    (field 1
                                                                    *match*)
                                                                    name2 =a
                                                                    (field 0
                                                                    *match*))
                                                                    (exit 33
                                                                    report
                                                                    name2))
                                                                    with (32)
                                                                    (before typing/includemod.ml(407):14825-14836
                                                                    (let
                                                                    (report =
                                                                    1a
                                                                    name2 =a
                                                                    name2)
                                                                    (exit 33
                                                                    report
                                                                    name2)))))
                                                                with (33 report name2)
                                                                 (before typing/includemod.ml(409):14856-15760
                                                                   (try
                                                                    (let
                                                                    (*match* =
                                                                    (after typing/includemod.ml(410):14901-14927
                                                                    (apply
                                                                    (field 26
                                                                    FieldMap)
                                                                    name2
                                                                    comps1))
                                                                    pos1 =a
                                                                    (field 2
                                                                    *match*)
                                                                    item1 =a
                                                                    (field 1
                                                                    *match*)
                                                                    id1 =a
                                                                    (field 0
                                                                    *match*))
                                                                    (before typing/includemod.ml(411):14941-15486
                                                                    (let
                                                                    (new_subst =
                                                                    (switch item2
                                                                    case tag 1:
                                                                    (before typing/includemod.ml(414):15030-15072
                                                                    (after typing/includemod.ml(414):15030-15072
                                                                    (apply
                                                                    (field 1
                                                                    (global Subst!))
                                                                    id2
                                                                    (makeblock 0
                                                                    id1)
                                                                    subst)))
                                                                    case tag 3:
                                                                    (before typing/includemod.ml(416):15119-15163
                                                                    (after typing/includemod.ml(416):15119-15163
                                                                    (apply
                                                                    (field 4
                                                                    (global Subst!))
                                                                    id2
                                                                    (makeblock 0
                                                                    id1)
                                                                    subst)))
                                                                    case tag 4:
                                                                    (before typing/includemod.ml(418):15211-15268
                                                                    (after typing/includemod.ml(418):15211-15268
                                                                    (apply
                                                                    (field 6
                                                                    (global Subst!))
                                                                    id2
                                                                    (makeblock 0
                                                                    (makeblock 0
                                                                    id1))
                                                                    subst)))
                                                                    default:
                                                                    (before typing/includemod.ml(421):15374-15379
                                                                    subst)))
                                                                    (before typing/includemod.ml(423):15403-15486
                                                                    (after typing/includemod.ml(423):15403-15486
                                                                    (apply
                                                                    pair_components
                                                                    new_subst
                                                                    (makeblock 0
                                                                    (makeblock 0 (*,*,int)
                                                                    item1
                                                                    item2
                                                                    pos1)
                                                                    paired)
                                                                    unpaired
                                                                    rem))))))
                                                                    with exn
                                                                    (if
                                                                    (== exn
                                                                    (field 7
                                                                    (global Stdlib!)))
                                                                    (before typing/includemod.ml(426):15523-15748
                                                                    (let
                                                                    (unpaired =
                                                                    (if
                                                                    report
                                                                    (before typing/includemod.ml(428):15579-15667
                                                                    (makeblock 0
                                                                    (makeblock 0
                                                                    cxt env
                                                                    (makeblock 0
                                                                    id2 loc
                                                                    (after typing/includemod.ml(428):15615-15639
                                                                    (apply
                                                                    kind_of_field_desc
                                                                    name2))))
                                                                    unpaired))
                                                                    (before typing/includemod.ml(430):15685-15693
                                                                    unpaired)))
                                                                    (before typing/includemod.ml(431):15707-15748
                                                                    (after typing/includemod.ml(431):15707-15748
                                                                    (apply
                                                                    pair_components
                                                                    subst
                                                                    paired
                                                                    unpaired
                                                                    rem)))))
                                                                    (reraise
                                                                    exn)))))))))
                                                       (before typing/includemod.ml(386):13954-14377
                                                         (if unpaired
                                                           (before typing/includemod.ml(396):14344-14365
                                                             (raise
                                                               (after typing/includemod.ml(396):14349-14365
                                                                 (makeblock 0
                                                                   Error
                                                                   unpaired))))
                                                           (before typing/includemod.ml(388):14012-14325
                                                             (let
                                                               (cc =
                                                                  (after typing/includemod.ml(389):14037-14126
                                                                    (apply
                                                                    signature_components
                                                                    loc env
                                                                    mark
                                                                    new_env
                                                                    cxt subst
                                                                    (after typing/includemod.ml(390):14109-14126
                                                                    (apply
                                                                    (field 8
                                                                    (global Stdlib__list!))
                                                                    paired)))))
                                                               (before typing/includemod.ml(392):14158-14325
                                                                 (if
                                                                   (== len1
                                                                    len2)
                                                                   (before typing/includemod.ml(393):14212-14254
                                                                    (after typing/includemod.ml(393):14212-14254
                                                                    (apply
                                                                    simplify_structure_coercion
                                                                    cc
                                                                    id_pos_list)))
                                                                   (before typing/includemod.ml(395):14290-14325
                                                                    (makeblock 0
                                                                    cc
                                                                    id_pos_list))))))))))))
                                              (before typing/includemod.ml(434):15833-15865
                                                (after typing/includemod.ml(434):15833-15865
                                                  (apply pair_components
                                                    subst 0a 0a sig2)))))))))))))))))
                signature_components
                  (function loc old_env mark env cxt subst paired
                    (funct-body typing/includemod.ml(438)<ghost>:15938-17849
                      (before typing/includemod.ml(439):15982-17849
                        (let
                          (comps_rec =
                             (function rem
                               (funct-body typing/includemod.ml(439)<ghost>:15996-16063
                                 (before typing/includemod.ml(440):16006-16063
                                   (after typing/includemod.ml(440):16006-16063
                                     (apply signature_components loc old_env
                                       mark env cxt subst rem))))))
                          (before typing/includemod.ml(442):16071-17849
                            (catch
                              (if paired
                                (let
                                  (*match* =a (field 0 paired)
                                   *match* =a (field 0 *match*))
                                  (switch* *match*
                                   case tag 0:
                                    (let (*match* =a (field 1 *match*))
                                      (switch *match*
                                       case tag 0:
                                        (let
                                          (rem =a (field 1 paired)
                                           pos =a (field 2 *match*)
                                           valdecl2 =a (field 1 *match*)
                                           valdecl1 =a (field 1 *match*)
                                           id1 =a (field 0 *match*))
                                          (before typing/includemod.ml(445):16187-16405
                                            (let
                                              (cc =
                                                 (after typing/includemod.ml(446):16204-16269
                                                   (apply value_descriptions
                                                     loc env mark cxt subst
                                                     id1 valdecl1 valdecl2)))
                                              (before typing/includemod.ml(448):16285-16405
                                                (let
                                                  (*match* =
                                                     (field 1 valdecl2))
                                                  (catch
                                                    (switch *match*
                                                     case tag 0:
                                                      (before typing/includemod.ml(449):16342-16355
                                                        (after typing/includemod.ml(449):16342-16355
                                                          (apply comps_rec
                                                            rem)))
                                                     default: (exit 59))
                                                   with (59)
                                                    (before typing/includemod.ml(450):16369-16395
                                                      (makeblock 0
                                                        (makeblock 0 (int,*)
                                                          pos cc)
                                                        (after typing/includemod.ml(450):16382-16395
                                                          (apply comps_rec
                                                            rem))))))))))
                                       default: (exit 62)))
                                   case tag 1:
                                    (let (*match* =a (field 1 *match*))
                                      (switch *match*
                                       case tag 1:
                                        (let
                                          (rem =a (field 1 paired)
                                           tydecl2 =a (field 1 *match*)
                                           tydecl1 =a (field 1 *match*)
                                           id1 =a (field 0 *match*))
                                          (before typing/includemod.ml(454):16498-16590
                                            (seq
                                              (after typing/includemod.ml(454):16498-16569
                                                (apply type_declarations loc
                                                  env mark
                                                  (makeblock 0 old_env) cxt
                                                  subst id1 tydecl1 tydecl2))
                                              (before typing/includemod.ml(455):16577-16590
                                                (after typing/includemod.ml(455):16577-16590
                                                  (apply comps_rec rem))))))
                                       default: (exit 62)))
                                   case tag 2:
                                    (let (*match* =a (field 1 *match*))
                                      (switch *match*
                                       case tag 2:
                                        (let
                                          (rem =a (field 1 paired)
                                           pos =a (field 2 *match*)
                                           ext2 =a (field 1 *match*)
                                           ext1 =a (field 1 *match*)
                                           id1 =a (field 0 *match*))
                                          (before typing/includemod.ml(458):16680-16785
                                            (seq
                                              (after typing/includemod.ml(458):16680-16741
                                                (apply extension_constructors
                                                  loc env mark cxt subst id1
                                                  ext1 ext2))
                                              (before typing/includemod.ml(459):16749-16785
                                                (makeblock 0
                                                  (makeblock 0 (int,*) pos
                                                    0a)
                                                  (after typing/includemod.ml(459):16772-16785
                                                    (apply comps_rec rem)))))))
                                       default: (exit 62)))
                                   case tag 3:
                                    (let (*match* =a (field 1 *match*))
                                      (switch *match*
                                       case tag 3:
                                        (let
                                          (rem =a (field 1 paired)
                                           pos =a (field 2 *match*)
                                           mty2 =a (field 2 *match*)
                                           pres2 =a (field 1 *match*)
                                           mty1 =a (field 2 *match*)
                                           pres1 =a (field 1 *match*)
                                           id1 =a (field 0 *match*))
                                          (before typing/includemod.ml(461):16884-17284
                                            (let
                                              (cc =
                                                 (after typing/includemod.ml(462):16905-16963
                                                   (apply module_declarations
                                                     loc env mark cxt subst
                                                     id1 mty1 mty2)))
                                              (before typing/includemod.ml(463):16973-17276
                                                (let
                                                  (rem =
                                                     (after typing/includemod.ml(463):16983-16996
                                                       (apply comps_rec rem)))
                                                  (before typing/includemod.ml(464):17006-17276
                                                    (let
                                                      (*match* =
                                                         (field 0 mty1)
                                                       *match* = pres1
                                                       *match* = pres2
                                                       *match* = *match*)
                                                      (catch
                                                        (if *match*
                                                          (if *match*
                                                            (exit 60)
                                                            (switch *match*
                                                             case tag 3:
                                                              (let
                                                                (p1 =a
                                                                   (field 0
                                                                    *match*))
                                                                (before typing/includemod.ml(468):17186-17227
                                                                  (makeblock 0
                                                                    (makeblock 0 (int,*)
                                                                    pos
                                                                    (makeblock 3
                                                                    env p1
                                                                    cc)) rem)))
                                                             default:
                                                              (before typing/includemod.ml(469):17264-17276
                                                                (raise
                                                                  (after typing/includemod.ml(469):17264-17276
                                                                    (makeblock 0
                                                                    (global Assert_failure!)
                                                                    [0:
                                                                    "typing/includemod.ml"
                                                                    469 36]))))))
                                                          (if *match*
                                                            (exit 60)
                                                            (before typing/includemod.ml(465):17081-17097
                                                              (makeblock 0
                                                                (makeblock 0 (int,*)
                                                                  pos cc)
                                                                rem))))
                                                       with (60)
                                                        (before typing/includemod.ml(466):17125-17128
                                                          rem)))))))))
                                       default: (exit 62)))
                                   case tag 4:
                                    (let (*match* =a (field 1 *match*))
                                      (switch *match*
                                       case tag 4:
                                        (let
                                          (rem =a (field 1 paired)
                                           info2 =a (field 1 *match*)
                                           info1 =a (field 1 *match*)
                                           id1 =a (field 0 *match*))
                                          (before typing/includemod.ml(472):17369-17444
                                            (seq
                                              (after typing/includemod.ml(472):17369-17423
                                                (apply modtype_infos loc env
                                                  mark cxt subst id1 info1
                                                  info2))
                                              (before typing/includemod.ml(473):17431-17444
                                                (after typing/includemod.ml(473):17431-17444
                                                  (apply comps_rec rem))))))
                                       default: (exit 62)))
                                   case tag 5:
                                    (let (*match* =a (field 1 *match*))
                                      (switch *match*
                                       case tag 5:
                                        (let
                                          (rem =a (field 1 paired)
                                           pos =a (field 2 *match*)
                                           decl2 =a (field 1 *match*)
                                           decl1 =a (field 1 *match*)
                                           id1 =a (field 0 *match*))
                                          (before typing/includemod.ml(475):17530-17631
                                            (seq
                                              (after typing/includemod.ml(475):17530-17587
                                                (apply class_declarations
                                                  old_env env cxt subst id1
                                                  decl1 decl2))
                                              (before typing/includemod.ml(476):17595-17631
                                                (makeblock 0
                                                  (makeblock 0 (int,*) pos
                                                    0a)
                                                  (after typing/includemod.ml(476):17618-17631
                                                    (apply comps_rec rem)))))))
                                       default: (exit 62)))
                                   case tag 6:
                                    (let (*match* =a (field 1 *match*))
                                      (switch *match*
                                       case tag 6:
                                        (let
                                          (rem =a (field 1 paired)
                                           info2 =a (field 1 *match*)
                                           info1 =a (field 1 *match*)
                                           id1 =a (field 0 *match*))
                                          (before typing/includemod.ml(479):17733-17821
                                            (seq
                                              (after typing/includemod.ml(479):17733-17800
                                                (apply
                                                  class_type_declarations loc
                                                  old_env env cxt subst id1
                                                  info1 info2))
                                              (before typing/includemod.ml(480):17808-17821
                                                (after typing/includemod.ml(480):17808-17821
                                                  (apply comps_rec rem))))))
                                       default: (exit 62)))))
                                (before typing/includemod.ml(443):16099-16101
                                  0a))
                             with (62)
                              (before typing/includemod.ml(482):17837-17849
                                (raise
                                  (after typing/includemod.ml(482):17837-17849
                                    (makeblock 0 (global Assert_failure!)
                                      [0: "typing/includemod.ml" 482 6]))))))))))
                module_declarations
                  (function loc env mark cxt subst id1 md1 md2
                    (funct-body typing/includemod.ml(484)<ghost>:17875-18300
                      (before typing/includemod.ml(485):17916-18300
                        (seq
                          (after typing/includemod.ml(485):17916-18066
                            (apply (field 1 (global Builtin_attributes!))
                              (field 2 md1) (field 2 md2) loc (field 1 md1)
                              (field 1 md2)
                              (after typing/includemod.ml(490):18050-18066
                                (apply (field 14 (global Ident!)) id1))))
                          (before typing/includemod.ml(491):18070-18300
                            (let (p1 = (makeblock 0 id1))
                              (before typing/includemod.ml(492):18100-18300
                                (seq
                                  (if
                                    (after typing/includemod.ml(492):18103-18121
                                      (apply mark_positive mark))
                                    (before typing/includemod.ml(493):18131-18179
                                      (after typing/includemod.ml(493):18131-18179
                                        (apply (field 89 (global Env!))
                                          (after typing/includemod.ml(493):18152-18168
                                            (apply (field 14 (global Ident!))
                                              id1))
                                          (field 2 md1))))
                                    0a)
                                  (before typing/includemod.ml(494):18183-18300
                                    (after typing/includemod.ml(494):18183-18300
                                      (apply modtypes loc env mark
                                        (makeblock 0 (makeblock 0 id1) cxt)
                                        subst
                                        (after typing/includemod.ml(495):18235-18288
                                          (apply (field 4 (global Mtype!)) 1a
                                            env (field 0 md1) p1))
                                        (field 0 md2))))))))))))
                modtype_infos
                  (function loc env mark cxt subst id info1 info2
                    (funct-body typing/includemod.ml(499)<ghost>:18372-19073
                      (before typing/includemod.ml(500):18416-19073
                        (seq
                          (after typing/includemod.ml(500):18416-18577
                            (apply (field 1 (global Builtin_attributes!))
                              (field 2 info1) (field 2 info2) loc
                              (field 1 info1) (field 1 info2)
                              (after typing/includemod.ml(505):18562-18577
                                (apply (field 14 (global Ident!)) id))))
                          (before typing/includemod.ml(506):18581-19073
                            (let
                              (info2 =
                                 (after typing/includemod.ml(506):18593-18635
                                   (apply (field 21 (global Subst!)) 0a subst
                                     info2)))
                              (before typing/includemod.ml(507):18641-19073
                                (let
                                  (cxt' = (makeblock 0 (makeblock 1 id) cxt))
                                  (before typing/includemod.ml(508):18675-19073
                                    (try
                                      (let
                                        (*match* = (field 0 info1)
                                         *match* = (field 0 info2)
                                         *match* = *match*
                                         *match* = *match*)
                                        (if *match*
                                          (let (mty1 =a (field 0 *match*))
                                            (if *match*
                                              (let
                                                (mty2 =a (field 0 *match*))
                                                (before typing/includemod.ml(513):18819-18868
                                                  (after typing/includemod.ml(513):18819-18868
                                                    (apply
                                                      check_modtype_equiv loc
                                                      env mark cxt' mty1
                                                      mty2))))
                                              (before typing/includemod.ml(511):18776-18778
                                                0a)))
                                          (if *match*
                                            (let (mty2 =a (field 0 *match*))
                                              (before typing/includemod.ml(515):18904-18976
                                                (after typing/includemod.ml(515):18904-18976
                                                  (apply check_modtype_equiv
                                                    loc env mark cxt'
                                                    (makeblock 0
                                                      (makeblock 0 id))
                                                    mty2))))
                                            (before typing/includemod.ml(510):18749-18751
                                              0a))))
                                     with exn
                                      (let (tag =a (field 0 exn))
                                        (if (== tag Error)
                                          (let (reasons =a (field 1 exn))
                                            (before typing/includemod.ml(517):19005-19073
                                              (raise
                                                (after typing/includemod.ml(517):19010-19073
                                                  (makeblock 0 Error
                                                    (makeblock 0
                                                      (makeblock 0 cxt env
                                                        (makeblock 5 id info1
                                                          info2))
                                                      reasons))))))
                                          (reraise exn)))))))))))))
                check_modtype_equiv
                  (function loc env mark cxt mty1 mty2
                    (funct-body typing/includemod.ml(519)<ghost>:19099-19498
                      (before typing/includemod.ml(520):19132-19498
                        (let
                          (*match* =
                             (after typing/includemod.ml(521):19143-19195
                               (apply modtypes loc env mark cxt
                                 (field 0 (global Subst!)) mty1 mty2))
                           *match* =
                             (after typing/includemod.ml(522):19202-19273
                               (apply modtypes loc env
                                 (after typing/includemod.ml(522):19226-19244
                                   (apply negate_mark mark))
                                 cxt (field 0 (global Subst!)) mty2 mty1))
                           *match* = *match*
                           *match* = *match*)
                          (catch
                            (if (isint *match*)
                              (if (isint *match*)
                                (before typing/includemod.ml(524):19318-19320
                                  0a)
                                (exit 64))
                              (exit 64))
                           with (64)
                            (let (c1 =a *match*)
                              (before typing/includemod.ml(528):19443-19498
                                (raise
                                  (after typing/includemod.ml(528):19448-19498
                                    (makeblock 0 Error
                                      (makeblock 0
                                        (makeblock 0 cxt env
                                          (makeblock 6 mty1 c1))
                                        0a))))))))))))
              (let
                (can_alias =
                   (function env path
                     (funct-body typing/includemod.ml(532)<ghost>:19579-19770
                       (before typing/includemod.ml(533):19592-19770
                         (letrec
                           (no_apply
                              (function param
                                (funct-body typing/includemod.ml(533):19611-19712
                                  (switch* param
                                   case tag 0:
                                    (before typing/includemod.ml(534):19643-19647
                                      1a)
                                   case tag 1:
                                    (let (p =a (field 0 param))
                                      (before typing/includemod.ml(535):19673-19683
                                        (after typing/includemod.ml(535):19673-19683
                                          (apply no_apply p))))
                                   case tag 2:
                                    (before typing/includemod.ml(536):19707-19712
                                      0a)))))
                           (before typing/includemod.ml(538):19720-19770
                             (&&
                               (after typing/includemod.ml(538):19720-19733
                                 (apply no_apply path))
                               (not
                                 (after typing/includemod.ml(538):19741-19770
                                   (apply (field 26 (global Env!)) path env)))))))))
                 check_modtype_inclusion =
                   (function loc env mty1 path1 mty2
                     (funct-body typing/includemod.ml(540)<ghost>:19800-19990
                       (before typing/includemod.ml(541):19829-19990
                         (let
                           (aliasable =
                              (after typing/includemod.ml(541):19845-19864
                                (apply can_alias env path1)))
                           (before typing/includemod.ml(542):19870-19990
                             (ignore
                               (after typing/includemod.ml(542):19876-19990
                                 (apply modtypes loc env 0a 0a
                                   (field 0 (global Subst!))
                                   (after typing/includemod.ml(543):19940-19984
                                     (apply (field 4 (global Mtype!))
                                       aliasable env mty1 path1))
                                   mty2))))))))
                 *match* =
                   (setfield_ptr 0 (field 98 (global Env!))
                     (function loc a b c d
                       (funct-body typing/includemod.ml(546):20034-20145
                         (before typing/includemod.ml(547):20059-20144
                           (try
                             (after typing/includemod.ml(547):20064-20100
                               (apply check_modtype_inclusion loc a b c d))
                            with exn
                             (let (tag =a (field 0 exn))
                               (if (== tag Error)
                                 (before typing/includemod.ml(548):20129-20144
                                   (raise
                                     (after typing/includemod.ml(548):20135-20144
                                       (field 7 (global Stdlib!)))))
                                 (reraise exn))))))))
                 compunit =
                   (function env *opt* impl_name impl_sig intf_name intf_sig
                     (funct-body typing/includemod.ml(553)<ghost>:20242-20536
                       (before typing/includemod.ml(554):20306-20536
                         (let
                           (mark =
                              (if *opt*
                                (let (*sth* =a (field 0 *opt*))
                                  (before typing/includemod.ml(553):20253-20262
                                    *sth*))
                                (before typing/includemod.ml(553):20253-20262
                                  0a)))
                           (before typing/includemod.ml(554):20306-20536
                             (try
                               (after typing/includemod.ml(555):20314-20410
                                 (apply signatures
                                   (after typing/includemod.ml(555):20330-20358
                                     (apply (field 1 (global Location!))
                                       impl_name))
                                   env mark 0a (field 0 (global Subst!))
                                   impl_sig intf_sig))
                              with exn
                               (let (tag =a (field 0 exn))
                                 (if (== tag Error)
                                   (let (reasons =a (field 1 exn))
                                     (before typing/includemod.ml(558):20439-20536
                                       (raise
                                         (after typing/includemod.ml(558):20444-20536
                                           (makeblock 0 Error
                                             (makeblock 0
                                               (makeblock 0 0a
                                                 (field 0 (global Env!))
                                                 (makeblock 7 impl_name
                                                   intf_name))
                                               reasons))))))
                                   (reraise exn)))))))))
                 modtypes =
                   (function loc env *opt* mty1 mty2
                     (funct-body typing/includemod.ml(563)<ghost>:20624-20716
                       (before typing/includemod.ml(564):20665-20716
                         (let
                           (mark =
                              (if *opt*
                                (let (*sth* =a (field 0 *opt*))
                                  (before typing/includemod.ml(563):20640-20649
                                    *sth*))
                                (before typing/includemod.ml(563):20640-20649
                                  0a)))
                           (before typing/includemod.ml(564):20665-20716
                             (after typing/includemod.ml(564):20665-20716
                               (apply modtypes loc env mark 0a
                                 (field 0 (global Subst!)) mty1 mty2)))))))
                 signatures =
                   (function env *opt* sig1 sig2
                     (funct-body typing/includemod.ml(565)<ghost>:20732-20835
                       (before typing/includemod.ml(566):20768-20835
                         (let
                           (mark =
                              (if *opt*
                                (let (*sth* =a (field 0 *opt*))
                                  (before typing/includemod.ml(565):20743-20752
                                    *sth*))
                                (before typing/includemod.ml(565):20743-20752
                                  0a)))
                           (before typing/includemod.ml(566):20768-20835
                             (after typing/includemod.ml(566):20768-20835
                               (apply signatures (field 0 (global Location!))
                                 env mark 0a (field 0 (global Subst!)) sig1
                                 sig2)))))))
                 type_declarations =
                   (function loc env *opt* id decl1 decl2
                     (funct-body typing/includemod.ml(567)<ghost>:20858-20969
                       (before typing/includemod.ml(568):20904-20969
                         (let
                           (mark =
                              (if *opt*
                                (let (*sth* =a (field 0 *opt*))
                                  (before typing/includemod.ml(567):20874-20883
                                    *sth*))
                                (before typing/includemod.ml(567):20874-20883
                                  0a)))
                           (before typing/includemod.ml(568):20904-20969
                             (after typing/includemod.ml(568):20904-20969
                               (apply type_declarations loc env mark 0a 0a
                                 (field 0 (global Subst!)) id decl1 decl2)))))))
                 Illegal_permutation =
                   (module-defn(Illegal_permutation) typing/includemod.ml(581):21176-24665
                     (let
                       (either =
                          (function f x g y
                            (funct-body typing/includemod.ml(592)<ghost>:21501-21566
                              (before typing/includemod.ml(592):21511-21566
                                (let
                                  (v =
                                     (after typing/includemod.ml(592):21517-21520
                                       (apply f x)))
                                  (if v
                                    (before typing/includemod.ml(594):21565-21566
                                      v)
                                    (before typing/includemod.ml(593):21540-21543
                                      (after typing/includemod.ml(593):21540-21543
                                        (apply g y)))))))))
                       (letrec
                         (transposition_under
                            (function path param
                              (funct-body typing/includemod.ml(597)<ghost>:21673-22178
                                (catch
                                  (switch* param
                                   case int 0:
                                    (before typing/includemod.ml(606):21976-21980
                                      0a)
                                   case tag 0:
                                    (let (c =a (field 0 param))
                                      (before typing/includemod.ml(599):21729-21803
                                        (after typing/includemod.ml(599):21729-21803
                                          (apply either
                                            (after typing/includemod.ml(600):21746-21767
                                              (apply not_fixpoint path 0))
                                            c
                                            (after typing/includemod.ml(601):21780-21801
                                              (apply first_non_id path 0))
                                            c))))
                                   case tag 1:
                                    (let
                                      (res =a (field 1 param)
                                       arg =a (field 0 param))
                                      (before typing/includemod.ml(603):21846-21953
                                        (after typing/includemod.ml(603):21846-21953
                                          (apply either
                                            (after typing/includemod.ml(604):21863-21898
                                              (apply transposition_under
                                                (makeblock 0 0a path)))
                                            arg
                                            (after typing/includemod.ml(605):21913-21949
                                              (apply transposition_under
                                                (makeblock 0 1a path)))
                                            res))))
                                   case tag 2: (exit 67)
                                   case tag 3: (exit 67))
                                 with (67)
                                  (before typing/includemod.ml(610):22166-22178
                                    (raise
                                      (after typing/includemod.ml(610):22166-22178
                                        (makeblock 0 (global Assert_failure!)
                                          [0: "typing/includemod.ml" 610 8])))))))
                           not_fixpoint
                             (function path pos[int] param
                               (funct-body typing/includemod.ml(612)<ghost>:22276-22446
                                 (if param
                                   (let
                                     (q =a (field 1 param)
                                      *match* =a (field 0 param)
                                      n =a (field 0 *match*))
                                     (before typing/includemod.ml(615):22342-22446
                                       (if (== n pos)
                                         (before typing/includemod.ml(616):22368-22395
                                           (after typing/includemod.ml(616):22368-22395
                                             (apply not_fixpoint path
                                               (+ pos 1) q)))
                                         (before typing/includemod.ml(618):22419-22446
                                           (makeblock 0
                                             (makeblock 0 (*,int,int)
                                               (after typing/includemod.ml(618):22424-22437
                                                 (apply
                                                   (field 8
                                                     (global Stdlib__list!))
                                                   path))
                                               pos n))))))
                                   (before typing/includemod.ml(613):22308-22312
                                     0a))))
                           first_non_id
                             (function path pos[int] param
                               (funct-body typing/includemod.ml(620)<ghost>:22534-22761
                                 (if param
                                   (let
                                     (*match* =a (field 0 param)
                                      c =a (field 1 *match*))
                                     (if (isint c)
                                       (let (q =a (field 1 param))
                                         (before typing/includemod.ml(622):22602-22631
                                           (after typing/includemod.ml(622):22602-22631
                                             (apply first_non_id path
                                               (+ pos 1) q))))
                                       (let (q =a (field 1 param))
                                         (before typing/includemod.ml(624):22660-22761
                                           (after typing/includemod.ml(624):22660-22761
                                             (apply either
                                               (after typing/includemod.ml(625):22677-22717
                                                 (apply transposition_under
                                                   (makeblock 0
                                                     (makeblock 0 (int) pos)
                                                     path)))
                                               c
                                               (after typing/includemod.ml(626):22730-22759
                                                 (apply first_non_id path
                                                   (+ pos 1)))
                                               q))))))
                                   (before typing/includemod.ml(621):22566-22570
                                     0a)))))
                         (let
                           (transposition =
                              (function c
                                (funct-body typing/includemod.ml(628)<ghost>:22783-22874
                                  (before typing/includemod.ml(629):22791-22874
                                    (let
                                      (*match* =
                                         (after typing/includemod.ml(629):22797-22821
                                           (apply transposition_under 0a c)))
                                      (if *match*
                                        (let (x =a (field 0 *match*))
                                          (before typing/includemod.ml(631):22873-22874
                                            x))
                                        (before typing/includemod.ml(630):22841-22856
                                          (raise
                                            (after typing/includemod.ml(630):22847-22856
                                              (field 7 (global Stdlib!)))))))))))
                           (letrec
                             (runtime_item
                                (function k[int] param
                                  (funct-body typing/includemod.ml(633)<ghost>:22899-23118
                                    (if param
                                      (let
                                        (q =a (field 1 param)
                                         item =a (field 0 param))
                                        (before typing/includemod.ml(636):22967-23118
                                          (if
                                            (not
                                              (after typing/includemod.ml(636):22973-23000
                                                (apply is_runtime_component
                                                  item)))
                                            (before typing/includemod.ml(637):23016-23032
                                              (after typing/includemod.ml(637):23016-23032
                                                (apply runtime_item k q)))
                                            (before typing/includemod.ml(638):23046-23118
                                              (if (== k 0)
                                                (before typing/includemod.ml(639):23070-23074
                                                  item)
                                                (before typing/includemod.ml(641):23098-23118
                                                  (after typing/includemod.ml(641):23098-23118
                                                    (apply runtime_item
                                                      (- k 1) q))))))))
                                      (before typing/includemod.ml(634):22924-22939
                                        (raise
                                          (after typing/includemod.ml(634):22930-22939
                                            (field 7 (global Stdlib!)))))))))
                             (letrec
                               (find
                                  (function env ctx path mt
                                    (funct-body typing/includemod.ml(645)<ghost>:23234-23882
                                      (before typing/includemod.ml(645):23252-23882
                                        (let (*match* = mt *match* = path)
                                          (catch
                                            (catch
                                              (switch* *match*
                                               case tag 0: (exit 73)
                                               case tag 1:
                                                (let (s =a (field 0 *match*))
                                                  (if *match*
                                                    (let
                                                      (*match* =a
                                                         (field 0 *match*))
                                                      (if (isint *match*)
                                                        (exit 71)
                                                        (let
                                                          (s =a s
                                                           q =a
                                                             (field 1
                                                               *match*)
                                                           k =a
                                                             (field 0
                                                               *match*))
                                                          (before typing/includemod.ml(653):23551-23708
                                                            (let
                                                              (*match* =
                                                                 (after typing/includemod.ml(653):23563-23579
                                                                   (apply
                                                                    runtime_item
                                                                    k s)))
                                                              (switch *match*
                                                               case tag 3:
                                                                (let
                                                                  (md =a
                                                                    (field 2
                                                                    *match*)
                                                                   id =a
                                                                    (field 0
                                                                    *match*))
                                                                  (before typing/includemod.ml(654):23625-23665
                                                                    (after typing/includemod.ml(654):23625-23665
                                                                    (apply
                                                                    find env
                                                                    (makeblock 0
                                                                    (makeblock 0
                                                                    id) ctx)
                                                                    q
                                                                    (field 0
                                                                    md)))))
                                                               default:
                                                                (before typing/includemod.ml(655):23681-23696
                                                                  (raise
                                                                    (after typing/includemod.ml(655):23687-23696
                                                                    (field 7
                                                                    (global Stdlib!)))))))))))
                                                    (before typing/includemod.ml(651):23489-23504
                                                      (makeblock 0
                                                        (after typing/includemod.ml(651):23489-23501
                                                          (apply
                                                            (field 8
                                                              (global Stdlib__list!))
                                                            ctx))
                                                        s))))
                                               case tag 2:
                                                (let
                                                  (*match* =a
                                                     (field 1 *match*)
                                                   x =a (field 0 *match*))
                                                  (catch
                                                    (if *match*
                                                      (if *match*
                                                        (let
                                                          (*match* =a
                                                             (field 0
                                                               *match*))
                                                          (if (isint *match*)
                                                            (if *match*
                                                              (exit 72)
                                                              (let
                                                                (q =a
                                                                   (field 1
                                                                    *match*)
                                                                 mt =a
                                                                   (field 0
                                                                    *match*))
                                                                (before typing/includemod.ml(657):23755-23783
                                                                  (after typing/includemod.ml(657):23755-23783
                                                                    (apply
                                                                    find env
                                                                    (makeblock 0
                                                                    (makeblock 2
                                                                    x) ctx) q
                                                                    mt)))))
                                                            (exit 71)))
                                                        (exit 71))
                                                      (exit 72))
                                                   with (72)
                                                    (if *match*
                                                      (let
                                                        (*match* =a
                                                           (field 0 *match*))
                                                        (if (isint *match*)
                                                          (if *match*
                                                            (let
                                                              (x =a x
                                                               q =a
                                                                 (field 1
                                                                   *match*)
                                                               mt =a
                                                                 (field 2
                                                                   *match*))
                                                              (before typing/includemod.ml(658):23826-23855
                                                                (after typing/includemod.ml(658):23826-23855
                                                                  (apply find
                                                                    env
                                                                    (makeblock 0
                                                                    (makeblock 3
                                                                    x) ctx) q
                                                                    mt))))
                                                            (exit 71))
                                                          (exit 71)))
                                                      (exit 71))))
                                               case tag 3: (exit 73))
                                             with (73)
                                              (let
                                                (p =a (field 0 *match*)
                                                 p = p)
                                                (before typing/includemod.ml(647):23320-23458
                                                  (let
                                                    (*match* =
                                                       (field 0
                                                         (after typing/includemod.ml(647):23332-23356
                                                           (apply
                                                             (field 15
                                                               (global Env!))
                                                             p env))))
                                                    (if *match*
                                                      (let
                                                        (mt =a
                                                           (field 0 *match*))
                                                        (before typing/includemod.ml(649):23426-23446
                                                          (after typing/includemod.ml(649):23426-23446
                                                            (apply find env
                                                              ctx path mt))))
                                                      (before typing/includemod.ml(648):23389-23404
                                                        (raise
                                                          (after typing/includemod.ml(648):23395-23404
                                                            (field 7
                                                              (global Stdlib!))))))))))
                                           with (71)
                                            (before typing/includemod.ml(659):23867-23882
                                              (raise
                                                (after typing/includemod.ml(659):23873-23882
                                                  (field 7 (global Stdlib!)))))))))))
                               (let
                                 (find =
                                    (function env path mt
                                      (funct-body typing/includemod.ml(661)<ghost>:23895-23928
                                        (before typing/includemod.ml(661):23909-23928
                                          (after typing/includemod.ml(661):23909-23928
                                            (apply find env 0a path mt)))))
                                  item =
                                    (function mt k[int]
                                      (funct-body typing/includemod.ml(662)<ghost>:23940-23982
                                        (before typing/includemod.ml(662):23947-23982
                                          (after typing/includemod.ml(662):23947-23982
                                            (apply item_ident_name
                                              (after typing/includemod.ml(662):23963-23982
                                                (apply runtime_item k mt)))))))
                                  pp_item =
                                    (function ppf param
                                      (funct-body typing/includemod.ml(664)<ghost>:23998-24088
                                        (let
                                          (kind =a (field 2 param)
                                           id =a (field 0 param))
                                          (before typing/includemod.ml(665):24020-24088
                                            (after typing/includemod.ml(665):24020-24088
                                              (apply
                                                (field 122
                                                  (global Stdlib__format!))
                                                ppf
                                                [0:
                                                 [2: 0a [12: ' ' [3: 0a 0a]]]
                                                 "%s %S"]
                                                (after typing/includemod.ml(665):24047-24072
                                                  (apply kind_of_field_desc
                                                    kind))
                                                (after typing/includemod.ml(665):24073-24088
                                                  (apply
                                                    (field 14
                                                      (global Ident!))
                                                    id))))))))
                                  pp =
                                    (function ctx_printer env ppf param
                                      (funct-body typing/includemod.ml(667)<ghost>:24099-24660
                                        (let
                                          (c =a (field 1 param)
                                           mty =a (field 0 param))
                                          (before typing/includemod.ml(668):24133-24660
                                            (try
                                              (let
                                                (*match* =
                                                   (after typing/includemod.ml(669):24157-24172
                                                     (apply transposition c))
                                                 l =a (field 2 *match*)
                                                 k =a (field 1 *match*)
                                                 p =a (field 0 *match*))
                                                (before typing/includemod.ml(670):24182-24514
                                                  (let
                                                    (*match* =
                                                       (after typing/includemod.ml(670):24196-24210
                                                         (apply find env p
                                                           mty))
                                                     mt =a (field 1 *match*)
                                                     ctx =a (field 0 *match*))
                                                    (before typing/includemod.ml(671):24220-24514
                                                      (after typing/includemod.ml(671):24220-24514
                                                        (apply
                                                          (field 122
                                                            (global Stdlib__format!))
                                                          ppf
                                                          [0:
                                                           [18:
                                                            [1:
                                                             [0:
                                                              [11:
                                                               "<hv 2>" 0a]
                                                              "<hv 2>"]]
                                                            [11:
                                                             "Illegal permutation of runtime components in a module type."
                                                             [17:
                                                              [0: "@ " 1 0]
                                                              [18:
                                                               [1:
                                                                [0: 0a ""]]
                                                               [11:
                                                                "For example,"
                                                                [17:
                                                                 [0:
                                                                  "@ " 1 0]
                                                                 [15:
                                                                  [18:
                                                                   [1:
                                                                    [0:
                                                                    0a ""]]
                                                                   [11:
                                                                    "the "
                                                                    [15:
                                                                    [17:
                                                                    [0:
                                                                    "@ " 1 0]
                                                                    [11:
                                                                    "and the "
                                                                    [15:
                                                                    [11:
                                                                    " are not in the same order"
                                                                    [17:
                                                                    [0:
                                                                    "@ " 1 0]
                                                                    [11:
                                                                    "in the expected and actual module types."
                                                                    [17:
                                                                    0a
                                                                    [17:
                                                                    0a 0a]]]]]]]]]]]]]]]]]]
                                                           "@[<hv 2>Illegal permutation of runtime components in a module type.@ @[For example,@ %a@[the %a@ and the %a are not in the same order@ in the expected and actual module types.@]@]"]
                                                          ctx_printer ctx
                                                          pp_item
                                                          (after typing/includemod.ml(675):24483-24494
                                                            (apply item mt k))
                                                          pp_item
                                                          (after typing/includemod.ml(675):24503-24514
                                                            (apply item mt l))))))))
                                             with exn
                                              (if
                                                (== exn
                                                  (field 7 (global Stdlib!)))
                                                (before typing/includemod.ml(677):24572-24660
                                                  (after typing/includemod.ml(677):24572-24660
                                                    (apply
                                                      (field 122
                                                        (global Stdlib__format!))
                                                      ppf
                                                      [0:
                                                       [11:
                                                        "Illegal permutation of runtime components in a module type."
                                                        0a]
                                                       "Illegal permutation of runtime components in a module type."])))
                                                (reraise exn))))))))
                                 (pseudo typing/includemod.ml(581):21205-24665
                                   (makeblock 0 either transposition_under
                                     not_fixpoint first_non_id transposition
                                     runtime_item find item pp_item pp)))))))))
                 show_loc =
                   (function msg ppf loc
                     (funct-body typing/includemod.ml(684)<ghost>:24693-24884
                       (before typing/includemod.ml(685):24709-24884
                         (let (pos = (field 0 loc))
                           (before typing/includemod.ml(686):24747-24884
                             (if
                               (after typing/includemod.ml(686):24750-24810
                                 (apply (field 31 (global Stdlib__list!))
                                   (field 0 pos)
                                   [0:
                                    "" [0: "_none_" [0: "//toplevel//" 0a]]]))
                               (before typing/includemod.ml(686):24816-24818
                                 0a)
                               (before typing/includemod.ml(687):24826-24884
                                 (after typing/includemod.ml(687):24826-24884
                                   (apply
                                     (field 122 (global Stdlib__format!)) ppf
                                     [0:
                                      [17:
                                       3a
                                       [18:
                                        [1: [0: [11: "<2>" 0a] "<2>"]]
                                        [15:
                                         [12:
                                          ':'
                                          [17:
                                           [0: "@ " 1 0] [2: 0a [17: 0a 0a]]]]]]]
                                      "@\n@[<2>%a:@ %s@]"]
                                     (field 19 (global Location!)) loc msg)))))))))
                 show_locs =
                   (function ppf param
                     (funct-body typing/includemod.ml(689)<ghost>:24900-25003
                       (let (loc2 =a (field 1 param) loc1 =a (field 0 param))
                         (before typing/includemod.ml(690):24921-25003
                           (seq
                             (after typing/includemod.ml(690):24921-24961
                               (apply show_loc "Expected declaration" ppf
                                 loc2))
                             (before typing/includemod.ml(691):24965-25003
                               (after typing/includemod.ml(691):24965-25003
                                 (apply show_loc "Actual declaration" ppf
                                   loc1))))))))
                 path_of_context =
                   (function param
                     (funct-body typing/includemod.ml(693):25027-25273
                       (catch
                         (if param
                           (let (*match* =a (field 0 param))
                             (switch *match*
                              case tag 0:
                               (let
                                 (rem =a (field 1 param)
                                  id =a (field 0 *match*))
                                 (before typing/includemod.ml(695):25066-25251
                                   (letrec
                                     (subm
                                        (function path param
                                          (funct-body typing/includemod.ml(695)<ghost>:25079-25216
                                            (if param
                                              (let
                                                (*match* =a (field 0 param))
                                                (switch *match*
                                                 case tag 0:
                                                  (let
                                                    (rem =a (field 1 param)
                                                     id =a (field 0 *match*))
                                                    (before typing/includemod.ml(697):25146-25188
                                                      (after typing/includemod.ml(697):25146-25188
                                                        (apply subm
                                                          (makeblock 1 path
                                                            (after typing/includemod.ml(697):25169-25182
                                                              (apply
                                                                (field 14
                                                                  (global Ident!))
                                                                id)))
                                                          rem))))
                                                 default:
                                                  (before typing/includemod.ml(698):25204-25216
                                                    (raise
                                                      (after typing/includemod.ml(698):25204-25216
                                                        (makeblock 0
                                                          (global Assert_failure!)
                                                          [0:
                                                           "typing/includemod.ml"
                                                           698 15]))))))
                                              (before typing/includemod.ml(696):25111-25115
                                                path)))))
                                     (before typing/includemod.ml(699):25226-25251
                                       (after typing/includemod.ml(699):25226-25251
                                         (apply subm (makeblock 0 id) rem))))))
                              default: (exit 82)))
                           (exit 82))
                        with (82)
                         (before typing/includemod.ml(700):25261-25273
                           (raise
                             (after typing/includemod.ml(700):25261-25273
                               (makeblock 0 (global Assert_failure!)
                                 [0: "typing/includemod.ml" 700 9]))))))))
                (letrec
                  (context
                     (function ppf param
                       (funct-body typing/includemod.ml(703)<ghost>:25292-25735
                         (if param
                           (let (*match* =a (field 0 param))
                             (switch* *match*
                              case tag 0:
                               (let
                                 (rem =a (field 1 param)
                                  id =a (field 0 *match*))
                                 (before typing/includemod.ml(705):25337-25396
                                   (after typing/includemod.ml(705):25337-25396
                                     (apply
                                       (field 122 (global Stdlib__format!))
                                       ppf
                                       [0:
                                        [18:
                                         [1: [0: [11: "<2>" 0a] "<2>"]]
                                         [11:
                                          "module " [15: [15: [17: 0a 0a]]]]]
                                        "@[<2>module %a%a@]"]
                                       (field 1 (global Printtyp!)) id args
                                       rem))))
                              case tag 1:
                               (let
                                 (rem =a (field 1 param)
                                  id =a (field 0 *match*))
                                 (before typing/includemod.ml(707):25428-25511
                                   (after typing/includemod.ml(707):25428-25511
                                     (apply
                                       (field 122 (global Stdlib__format!))
                                       ppf
                                       [0:
                                        [18:
                                         [1: [0: [11: "<2>" 0a] "<2>"]]
                                         [11:
                                          "module type "
                                          [15:
                                           [11:
                                            " ="
                                            [17:
                                             [0: "@ " 1 0] [15: [17: 0a 0a]]]]]]]
                                        "@[<2>module type %a =@ %a@]"]
                                       (field 1 (global Printtyp!)) id
                                       context_mty rem))))
                              case tag 2:
                               (let
                                 (rem =a (field 1 param)
                                  x =a (field 0 *match*))
                                 (before typing/includemod.ml(712):25627-25698
                                   (after typing/includemod.ml(712):25627-25698
                                     (apply
                                       (field 122 (global Stdlib__format!))
                                       ppf
                                       [0:
                                        [11:
                                         "functor ("
                                         [15:
                                          [11:
                                           " : " [15: [11: ") -> ..." 0a]]]]]
                                        "functor (%a : %a) -> ..."]
                                       (field 1 (global Printtyp!)) x
                                       context_mty rem))))
                              case tag 3:
                               (let
                                 (rem =a (field 1 param)
                                  x =a (field 0 *match*))
                                 (before typing/includemod.ml(710):25539-25600
                                   (after typing/includemod.ml(710):25539-25600
                                     (apply
                                       (field 122 (global Stdlib__format!))
                                       ppf
                                       [0:
                                        [11:
                                         "functor ("
                                         [2:
                                          0a
                                          [11:
                                           ") ->"
                                           [17: [0: "@ " 1 0] [15: 0a]]]]]
                                        "functor (%s) ->@ %a"]
                                       (after typing/includemod.ml(710):25573-25584
                                         (apply argname x))
                                       context_mty rem))))))
                           (before typing/includemod.ml(714):25715-25735
                             (after typing/includemod.ml(714):25715-25735
                               (apply (field 122 (global Stdlib__format!))
                                 ppf [0: [11: "<here>" 0a] "<here>"]))))))
                    context_mty
                      (function ppf rem
                        (funct-body typing/includemod.ml(715)<ghost>:25752-25893
                          (catch
                            (if rem
                              (let (*match* =a (field 0 rem))
                                (catch
                                  (switch* *match*
                                   case tag 0: (exit 84)
                                   case tag 1: (exit 84)
                                   case tag 2: (exit 83)
                                   case tag 3: (exit 83))
                                 with (84)
                                  (before typing/includemod.ml(717):25815-25866
                                    (after typing/includemod.ml(717):25815-25866
                                      (apply
                                        (field 122 (global Stdlib__format!))
                                        ppf
                                        [0:
                                         [18:
                                          [1: [0: [11: "<2>" 0a] "<2>"]]
                                          [11:
                                           "sig"
                                           [17:
                                            [0: "@ " 1 0]
                                            [15:
                                             [17:
                                              [0: "@;<1 -2>" 1 -2]
                                              [11: "end" [17: 0a 0a]]]]]]]
                                         "@[<2>sig@ %a@;<1 -2>end@]"]
                                        context rem)))))
                              (exit 83))
                           with (83)
                            (let (cxt =a rem)
                              (before typing/includemod.ml(718):25878-25893
                                (after typing/includemod.ml(718):25878-25893
                                  (apply context ppf cxt)))))))
                    args
                      (function ppf cxt
                        (funct-body typing/includemod.ml(719)<ghost>:25903-26130
                          (catch
                            (if cxt
                              (let (*match* =a (field 0 cxt))
                                (switch* *match*
                                 case tag 0: (exit 85)
                                 case tag 1: (exit 85)
                                 case tag 2:
                                  (let
                                    (rem =a (field 1 cxt)
                                     x =a (field 0 *match*))
                                    (before typing/includemod.ml(723):26013-26076
                                      (after typing/includemod.ml(723):26013-26076
                                        (apply
                                          (field 122
                                            (global Stdlib__format!))
                                          ppf
                                          [0:
                                           [12:
                                            '('
                                            [15:
                                             [11:
                                              " :"
                                              [17:
                                               [0: "@ " 1 0]
                                               [15: [11: ") : ..." 0a]]]]]]
                                           "(%a :@ %a) : ..."]
                                          (field 1 (global Printtyp!)) x
                                          context_mty rem))))
                                 case tag 3:
                                  (let
                                    (rem =a (field 1 cxt)
                                     x =a (field 0 *match*))
                                    (before typing/includemod.ml(721):25945-25986
                                      (after typing/includemod.ml(721):25945-25986
                                        (apply
                                          (field 122
                                            (global Stdlib__format!))
                                          ppf
                                          [0:
                                           [12:
                                            '(' [2: 0a [12: ')' [15: 0a]]]]
                                           "(%s)%a"]
                                          (after typing/includemod.ml(721):25966-25977
                                            (apply argname x))
                                          args rem))))))
                              (exit 85))
                           with (85)
                            (before typing/includemod.ml(725):26094-26130
                              (after typing/includemod.ml(725):26094-26130
                                (apply (field 122 (global Stdlib__format!))
                                  ppf
                                  [0:
                                   [11: " :" [17: [0: "@ " 1 0] [15: 0a]]]
                                   " :@ %a"]
                                  context_mty cxt))))))
                    argname
                      (function x
                        (funct-body typing/includemod.ml(726)<ghost>:26143-26200
                          (before typing/includemod.ml(727):26149-26200
                            (let
                              (s =
                                 (after typing/includemod.ml(727):26157-26169
                                   (apply (field 14 (global Ident!)) x)))
                              (before typing/includemod.ml(728):26175-26200
                                (if
                                  (after typing/includemod.ml(728):26178-26185
                                    (caml_string_equal s "*"))
                                  (before typing/includemod.ml(728):26191-26193
                                    "")
                                  (before typing/includemod.ml(728):26199-26200
                                    s))))))))
                  (let
                    (alt_context =
                       (function ppf cxt
                         (funct-body typing/includemod.ml(730)<ghost>:26218-26458
                           (before typing/includemod.ml(731):26230-26458
                             (if (== cxt 0a)
                               (before typing/includemod.ml(731):26247-26249
                                 0a)
                               (before typing/includemod.ml(732):26257-26458
                                 (if
                                   (after typing/includemod.ml(732):26260-26317
                                     (apply (field 27 (global Stdlib__list!))
                                       (function param
                                         (funct-body typing/includemod.ml(732):26273-26313
                                           (switch param
                                            case tag 0:
                                             (before typing/includemod.ml(732):26295-26299
                                               1a)
                                            default:
                                             (before typing/includemod.ml(732):26307-26312
                                               0a))))
                                       cxt))
                                   (before typing/includemod.ml(733):26327-26392
                                     (after typing/includemod.ml(733):26327-26392
                                       (apply
                                         (field 122 (global Stdlib__format!))
                                         ppf
                                         [0:
                                          [11:
                                           "in module "
                                           [15:
                                            [12: ',' [17: [0: "@ " 1 0] 0a]]]]
                                          "in module %a,@ "]
                                         (field 3 (global Printtyp!))
                                         (after typing/includemod.ml(733):26371-26392
                                           (apply path_of_context cxt)))))
                                   (before typing/includemod.ml(735):26404-26458
                                     (after typing/includemod.ml(735):26404-26458
                                       (apply
                                         (field 122 (global Stdlib__format!))
                                         ppf
                                         [0:
                                          [18:
                                           [1:
                                            [0: [11: "<hv 2>" 0a] "<hv 2>"]]
                                           [11:
                                            "at position"
                                            [17:
                                             [0: "@ " 1 0]
                                             [15:
                                              [12:
                                               ','
                                               [17:
                                                0a [17: [0: "@ " 1 0] 0a]]]]]]]
                                          "@[<hv 2>at position@ %a,@]@ "]
                                         context cxt)))))))))
                     context =
                       (function ppf cxt
                         (funct-body typing/includemod.ml(737)<ghost>:26472-26711
                           (before typing/includemod.ml(738):26484-26711
                             (if (== cxt 0a)
                               (before typing/includemod.ml(738):26501-26503
                                 0a)
                               (before typing/includemod.ml(739):26511-26711
                                 (if
                                   (after typing/includemod.ml(739):26514-26571
                                     (apply (field 27 (global Stdlib__list!))
                                       (function param
                                         (funct-body typing/includemod.ml(739):26527-26567
                                           (switch param
                                            case tag 0:
                                             (before typing/includemod.ml(739):26549-26553
                                               1a)
                                            default:
                                             (before typing/includemod.ml(739):26561-26566
                                               0a))))
                                       cxt))
                                   (before typing/includemod.ml(740):26581-26646
                                     (after typing/includemod.ml(740):26581-26646
                                       (apply
                                         (field 122 (global Stdlib__format!))
                                         ppf
                                         [0:
                                          [11:
                                           "In module "
                                           [15:
                                            [12: ':' [17: [0: "@ " 1 0] 0a]]]]
                                          "In module %a:@ "]
                                         (field 3 (global Printtyp!))
                                         (after typing/includemod.ml(740):26625-26646
                                           (apply path_of_context cxt)))))
                                   (before typing/includemod.ml(742):26658-26711
                                     (after typing/includemod.ml(742):26658-26711
                                       (apply
                                         (field 122 (global Stdlib__format!))
                                         ppf
                                         [0:
                                          [18:
                                           [1:
                                            [0: [11: "<hv 2>" 0a] "<hv 2>"]]
                                           [11:
                                            "At position"
                                            [17:
                                             [0: "@ " 1 0]
                                             [15:
                                              [17: 0a [17: [0: "@ " 1 0] 0a]]]]]]
                                          "@[<hv 2>At position@ %a@]@ "]
                                         context cxt)))))))))
                     include_err =
                       (function env ppf param
                         (funct-body typing/includemod.ml(744)<ghost>:26729-30090
                           (switch* param
                            case tag 0:
                             (let
                               (kind =a (field 2 param)
                                loc =a (field 1 param)
                                id =a (field 0 param))
                               (before typing/includemod.ml(746):26791-26923
                                 (seq
                                   (after typing/includemod.ml(746):26791-26876
                                     (apply
                                       (field 122 (global Stdlib__format!))
                                       ppf
                                       [0:
                                        [11:
                                         "The "
                                         [2:
                                          0a
                                          [11:
                                           " `"
                                           [15:
                                            [11:
                                             "' is required but not provided"
                                             0a]]]]]
                                        "The %s `%a' is required but not provided"]
                                       kind (field 1 (global Printtyp!)) id))
                                   (before typing/includemod.ml(748):26884-26923
                                     (after typing/includemod.ml(748):26884-26923
                                       (apply show_loc "Expected declaration"
                                         ppf loc))))))
                            case tag 1:
                             (let
                               (d2 =a (field 2 param)
                                d1 =a (field 1 param)
                                id =a (field 0 param))
                               (before typing/includemod.ml(750):26968-27244
                                 (seq
                                   (after typing/includemod.ml(750):26968-27198
                                     (apply
                                       (field 122 (global Stdlib__format!))
                                       ppf
                                       [0:
                                        [18:
                                         [1: [0: [11: "<hv 2>" 0a] "<hv 2>"]]
                                         [11:
                                          "Values do not match:"
                                          [17:
                                           [0: "@ " 1 0]
                                           [15:
                                            [17:
                                             [0: "@;<1 -2>" 1 -2]
                                             [11:
                                              "is not included in"
                                              [17:
                                               [0: "@ " 1 0]
                                               [15: [17: 0a 0a]]]]]]]]]
                                        "@[<hv 2>Values do not match:@ %a@;<1 -2>is not included in@ %a@]"]
                                       (field 0 (field 5 (global Oprint!)))
                                       (after typing/includemod.ml(752):27084-27126
                                         (apply (field 23 (global Printtyp!))
                                           id d1))
                                       (field 0 (field 5 (global Oprint!)))
                                       (after typing/includemod.ml(753):27156-27198
                                         (apply (field 23 (global Printtyp!))
                                           id d2))))
                                   (before typing/includemod.ml(754):27206-27244
                                     (after typing/includemod.ml(754):27206-27244
                                       (apply show_locs ppf
                                         (makeblock 0 (field 2 d1)
                                           (field 2 d2))))))))
                            case tag 2:
                             (let
                               (err =a (field 3 param)
                                d2 =a (field 2 param)
                                d1 =a (field 1 param)
                                id =a (field 0 param))
                               (before typing/includemod.ml(756):27293-27743
                                 (after typing/includemod.ml(756):27293-27743
                                   (apply
                                     (field 122 (global Stdlib__format!)) ppf
                                     [0:
                                      [18:
                                       [1: [0: [11: "<v>" 0a] "<v>"]]
                                       [18:
                                        [1: [0: [11: "<hv>" 0a] "<hv>"]]
                                        [2:
                                         0a
                                         [12:
                                          ':'
                                          [17:
                                           [0: "@;<1 2>" 1 2]
                                           [15:
                                            [17:
                                             [0: "@ " 1 0]
                                             [2:
                                              0a
                                              [17:
                                               [0: "@;<1 2>" 1 2]
                                               [15:
                                                [17:
                                                 0a [15: [15: [17: 0a 0a]]]]]]]]]]]]]]
                                      "@[<v>@[<hv>%s:@;<1 2>%a@ %s@;<1 2>%a@]%a%a@]"]
                                     "Type declarations do not match"
                                     (field 0 (field 5 (global Oprint!)))
                                     (after typing/includemod.ml(759):27430-27482
                                       (apply (field 25 (global Printtyp!))
                                         id d1 1a))
                                     "is not included in"
                                     (field 0 (field 5 (global Oprint!)))
                                     (after typing/includemod.ml(762):27549-27601
                                       (apply (field 25 (global Printtyp!))
                                         id d2 1a))
                                     show_locs
                                     (makeblock 0 (field 8 d1) (field 8 d2))
                                     (after typing/includemod.ml(764):27655-27739
                                       (apply (field 4 (global Includecore!))
                                         "the first" "the second"
                                         "declaration"))
                                     err))))
                            case tag 3:
                             (let
                               (err =a (field 3 param)
                                x2 =a (field 2 param)
                                x1 =a (field 1 param)
                                id =a (field 0 param))
                               (before typing/includemod.ml(767):27797-28260
                                 (after typing/includemod.ml(767):27797-28260
                                   (apply
                                     (field 122 (global Stdlib__format!)) ppf
                                     [0:
                                      [18:
                                       [1: [0: [11: "<v>" 0a] "<v>"]]
                                       [18:
                                        [1: [0: [11: "<hv>" 0a] "<hv>"]]
                                        [2:
                                         0a
                                         [12:
                                          ':'
                                          [17:
                                           [0: "@;<1 2>" 1 2]
                                           [15:
                                            [17:
                                             [0: "@ " 1 0]
                                             [2:
                                              0a
                                              [17:
                                               [0: "@;<1 2>" 1 2]
                                               [15:
                                                [17:
                                                 0a [15: [15: [17: 0a 0a]]]]]]]]]]]]]]
                                      "@[<v>@[<hv>%s:@;<1 2>%a@ %s@;<1 2>%a@]%a%a@]"]
                                     "Extension declarations do not match"
                                     (field 0 (field 5 (global Oprint!)))
                                     (after typing/includemod.ml(770):27939-27996
                                       (apply (field 27 (global Printtyp!))
                                         id x1 0a))
                                     "is not included in"
                                     (field 0 (field 5 (global Oprint!)))
                                     (after typing/includemod.ml(773):28063-28120
                                       (apply (field 27 (global Printtyp!))
                                         id x2 0a))
                                     show_locs
                                     (makeblock 0 (field 5 x1) (field 5 x2))
                                     (after typing/includemod.ml(775):28172-28256
                                       (apply (field 4 (global Includecore!))
                                         "the first" "the second"
                                         "declaration"))
                                     err))))
                            case tag 4:
                             (let
                               (mty2 =a (field 1 param)
                                mty1 =a (field 0 param))
                               (before typing/includemod.ml(778):28298-28518
                                 (after typing/includemod.ml(778):28298-28518
                                   (apply
                                     (field 122 (global Stdlib__format!)) ppf
                                     [0:
                                      [18:
                                       [1: [0: [11: "<hv 2>" 0a] "<hv 2>"]]
                                       [11:
                                        "Modules do not match:"
                                        [17:
                                         [0: "@ " 1 0]
                                         [15:
                                          [17:
                                           [0: "@;<1 -2>" 1 -2]
                                           [11:
                                            "is not included in"
                                            [17:
                                             [0: "@ " 1 0] [15: [17: 0a 0a]]]]]]]]]
                                      "@[<hv 2>Modules do not match:@ %a@;<1 -2>is not included in@ %a@]"]
                                     (field 0 (field 4 (global Oprint!)))
                                     (after typing/includemod.ml(781):28425-28456
                                       (apply (field 32 (global Printtyp!))
                                         mty1))
                                     (field 0 (field 4 (global Oprint!)))
                                     (after typing/includemod.ml(782):28487-28518
                                       (apply (field 32 (global Printtyp!))
                                         mty2))))))
                            case tag 5:
                             (let
                               (d2 =a (field 2 param)
                                d1 =a (field 1 param)
                                id =a (field 0 param))
                               (before typing/includemod.ml(784):28558-28811
                                 (after typing/includemod.ml(784):28558-28811
                                   (apply
                                     (field 122 (global Stdlib__format!)) ppf
                                     [0:
                                      [18:
                                       [1: [0: [11: "<hv 2>" 0a] "<hv 2>"]]
                                       [11:
                                        "Module type declarations do not match:"
                                        [17:
                                         [0: "@ " 1 0]
                                         [15:
                                          [17:
                                           [0: "@;<1 -2>" 1 -2]
                                           [11:
                                            "does not match"
                                            [17:
                                             [0: "@ " 1 0] [15: [17: 0a 0a]]]]]]]]]
                                      "@[<hv 2>Module type declarations do not match:@ %a@;<1 -2>does not match@ %a@]"]
                                     (field 0 (field 5 (global Oprint!)))
                                     (after typing/includemod.ml(787):28695-28739
                                       (apply (field 33 (global Printtyp!))
                                         id d1))
                                     (field 0 (field 5 (global Oprint!)))
                                     (after typing/includemod.ml(788):28767-28811
                                       (apply (field 33 (global Printtyp!))
                                         id d2))))))
                            case tag 6:
                             (let
                               (c =a (field 1 param) mty =a (field 0 param))
                               (before typing/includemod.ml(790):28853-28903
                                 (after typing/includemod.ml(790):28853-28903
                                   (apply (field 9 Illegal_permutation)
                                     alt_context env ppf (makeblock 0 mty c)))))
                            case tag 7:
                             (let
                               (intf_name =a (field 1 param)
                                impl_name =a (field 0 param))
                               (before typing/includemod.ml(792):28958-29056
                                 (after typing/includemod.ml(792):28958-29056
                                   (apply
                                     (field 122 (global Stdlib__format!)) ppf
                                     [0:
                                      [18:
                                       [1: [0: 0a ""]]
                                       [11:
                                        "The implementation "
                                        [2:
                                         0a
                                         [17:
                                          [0: "@ " 1 0]
                                          [11:
                                           "does not match the interface "
                                           [2: 0a [12: ':' 0a]]]]]]]
                                      "@[The implementation %s@ does not match the interface %s:"]
                                     impl_name intf_name))))
                            case tag 8:
                             (let
                               (reason =a (field 3 param)
                                d2 =a (field 2 param)
                                d1 =a (field 1 param)
                                id =a (field 0 param))
                               (before typing/includemod.ml(795):29114-29445
                                 (after typing/includemod.ml(795):29114-29445
                                   (apply
                                     (field 122 (global Stdlib__format!)) ppf
                                     [0:
                                      [18:
                                       [1: [0: [11: "<hv 2>" 0a] "<hv 2>"]]
                                       [11:
                                        "Class type declarations do not match:"
                                        [17:
                                         [0: "@ " 1 0]
                                         [15:
                                          [17:
                                           [0: "@;<1 -2>" 1 -2]
                                           [11:
                                            "does not match"
                                            [17:
                                             [0: "@ " 1 0]
                                             [15:
                                              [17:
                                               0a
                                               [17: [0: "@ " 1 0] [15: 0a]]]]]]]]]]]
                                      "@[<hv 2>Class type declarations do not match:@ %a@;<1 -2>does not match@ %a@]@ %a"]
                                     (field 0 (field 5 (global Oprint!)))
                                     (after typing/includemod.ml(799):29262-29316
                                       (apply (field 40 (global Printtyp!))
                                         id d1 1a))
                                     (field 0 (field 5 (global Oprint!)))
                                     (after typing/includemod.ml(801):29352-29406
                                       (apply (field 40 (global Printtyp!))
                                         id d2 1a))
                                     (field 3 (global Includeclass!)) reason))))
                            case tag 9:
                             (let
                               (reason =a (field 3 param)
                                d2 =a (field 2 param)
                                d1 =a (field 1 param)
                                id =a (field 0 param))
                               (before typing/includemod.ml(804):29498-29806
                                 (after typing/includemod.ml(804):29498-29806
                                   (apply
                                     (field 122 (global Stdlib__format!)) ppf
                                     [0:
                                      [18:
                                       [1: [0: [11: "<hv 2>" 0a] "<hv 2>"]]
                                       [11:
                                        "Class declarations do not match:"
                                        [17:
                                         [0: "@ " 1 0]
                                         [15:
                                          [17:
                                           [0: "@;<1 -2>" 1 -2]
                                           [11:
                                            "does not match"
                                            [17:
                                             [0: "@ " 1 0]
                                             [15:
                                              [17:
                                               0a
                                               [17: [0: "@ " 1 0] [15: 0a]]]]]]]]]]]
                                      "@[<hv 2>Class declarations do not match:@ %a@;<1 -2>does not match@ %a@]@ %a"]
                                     (field 0 (field 5 (global Oprint!)))
                                     (after typing/includemod.ml(807):29633-29686
                                       (apply (field 38 (global Printtyp!))
                                         id d1 1a))
                                     (field 0 (field 5 (global Oprint!)))
                                     (after typing/includemod.ml(808):29714-29767
                                       (apply (field 38 (global Printtyp!))
                                         id d2 1a))
                                     (field 3 (global Includeclass!)) reason))))
                            case tag 10:
                             (let (path =a (field 0 param))
                               (before typing/includemod.ml(811):29846-29901
                                 (after typing/includemod.ml(811):29846-29901
                                   (apply
                                     (field 122 (global Stdlib__format!)) ppf
                                     [0:
                                      [11: "Unbound module type " [15: 0a]]
                                      "Unbound module type %a"]
                                     (field 3 (global Printtyp!)) path))))
                            case tag 11:
                             (let (path =a (field 0 param))
                               (before typing/includemod.ml(813):29940-29990
                                 (after typing/includemod.ml(813):29940-29990
                                   (apply
                                     (field 122 (global Stdlib__format!)) ppf
                                     [0:
                                      [11: "Unbound module " [15: 0a]]
                                      "Unbound module %a"]
                                     (field 3 (global Printtyp!)) path))))
                            case tag 12:
                             (let (path =a (field 0 param))
                               (before typing/includemod.ml(815):30030-30090
                                 (after typing/includemod.ml(815):30030-30090
                                   (apply
                                     (field 122 (global Stdlib__format!)) ppf
                                     [0:
                                      [11:
                                       "Module "
                                       [15: [11: " cannot be aliased" 0a]]]
                                      "Module %a cannot be aliased"]
                                     (field 3 (global Printtyp!)) path)))))))
                     include_err =
                       (function ppf param
                         (funct-body typing/includemod.ml(817)<ghost>:30108-30261
                           (let
                             (err =a (field 2 param)
                              env =a (field 1 param)
                              cxt =a (field 0 param))
                             (before typing/includemod.ml(818):30132-30261
                               (after typing/includemod.ml(818):30132-30261
                                 (apply (field 9 (global Printtyp!)) 1a env
                                   (function param
                                     (funct-body typing/includemod.ml(818):30175-30261
                                       (before typing/includemod.ml(819):30190-30260
                                         (after typing/includemod.ml(819):30190-30260
                                           (apply
                                             (field 122
                                               (global Stdlib__format!))
                                             ppf
                                             [0:
                                              [18:
                                               [1: [0: [11: "<v>" 0a] "<v>"]]
                                               [15: [15: [17: 0a 0a]]]]
                                              "@[<v>%a%a@]"]
                                             context
                                             (after typing/includemod.ml(819):30224-30238
                                               (apply
                                                 (field 8
                                                   (global Stdlib__list!))
                                                 cxt))
                                             (after typing/includemod.ml(819):30239-30256
                                               (apply include_err env))
                                             err)))))))))))
                     buffer =
                       (makemutable 0 (field 2 (global Stdlib__bytes!)))
                     is_big =
                       (function obj
                         (funct-body typing/includemod.ml(822)<ghost>:30303-30524
                           (before typing/includemod.ml(823):30311-30524
                             (let
                               (size =[int]
                                  (field 0 (field 59 (global Clflags!))))
                               (before typing/includemod.ml(824):30347-30524
                                 (&& (> size 0)
                                   (seq
                                     (if
                                       (< (bytes.length (field 0 buffer))
                                         size)
                                       (before typing/includemod.ml(826):30407-30434
                                         (setfield_ptr 0 buffer
                                           (after typing/includemod.ml(826):30417-30434
                                             (caml_create_bytes size))))
                                       0a)
                                     (before typing/includemod.ml(827):30440-30518
                                       (try
                                         (seq
                                           (ignore
                                             (after typing/includemod.ml(827):30451-30492
                                               (apply
                                                 (field 1
                                                   (global Stdlib__marshal!))
                                                 (field 0 buffer) 0 size obj
                                                 0a)))
                                           (before typing/includemod.ml(827):30494-30499
                                             0a))
                                        with exn
                                         (before typing/includemod.ml(828):30514-30518
                                           1a))))))))))
                     report_error =
                       (function ppf errs
                         (funct-body typing/includemod.ml(831)<ghost>:30543-30987
                           (before typing/includemod.ml(832):30556-30987
                             (if (== errs 0a)
                               (before typing/includemod.ml(832):30574-30576
                                 0a)
                               (before typing/includemod.ml(833):30584-30987
                                 (let
                                   (*match* =
                                      (after typing/includemod.ml(833):30603-30618
                                        (apply (field 9 (global Misc!)) errs))
                                    err =a (field 1 *match*)
                                    errs =a (field 0 *match*))
                                   (before typing/includemod.ml(834):30624-30987
                                     (let (pe = (makemutable 0 1a))
                                       (before typing/includemod.ml(835):30647-30987
                                         (let
                                           (include_err' =
                                              (function ppf err
                                                (funct-body typing/includemod.ml(835)<ghost>:30664-30806
                                                  (let (obj =a (field 2 err))
                                                    (before typing/includemod.ml(836):30691-30806
                                                      (if
                                                        (not
                                                          (after typing/includemod.ml(836):30698-30710
                                                            (apply is_big
                                                              obj)))
                                                        (before typing/includemod.ml(836):30716-30750
                                                          (after typing/includemod.ml(836):30716-30750
                                                            (apply
                                                              (field 122
                                                                (global Stdlib__format!))
                                                              ppf
                                                              [0:
                                                               [15:
                                                                [17:
                                                                 [0:
                                                                  "@ " 1 0]
                                                                 0a]]
                                                               "%a@ "]
                                                              include_err
                                                              err)))
                                                        (before typing/includemod.ml(837):30760-30806
                                                          (if (field 0 pe)
                                                            (before typing/includemod.ml(837):30772-30806
                                                              (seq
                                                                (after typing/includemod.ml(837):30773-30792
                                                                  (apply
                                                                    (field 122
                                                                    (global Stdlib__format!))
                                                                    ppf
                                                                    [0:
                                                                    [11:
                                                                    "..."
                                                                    [17:
                                                                    [0:
                                                                    "@ " 1 0]
                                                                    0a]]
                                                                    "...@ "]))
                                                                (before typing/includemod.ml(837):30794-30805
                                                                  (setfield_imm 0
                                                                    pe 0a))))
                                                            0a))))))))
                                           (before typing/includemod.ml(839):30814-30987
                                             (let
                                               (print_errs =
                                                  (function ppf
                                                    (funct-body typing/includemod.ml(839)<ghost>:30829-30863
                                                      (before typing/includemod.ml(839):30835-30863
                                                        (after typing/includemod.ml(839):30835-30863
                                                          (apply
                                                            (field 14
                                                              (global Stdlib__list!))
                                                            (after typing/includemod.ml(839):30845-30863
                                                              (apply
                                                                include_err'
                                                                ppf))))))))
                                               (before typing/includemod.ml(840):30869-30987
                                                 (seq
                                                   (after typing/includemod.ml(840):30869-30895
                                                     (apply
                                                       (field 4
                                                         (field 11
                                                           (global Printtyp!)))
                                                       0a))
                                                   (before typing/includemod.ml(841):30899-30987
                                                     (after typing/includemod.ml(841):30899-30987
                                                       (apply
                                                         (field 122
                                                           (global Stdlib__format!))
                                                         ppf
                                                         [0:
                                                          [18:
                                                           [1:
                                                            [0:
                                                             [11: "<v>" 0a]
                                                             "<v>"]]
                                                           [15:
                                                            [15:
                                                             [16:
                                                              [17: 0a 0a]]]]]
                                                          "@[<v>%a%a%t@]"]
                                                         print_errs errs
                                                         include_err err
                                                         (field 3
                                                           (field 11
                                                             (global Printtyp!))))))))))))))))))))
                     *match* =
                       (after typing/includemod.ml(847):31136-31280
                         (apply (field 46 (global Location!))
                           (function param
                             (funct-body typing/includemod.ml(848):31171-31280
                               (let (tag =a (field 0 param))
                                 (if (== tag Error)
                                   (let (err =a (field 1 param))
                                     (before typing/includemod.ml(849):31202-31256
                                       (makeblock 0
                                         (after typing/includemod.ml(849):31207-31256
                                           (apply
                                             (field 45 (global Location!))
                                             report_error err)))))
                                   (before typing/includemod.ml(850):31270-31274
                                     0a))))))))
                    (pseudo _none_(0)<ghost>:-1--1
                      (makeblock 0 modtypes check_modtype_inclusion
                        signatures compunit type_declarations print_coercion
                        Error report_error expand_module_alias))))))))))))
