(setglobal Typedtree!
  (let
    (iter_pattern_desc =
       (function f param
         (funct-body typing/typedtree.ml(590)<ghost>:16970-17428
           (catch
             (switch param
              case tag 1:
               (let (p =a (field 0 param))
                 (before typing/typedtree.ml(591):17010-17013
                   (after typing/typedtree.ml(591):17010-17013 (apply f p))))
              case tag 3:
               (let (patl =a (field 0 param))
                 (before typing/typedtree.ml(592):17037-17053
                   (after typing/typedtree.ml(592):17037-17053
                     (apply (field 14 (global Stdlib__list!)) f patl))))
              case tag 4:
               (let (patl =a (field 2 param))
                 (before typing/typedtree.ml(593):17088-17104
                   (after typing/typedtree.ml(593):17088-17104
                     (apply (field 14 (global Stdlib__list!)) f patl))))
              case tag 5:
               (let (pat =a (field 1 param))
                 (before typing/typedtree.ml(594):17136-17153
                   (after typing/typedtree.ml(594):17136-17153
                     (apply (field 8 (global Stdlib__option!)) f pat))))
              case tag 6:
               (let (lbl_pat_list =a (field 0 param))
                 (before typing/typedtree.ml(596):17197-17246
                   (after typing/typedtree.ml(596):17197-17246
                     (apply (field 14 (global Stdlib__list!))
                       (function param
                         (funct-body typing/typedtree.ml(596):17207-17233
                           (let (pat =a (field 2 param))
                             (before typing/typedtree.ml(596):17227-17232
                               (after typing/typedtree.ml(596):17227-17232
                                 (apply f pat))))))
                       lbl_pat_list))))
              case tag 7:
               (let (patl =a (field 0 param))
                 (before typing/typedtree.ml(597):17270-17286
                   (after typing/typedtree.ml(597):17270-17286
                     (apply (field 14 (global Stdlib__list!)) f patl))))
              case tag 8:
               (let (p2 =a (field 1 param) p1 =a (field 0 param))
                 (before typing/typedtree.ml(598):17313-17323
                   (seq
                     (after typing/typedtree.ml(598):17313-17317
                       (apply f p1))
                     (before typing/typedtree.ml(598):17319-17323
                       (after typing/typedtree.ml(598):17319-17323
                         (apply f p2))))))
              case tag 9:
               (let (p =a (field 0 param))
                 (before typing/typedtree.ml(599):17343-17346
                   (after typing/typedtree.ml(599):17343-17346 (apply f p))))
              case tag 10:
               (let (p =a (field 0 param))
                 (before typing/typedtree.ml(600):17371-17374
                   (after typing/typedtree.ml(600):17371-17374 (apply f p))))
              default: (exit 1))
            with (1) (before typing/typedtree.ml(603):17426-17428 0a))))
     map_pattern_desc =
       (function f d
         (funct-body typing/typedtree.ml(605)<ghost>:17451-18146
           (before typing/typedtree.ml(606):17459-18146
             (catch
               (switch d
                case tag 1:
                 (let (s =a (field 2 d) id =a (field 1 d) p1 =a (field 0 d))
                   (before typing/typedtree.ml(608):17508-17532
                     (makeblock 1
                       (after typing/typedtree.ml(608):17520-17524
                         (apply f p1))
                       id s)))
                case tag 3:
                 (let (pats =a (field 0 d))
                   (before typing/typedtree.ml(610):17562-17590
                     (makeblock 3
                       (after typing/typedtree.ml(610):17573-17590
                         (apply (field 16 (global Stdlib__list!)) f pats)))))
                case tag 4:
                 (let
                   (pats =a (field 2 d) c =a (field 1 d) lid =a (field 0 d))
                   (before typing/typedtree.ml(614):17743-17783
                     (makeblock 4 lid c
                       (after typing/typedtree.ml(614):17767-17782
                         (apply (field 16 (global Stdlib__list!)) f pats)))))
                case tag 5:
                 (let (*match* =a (field 1 d))
                   (if *match*
                     (let
                       (x2 =a (field 2 d)
                        p1 =a (field 0 *match*)
                        x1 =a (field 0 d))
                       (before typing/typedtree.ml(620):17970-18004
                         (makeblock 5 x1
                           (makeblock 0
                             (after typing/typedtree.ml(620):17993-17999
                               (apply f p1)))
                           x2)))
                     (exit 2)))
                case tag 6:
                 (let (closed =a (field 1 d) lpats =a (field 0 d))
                   (before typing/typedtree.ml(612):17632-17700
                     (makeblock 6
                       (after typing/typedtree.ml(612):17645-17691
                         (apply (field 16 (global Stdlib__list!))
                           (function param
                             (funct-body typing/typedtree.ml(612):17654-17685
                               (let
                                 (p =a (field 2 param)
                                  l =a (field 1 param)
                                  lid =a (field 0 param))
                                 (before typing/typedtree.ml(612):17673-17684
                                   (makeblock 0 lid l
                                     (after typing/typedtree.ml(612):17681-17684
                                       (apply f p)))))))
                           lpats))
                       closed)))
                case tag 7:
                 (let (pats =a (field 0 d))
                   (before typing/typedtree.ml(616):17813-17841
                     (makeblock 7
                       (after typing/typedtree.ml(616):17824-17841
                         (apply (field 16 (global Stdlib__list!)) f pats)))))
                case tag 8:
                 (let
                   (path =a (field 2 d) p2 =a (field 1 d) p1 =a (field 0 d))
                   (before typing/typedtree.ml(622):18039-18065
                     (makeblock 8
                       (after typing/typedtree.ml(622):18048-18052
                         (apply f p1))
                       (after typing/typedtree.ml(622):18054-18058
                         (apply f p2))
                       path)))
                case tag 9:
                 (let (p1 =a (field 0 d))
                   (before typing/typedtree.ml(617):17862-17878
                     (makeblock 9
                       (after typing/typedtree.ml(617):17872-17878
                         (apply f p1)))))
                case tag 10:
                 (let (p1 =a (field 0 d))
                   (before typing/typedtree.ml(618):17904-17925
                     (makeblock 10
                       (after typing/typedtree.ml(618):17919-17925
                         (apply f p1)))))
                default: (exit 2))
              with (2) (before typing/typedtree.ml(626):18145-18146 d)))))
     idents = (makemutable 0 0a))
    (letrec
      (bound_idents
         (function pat
           (funct-body typing/typedtree.ml(632)<ghost>:18294-18633
             (before typing/typedtree.ml(633):18302-18633
               (let (d = (field 0 pat))
                 (catch
                   (switch d
                    case tag 0:
                     (let (s =a (field 1 d) id =a (field 0 d))
                       (before typing/typedtree.ml(634):18349-18389
                         (setfield_ptr 0 idents
                           (makeblock 0 (makeblock 0 id s (field 3 pat))
                             (field 0 idents)))))
                    case tag 1:
                     (let
                       (s =a (field 2 d) id =a (field 1 d) p =a (field 0 d))
                       (before typing/typedtree.ml(636):18424-18480
                         (seq
                           (after typing/typedtree.ml(636):18424-18438
                             (apply bound_idents p))
                           (before typing/typedtree.ml(636):18440-18480
                             (setfield_ptr 0 idents
                               (makeblock 0 (makeblock 0 id s (field 3 pat))
                                 (field 0 idents)))))))
                    case tag 8:
                     (let (p1 =a (field 0 d))
                       (before typing/typedtree.ml(639):18576-18591
                         (after typing/typedtree.ml(639):18576-18591
                           (apply bound_idents p1))))
                    default: (exit 3))
                  with (3)
                   (before typing/typedtree.ml(640):18601-18633
                     (after typing/typedtree.ml(640):18601-18633
                       (apply iter_pattern_desc bound_idents d)))))))))
      (let
        (pat_bound_idents_full =
           (function pat
             (funct-body typing/typedtree.ml(642)<ghost>:18661-18747
               (before typing/typedtree.ml(643):18669-18747
                 (seq (setfield_ptr 0 idents 0a)
                   (before typing/typedtree.ml(644):18685-18747
                     (seq
                       (after typing/typedtree.ml(644):18685-18701
                         (apply bound_idents pat))
                       (before typing/typedtree.ml(645):18705-18747
                         (let (res = (field 0 idents))
                           (before typing/typedtree.ml(646):18728-18747
                             (seq (setfield_ptr 0 idents 0a)
                               (before typing/typedtree.ml(647):18744-18747
                                 res)))))))))))
         pat_bound_idents =
           (function pat
             (funct-body typing/typedtree.ml(649)<ghost>:18770-18835
               (before typing/typedtree.ml(650):18778-18835
                 (after typing/typedtree.ml(650):18778-18835
                   (apply (field 16 (global Stdlib__list!))
                     (function param
                       (funct-body typing/typedtree.ml(650):18787-18807
                         (let (id =a (field 0 param))
                           (before typing/typedtree.ml(650):18804-18806 id))))
                     (after typing/typedtree.ml(650):18808-18835
                       (apply pat_bound_idents_full pat)))))))
         rev_let_bound_idents_with_loc =
           (function bindings
             (funct-body typing/typedtree.ml(652)<ghost>:18871-18995
               (before typing/typedtree.ml(653):18884-18995
                 (seq (setfield_ptr 0 idents 0a)
                   (before typing/typedtree.ml(654):18900-18995
                     (seq
                       (after typing/typedtree.ml(654):18900-18953
                         (apply (field 14 (global Stdlib__list!))
                           (function vb
                             (funct-body typing/typedtree.ml(654):18910-18944
                               (before typing/typedtree.ml(654):18921-18943
                                 (after typing/typedtree.ml(654):18921-18943
                                   (apply bound_idents (field 0 vb))))))
                           bindings))
                       (before typing/typedtree.ml(655):18957-18995
                         (let (res = (field 0 idents))
                           (before typing/typedtree.ml(655):18978-18995
                             (seq (setfield_ptr 0 idents 0a)
                               (before typing/typedtree.ml(655):18992-18995
                                 res)))))))))))
         let_bound_idents_with_loc =
           (function pat_expr_list
             (funct-body typing/typedtree.ml(657)<ghost>:19027-19098
               (before typing/typedtree.ml(658):19045-19098
                 (after typing/typedtree.ml(658):19045-19098
                   (apply (field 8 (global Stdlib__list!))
                     (after typing/typedtree.ml(658):19053-19098
                       (apply rev_let_bound_idents_with_loc pat_expr_list)))))))
         rev_let_bound_idents =
           (function pat
             (funct-body typing/typedtree.ml(660)<ghost>:19125-19198
               (before typing/typedtree.ml(661):19133-19198
                 (after typing/typedtree.ml(661):19133-19198
                   (apply (field 16 (global Stdlib__list!))
                     (function param
                       (funct-body typing/typedtree.ml(661):19142-19162
                         (let (id =a (field 0 param))
                           (before typing/typedtree.ml(661):19159-19161 id))))
                     (after typing/typedtree.ml(661):19163-19198
                       (apply rev_let_bound_idents_with_loc pat)))))))
         let_bound_idents =
           (function pat
             (funct-body typing/typedtree.ml(663)<ghost>:19221-19290
               (before typing/typedtree.ml(664):19229-19290
                 (after typing/typedtree.ml(664):19229-19290
                   (apply (field 16 (global Stdlib__list!))
                     (function param
                       (funct-body typing/typedtree.ml(664):19238-19258
                         (let (id =a (field 0 param))
                           (before typing/typedtree.ml(664):19255-19257 id))))
                     (after typing/typedtree.ml(664):19259-19290
                       (apply let_bound_idents_with_loc pat)))))))
         alpha_var =
           (function env id
             (funct-body typing/typedtree.ml(666)<ghost>:19306-19332
               (before typing/typedtree.ml(666):19315-19332
                 (after typing/typedtree.ml(666):19315-19332
                   (apply (field 38 (global Stdlib__list!)) id env))))))
        (letrec
          (alpha_pat
             (function env p
               (funct-body typing/typedtree.ml(668)<ghost>:19352-19788
                 (before typing/typedtree.ml(668):19360-19788
                   (let (d = (field 0 p))
                     (catch
                       (switch d
                        case tag 0:
                         (let (s =a (field 1 d) id =a (field 0 d))
                           (before typing/typedtree.ml(670):19442-19535
                             (let (init = p)
                               (makemutable 0
                                 (try
                                   (makeblock 0
                                     (after typing/typedtree.ml(671):19480-19496
                                       (apply alpha_var env id))
                                     s)
                                  with exn
                                   (if (== exn (field 7 (global Stdlib!)))
                                     (before typing/typedtree.ml(672):19526-19534
                                       0a)
                                     (reraise exn)))
                                 (field 1 init) (field 2 init) (field 3 init)
                                 (field 4 init) (field 5 init)))))
                        case tag 1:
                         (let
                           (s =a (field 2 d)
                            id =a (field 1 d)
                            p1 =a (field 0 d))
                           (before typing/typedtree.ml(674):19568-19722
                             (let
                               (new_p =
                                  (after typing/typedtree.ml(674):19581-19597
                                    (apply alpha_pat env p1)))
                               (before typing/typedtree.ml(675):19605-19722
                                 (try
                                   (let (init = p)
                                     (makemutable 0
                                       (makeblock 1 new_p
                                         (after typing/typedtree.ml(676):19659-19675
                                           (apply alpha_var env id))
                                         s)
                                       (field 1 init) (field 2 init)
                                       (field 3 init) (field 4 init)
                                       (field 5 init)))
                                  with exn
                                   (if (== exn (field 7 (global Stdlib!)))
                                     (before typing/typedtree.ml(678):19709-19714
                                       new_p)
                                     (reraise exn)))))))
                        default: (exit 6))
                      with (6)
                       (before typing/typedtree.ml(681):19734-19788
                         (let (init = p)
                           (makemutable 0
                             (after typing/typedtree.ml(681):19753-19787
                               (apply map_pattern_desc
                                 (after typing/typedtree.ml(681):19770-19785
                                   (apply alpha_pat env))
                                 d))
                             (field 1 init) (field 2 init) (field 3 init)
                             (field 4 init) (field 5 init))))))))))
          (let
            (mkloc = (field 10 (global Location!))
             mknoloc = (field 9 (global Location!))
             split_pattern =
               (function pat
                 (funct-body typing/typedtree.ml(686)<ghost>:19867-20796
                   (before typing/typedtree.ml(687):19875-20796
                     (let
                       (combine_pattern_desc_opts =
                          (function into p1 p2
                            (funct-body typing/typedtree.ml(687)<ghost>:19905-20260
                              (before typing/typedtree.ml(688):19923-20260
                                (let (*match* = p1 *match* = p2)
                                  (catch
                                    (if *match*
                                      (let (p1 =a (field 0 *match*))
                                        (if *match*
                                          (let (p2 =a (field 0 *match*))
                                            (before typing/typedtree.ml(696):20208-20260
                                              (makeblock 0
                                                (let (init = into)
                                                  (makemutable 0
                                                    (makeblock 8 p1 p2 0a)
                                                    (field 1 init)
                                                    (field 2 init)
                                                    (field 3 init)
                                                    (field 4 init)
                                                    (field 5 init))))))
                                          (let (p =a p1) (exit 14 p))))
                                      (if *match*
                                        (let (p =a (field 0 *match*))
                                          (exit 14 p))
                                        (before typing/typedtree.ml(689):19961-19965
                                          0a)))
                                   with (14 p)
                                    (before typing/typedtree.ml(692):20015-20021
                                      (makeblock 0 p))))))))
                       (before typing/typedtree.ml(698):20268-20796
                         (letrec
                           (split_pattern
                              (function pat
                                (funct-body typing/typedtree.ml(698)<ghost>:20290-20771
                                  (before typing/typedtree.ml(699):20300-20771
                                    (let (*match* = (field 0 pat))
                                      (catch
                                        (switch *match*
                                         case tag 8:
                                          (let (*match* =a (field 2 *match*))
                                            (if *match* (exit 13)
                                              (let
                                                (p2 =a (field 1 *match*)
                                                 p1 =a (field 0 *match*))
                                                (before typing/typedtree.ml(701):20364-20690
                                                  (let
                                                    (*match* =
                                                       (after typing/typedtree.ml(701):20383-20399
                                                         (apply split_pattern
                                                           p1))
                                                     exns1 =a
                                                       (field 1 *match*)
                                                     vals1 =a
                                                       (field 0 *match*))
                                                    (before typing/typedtree.ml(702):20411-20690
                                                      (let
                                                        (*match* =
                                                           (after typing/typedtree.ml(702):20430-20446
                                                             (apply
                                                               split_pattern
                                                               p2))
                                                         exns2 =a
                                                           (field 1 *match*)
                                                         vals2 =a
                                                           (field 0 *match*))
                                                        (before typing/typedtree.ml(703):20458-20690
                                                          (makeblock 0
                                                            (after typing/typedtree.ml(703):20458-20505
                                                              (apply
                                                                combine_pattern_desc_opts
                                                                pat vals1
                                                                vals2))
                                                            (after typing/typedtree.ml(706):20643-20690
                                                              (apply
                                                                combine_pattern_desc_opts
                                                                pat exns1
                                                                exns2)))))))))))
                                         case tag 10:
                                          (let (p =a (field 0 *match*))
                                            (before typing/typedtree.ml(708):20725-20737
                                              (makeblock 0 0a
                                                (makeblock 0 p))))
                                         default: (exit 13))
                                       with (13)
                                        (before typing/typedtree.ml(710):20757-20771
                                          (makeblock 0 (makeblock 0 pat) 0a))))))))
                           (before typing/typedtree.ml(712):20779-20796
                             (after typing/typedtree.ml(712):20779-20796
                               (apply split_pattern pat))))))))))
            (pseudo _none_(0)<ghost>:-1--1
              (makeblock 0 iter_pattern_desc map_pattern_desc
                let_bound_idents rev_let_bound_idents
                let_bound_idents_with_loc alpha_pat mknoloc mkloc
                pat_bound_idents pat_bound_idents_full split_pattern))))))))
