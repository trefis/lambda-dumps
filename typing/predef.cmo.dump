(setglobal Predef!
  (let
    (builtin_idents = (makemutable 0 0a)
     wrap =
       (function create s
         (funct-body typing/predef.ml(24)<ghost>:1226-1312
           (before typing/predef.ml(25):1239-1312
             (let
               (id = (after typing/predef.ml(25):1248-1256 (apply create s)))
               (before typing/predef.ml(26):1262-1312
                 (seq
                   (setfield_ptr 0 builtin_idents
                     (makeblock 0 (makeblock 0 s id)
                       (field 0 builtin_idents)))
                   (before typing/predef.ml(27):1310-1312 id)))))))
     ident_create =
       (after typing/predef.ml(29):1333-1357
         (apply wrap (field 12 (global Ident!))))
     ident_int =
       (after typing/predef.ml(31):1375-1393 (apply ident_create "int"))
     ident_char =
       (after typing/predef.ml(32):1411-1430 (apply ident_create "char"))
     ident_bytes =
       (after typing/predef.ml(33):1449-1469 (apply ident_create "bytes"))
     ident_float =
       (after typing/predef.ml(34):1488-1508 (apply ident_create "float"))
     ident_bool =
       (after typing/predef.ml(35):1526-1545 (apply ident_create "bool"))
     ident_unit =
       (after typing/predef.ml(36):1563-1582 (apply ident_create "unit"))
     ident_exn =
       (after typing/predef.ml(37):1599-1617 (apply ident_create "exn"))
     ident_array =
       (after typing/predef.ml(38):1636-1656 (apply ident_create "array"))
     ident_list =
       (after typing/predef.ml(39):1674-1693 (apply ident_create "list"))
     ident_option =
       (after typing/predef.ml(40):1713-1734 (apply ident_create "option"))
     ident_nativeint =
       (after typing/predef.ml(41):1757-1781
         (apply ident_create "nativeint"))
     ident_int32 =
       (after typing/predef.ml(42):1800-1820 (apply ident_create "int32"))
     ident_int64 =
       (after typing/predef.ml(43):1839-1859 (apply ident_create "int64"))
     ident_lazy_t =
       (after typing/predef.ml(44):1879-1900 (apply ident_create "lazy_t"))
     ident_string =
       (after typing/predef.ml(45):1920-1941 (apply ident_create "string"))
     ident_extension_constructor =
       (after typing/predef.ml(46):1976-2012
         (apply ident_create "extension_constructor"))
     ident_floatarray =
       (after typing/predef.ml(47):2036-2061
         (apply ident_create "floatarray"))
     path_int = (makeblock 0 ident_int)
     path_char = (makeblock 0 ident_char)
     path_bytes = (makeblock 0 ident_bytes)
     path_float = (makeblock 0 ident_float)
     path_bool = (makeblock 0 ident_bool)
     path_unit = (makeblock 0 ident_unit)
     path_exn = (makeblock 0 ident_exn)
     path_array = (makeblock 0 ident_array)
     path_list = (makeblock 0 ident_list)
     path_option = (makeblock 0 ident_option)
     path_nativeint = (makeblock 0 ident_nativeint)
     path_int32 = (makeblock 0 ident_int32)
     path_int64 = (makeblock 0 ident_int64)
     path_lazy_t = (makeblock 0 ident_lazy_t)
     path_string = (makeblock 0 ident_string)
     path_extension_constructor = (makeblock 0 ident_extension_constructor)
     path_floatarray = (makeblock 0 ident_floatarray)
     type_int =
       (after typing/predef.ml(67):2731-2773
         (apply (field 5 (global Btype!))
           (makeblock 3 path_int 0a (makemutable 0 0a))))
     type_char =
       (after typing/predef.ml(68):2790-2833
         (apply (field 5 (global Btype!))
           (makeblock 3 path_char 0a (makemutable 0 0a))))
     type_bytes =
       (after typing/predef.ml(69):2851-2895
         (apply (field 5 (global Btype!))
           (makeblock 3 path_bytes 0a (makemutable 0 0a))))
     type_float =
       (after typing/predef.ml(70):2913-2957
         (apply (field 5 (global Btype!))
           (makeblock 3 path_float 0a (makemutable 0 0a))))
     type_bool =
       (after typing/predef.ml(71):2974-3017
         (apply (field 5 (global Btype!))
           (makeblock 3 path_bool 0a (makemutable 0 0a))))
     type_unit =
       (after typing/predef.ml(72):3034-3077
         (apply (field 5 (global Btype!))
           (makeblock 3 path_unit 0a (makemutable 0 0a))))
     type_exn =
       (after typing/predef.ml(73):3093-3135
         (apply (field 5 (global Btype!))
           (makeblock 3 path_exn 0a (makemutable 0 0a))))
     type_array =
       (function t
         (funct-body typing/predef.ml(74)<ghost>:3151-3200
           (before typing/predef.ml(74):3155-3200
             (after typing/predef.ml(74):3155-3200
               (apply (field 5 (global Btype!))
                 (makeblock 3 path_array (makeblock 0 t 0a)
                   (makemutable 0 0a)))))))
     type_list =
       (function t
         (funct-body typing/predef.ml(75)<ghost>:3215-3263
           (before typing/predef.ml(75):3219-3263
             (after typing/predef.ml(75):3219-3263
               (apply (field 5 (global Btype!))
                 (makeblock 3 path_list (makeblock 0 t 0a)
                   (makemutable 0 0a)))))))
     type_option =
       (function t
         (funct-body typing/predef.ml(76)<ghost>:3280-3330
           (before typing/predef.ml(76):3284-3330
             (after typing/predef.ml(76):3284-3330
               (apply (field 5 (global Btype!))
                 (makeblock 3 path_option (makeblock 0 t 0a)
                   (makemutable 0 0a)))))))
     type_nativeint =
       (after typing/predef.ml(77):3352-3400
         (apply (field 5 (global Btype!))
           (makeblock 3 path_nativeint 0a (makemutable 0 0a))))
     type_int32 =
       (after typing/predef.ml(78):3418-3462
         (apply (field 5 (global Btype!))
           (makeblock 3 path_int32 0a (makemutable 0 0a))))
     type_int64 =
       (after typing/predef.ml(79):3480-3524
         (apply (field 5 (global Btype!))
           (makeblock 3 path_int64 0a (makemutable 0 0a))))
     type_lazy_t =
       (function t
         (funct-body typing/predef.ml(80)<ghost>:3541-3591
           (before typing/predef.ml(80):3545-3591
             (after typing/predef.ml(80):3545-3591
               (apply (field 5 (global Btype!))
                 (makeblock 3 path_lazy_t (makeblock 0 t 0a)
                   (makemutable 0 0a)))))))
     type_string =
       (after typing/predef.ml(81):3610-3655
         (apply (field 5 (global Btype!))
           (makeblock 3 path_string 0a (makemutable 0 0a))))
     type_extension_constructor =
       (after typing/predef.ml(83):3695-3755
         (apply (field 5 (global Btype!))
           (makeblock 3 path_extension_constructor 0a (makemutable 0 0a))))
     type_floatarray =
       (after typing/predef.ml(84):3778-3827
         (apply (field 5 (global Btype!))
           (makeblock 3 path_floatarray 0a (makemutable 0 0a))))
     ident_match_failure =
       (after typing/predef.ml(86):3855-3883
         (apply ident_create "Match_failure"))
     ident_out_of_memory =
       (after typing/predef.ml(87):3910-3938
         (apply ident_create "Out_of_memory"))
     ident_invalid_argument =
       (after typing/predef.ml(88):3968-3999
         (apply ident_create "Invalid_argument"))
     ident_failure =
       (after typing/predef.ml(89):4020-4042 (apply ident_create "Failure"))
     ident_not_found =
       (after typing/predef.ml(90):4065-4089
         (apply ident_create "Not_found"))
     ident_sys_error =
       (after typing/predef.ml(91):4112-4136
         (apply ident_create "Sys_error"))
     ident_end_of_file =
       (after typing/predef.ml(92):4161-4187
         (apply ident_create "End_of_file"))
     ident_division_by_zero =
       (after typing/predef.ml(93):4217-4248
         (apply ident_create "Division_by_zero"))
     ident_stack_overflow =
       (after typing/predef.ml(94):4276-4305
         (apply ident_create "Stack_overflow"))
     ident_sys_blocked_io =
       (after typing/predef.ml(95):4333-4362
         (apply ident_create "Sys_blocked_io"))
     ident_assert_failure =
       (after typing/predef.ml(96):4390-4419
         (apply ident_create "Assert_failure"))
     ident_undefined_recursive_module =
       (after typing/predef.ml(98):4467-4508
         (apply ident_create "Undefined_recursive_module"))
     all_predef_exns =
       (makeblock 0 ident_match_failure
         (makeblock 0 ident_out_of_memory
           (makeblock 0 ident_invalid_argument
             (makeblock 0 ident_failure
               (makeblock 0 ident_not_found
                 (makeblock 0 ident_sys_error
                   (makeblock 0 ident_end_of_file
                     (makeblock 0 ident_division_by_zero
                       (makeblock 0 ident_stack_overflow
                         (makeblock 0 ident_sys_blocked_io
                           (makeblock 0 ident_assert_failure
                             (makeblock 0 ident_undefined_recursive_module
                               0a))))))))))))
     path_match_failure = (makeblock 0 ident_match_failure)
     path_assert_failure = (makeblock 0 ident_assert_failure)
     path_undefined_recursive_module =
       (makeblock 0 ident_undefined_recursive_module)
     decl_abstr =
       (makeblock 0 (*,int,*,*,*,*,*,int,*,*,*,*) 0a 0 0a 1a 0a 0a 0a
         (field 38 (global Btype!)) (field 0 (global Location!)) 0a 0a
         (field 4 (global Types!)))
     decl_abstr_imm =
       (let (init = decl_abstr)
         (makeblock 0 (*,int,*,*,*,*,*,int,*,*,*,*) (field 0 init)
           (field 1 init) (field 2 init) (field 3 init) (field 4 init)
           (field 5 init) (field 6 init) (field 7 init) (field 8 init)
           (field 9 init) 1a (field 11 init)))
     cstr =
       (function id args
         (funct-body typing/predef.ml(136)<ghost>:5446-5581
           (before typing/predef.ml(137):5458-5581
             (makeblock 0 id (makeblock 0 args) 0a
               (field 0 (global Location!)) 0a))))
     ident_false =
       (after typing/predef.ml(145):5601-5621 (apply ident_create "false"))
     ident_true =
       (after typing/predef.ml(146):5639-5658 (apply ident_create "true"))
     ident_void =
       (after typing/predef.ml(147):5676-5693 (apply ident_create "()"))
     ident_nil =
       (after typing/predef.ml(148):5710-5727 (apply ident_create "[]"))
     ident_cons =
       (after typing/predef.ml(149):5745-5762 (apply ident_create "::"))
     ident_none =
       (after typing/predef.ml(150):5780-5799 (apply ident_create "None"))
     ident_some =
       (after typing/predef.ml(151):5817-5836 (apply ident_create "Some"))
     common_initial_env =
       (function add_type add_extension empty_env
         (funct-body typing/predef.ml(152)<ghost>:5860-8866
           (before typing/predef.ml(153):5897-8866
             (let
               (decl_bool =
                  (let (init = decl_abstr)
                    (makeblock 0 (*,int,*,*,*,*,*,int,*,*,*,*) (field 0 init)
                      (field 1 init)
                      (makeblock 1
                        (makeblock 0
                          (after typing/predef.ml(155):5965-5984
                            (apply cstr ident_false 0a))
                          (makeblock 0
                            (after typing/predef.ml(155):5986-6004
                              (apply cstr ident_true 0a))
                            0a)))
                      (field 3 init) (field 4 init) (field 5 init)
                      (field 6 init) (field 7 init) (field 8 init)
                      (field 9 init) 1a (field 11 init)))
                decl_unit =
                  (let (init = decl_abstr)
                    (makeblock 0 (*,int,*,*,*,*,*,int,*,*,*,*) (field 0 init)
                      (field 1 init)
                      (makeblock 1
                        (makeblock 0
                          (after typing/predef.ml(159):6106-6124
                            (apply cstr ident_void 0a))
                          0a))
                      (field 3 init) (field 4 init) (field 5 init)
                      (field 6 init) (field 7 init) (field 8 init)
                      (field 9 init) 1a (field 11 init)))
                decl_exn =
                  (let (init = decl_abstr)
                    (makeblock 0 (*,int,*,*,*,*,*,int,*,*,*,*) (field 0 init)
                      (field 1 init) 1a (field 3 init) (field 4 init)
                      (field 5 init) (field 6 init) (field 7 init)
                      (field 8 init) (field 9 init) (field 10 init)
                      (field 11 init)))
                decl_array =
                  (let
                    (tvar =
                       (after typing/predef.ml(165):6256-6267
                         (apply (field 6 (global Btype!)) 0a 0a)))
                    (before typing/predef.ml(166):6275-6377
                      (let (init = decl_abstr)
                        (makeblock 0 (*,int,*,*,*,*,*,int,*,*,*,*)
                          (makeblock 0 tvar 0a) 1 (field 2 init)
                          (field 3 init) (field 4 init)
                          (makeblock 0 (field 1 (field 3 (global Types!)))
                            0a)
                          (field 6 init) (field 7 init) (field 8 init)
                          (field 9 init) (field 10 init) (field 11 init)))))
                decl_list =
                  (let
                    (tvar =
                       (after typing/predef.ml(171):6411-6422
                         (apply (field 6 (global Btype!)) 0a 0a)))
                    (before typing/predef.ml(172):6430-6634
                      (let (init = decl_abstr)
                        (makeblock 0 (*,int,*,*,*,*,*,int,*,*,*,*)
                          (makeblock 0 tvar 0a) 1
                          (makeblock 1
                            (makeblock 0
                              (after typing/predef.ml(176):6531-6548
                                (apply cstr ident_nil 0a))
                              (makeblock 0
                                (after typing/predef.ml(176):6550-6588
                                  (apply cstr ident_cons
                                    (makeblock 0 tvar
                                      (makeblock 0
                                        (after typing/predef.ml(176):6573-6587
                                          (apply type_list tvar))
                                        0a))))
                                0a)))
                          (field 3 init) (field 4 init)
                          (makeblock 0 (field 2 (field 3 (global Types!)))
                            0a)
                          (field 6 init) (field 7 init) (field 8 init)
                          (field 9 init) (field 10 init) (field 11 init)))))
                decl_option =
                  (let
                    (tvar =
                       (after typing/predef.ml(179):6670-6681
                         (apply (field 6 (global Btype!)) 0a 0a)))
                    (before typing/predef.ml(180):6689-6873
                      (let (init = decl_abstr)
                        (makeblock 0 (*,int,*,*,*,*,*,int,*,*,*,*)
                          (makeblock 0 tvar 0a) 1
                          (makeblock 1
                            (makeblock 0
                              (after typing/predef.ml(183):6785-6803
                                (apply cstr ident_none 0a))
                              (makeblock 0
                                (after typing/predef.ml(183):6805-6827
                                  (apply cstr ident_some
                                    (makeblock 0 tvar 0a)))
                                0a)))
                          (field 3 init) (field 4 init)
                          (makeblock 0 (field 2 (field 3 (global Types!)))
                            0a)
                          (field 6 init) (field 7 init) (field 8 init)
                          (field 9 init) (field 10 init) (field 11 init)))))
                decl_lazy_t =
                  (let
                    (tvar =
                       (after typing/predef.ml(186):6909-6920
                         (apply (field 6 (global Btype!)) 0a 0a)))
                    (before typing/predef.ml(187):6928-7035
                      (let (init = decl_abstr)
                        (makeblock 0 (*,int,*,*,*,*,*,int,*,*,*,*)
                          (makeblock 0 tvar 0a) 1 (field 2 init)
                          (field 3 init) (field 4 init)
                          (makeblock 0 (field 2 (field 3 (global Types!)))
                            0a)
                          (field 6 init) (field 7 init) (field 8 init)
                          (field 9 init) (field 10 init) (field 11 init))))))
               (before typing/predef.ml(193):7044-8866
                 (let
                   (add_extension =
                      (function id l
                        (funct-body typing/predef.ml(193)<ghost>:7062-7462
                          (before typing/predef.ml(194):7073-7462
                            (after typing/predef.ml(194):7073-7462
                              (apply add_extension id
                                (makeblock 0 path_exn 0a (makeblock 0 l) 0a
                                  1a (field 0 (global Location!))
                                  (makeblock 0
                                    (after typing/predef.ml(201):7314-7459
                                      (apply
                                        (field 0
                                          (field 3 (global Ast_helper!)))
                                        0a
                                        (after typing/predef.ml(202):7361-7411
                                          (apply (field 9 (global Location!))
                                            "ocaml.warn_on_literal_pattern"))
                                        [0: 0a]))
                                    0a))))))))
                   (before typing/predef.ml(205):7470-8866
                     (after typing/predef.ml(205):7470-8866
                       (apply add_extension ident_match_failure
                         (makeblock 0
                           (after typing/predef.ml(206):7530-7580
                             (apply (field 5 (global Btype!))
                               (makeblock 2
                                 (makeblock 0 type_string
                                   (makeblock 0 type_int
                                     (makeblock 0 type_int 0a))))))
                           0a)
                         (after typing/predef.ml(206):7582-8866
                           (apply add_extension ident_out_of_memory 0a
                             (after typing/predef.ml(207):7623-8865
                               (apply add_extension ident_stack_overflow 0a
                                 (after typing/predef.ml(208):7665-8864
                                   (apply add_extension
                                     ident_invalid_argument
                                     (makeblock 0 type_string 0a)
                                     (after typing/predef.ml(209):7720-8863
                                       (apply add_extension ident_failure
                                         (makeblock 0 type_string 0a)
                                         (after typing/predef.ml(210):7766-8862
                                           (apply add_extension
                                             ident_not_found 0a
                                             (after typing/predef.ml(211):7803-8861
                                               (apply add_extension
                                                 ident_sys_blocked_io 0a
                                                 (after typing/predef.ml(212):7845-8860
                                                   (apply add_extension
                                                     ident_sys_error
                                                     (makeblock 0 type_string
                                                       0a)
                                                     (after typing/predef.ml(213):7893-8859
                                                       (apply add_extension
                                                         ident_end_of_file 0a
                                                         (after typing/predef.ml(214):7932-8858
                                                           (apply
                                                             add_extension
                                                             ident_division_by_zero
                                                             0a
                                                             (after typing/predef.ml(215):7976-8857
                                                               (apply
                                                                 add_extension
                                                                 ident_assert_failure
                                                                 (makeblock 0
                                                                   (after typing/predef.ml(217):8041-8091
                                                                    (apply
                                                                    (field 5
                                                                    (global Btype!))
                                                                    (makeblock 2
                                                                    (makeblock 0
                                                                    type_string
                                                                    (makeblock 0
                                                                    type_int
                                                                    (makeblock 0
                                                                    type_int
                                                                    0a))))))
                                                                   0a)
                                                                 (after typing/predef.ml(217):8093-8856
                                                                   (apply
                                                                    add_extension
                                                                    ident_undefined_recursive_module
                                                                    (makeblock 0
                                                                    (after typing/predef.ml(219):8170-8220
                                                                    (apply
                                                                    (field 5
                                                                    (global Btype!))
                                                                    (makeblock 2
                                                                    (makeblock 0
                                                                    type_string
                                                                    (makeblock 0
                                                                    type_int
                                                                    (makeblock 0
                                                                    type_int
                                                                    0a))))))
                                                                    0a)
                                                                    (after typing/predef.ml(219):8222-8855
                                                                    (apply
                                                                    add_type
                                                                    ident_int64
                                                                    decl_abstr
                                                                    (after typing/predef.ml(220):8258-8854
                                                                    (apply
                                                                    add_type
                                                                    ident_int32
                                                                    decl_abstr
                                                                    (after typing/predef.ml(221):8294-8853
                                                                    (apply
                                                                    add_type
                                                                    ident_nativeint
                                                                    decl_abstr
                                                                    (after typing/predef.ml(222):8334-8852
                                                                    (apply
                                                                    add_type
                                                                    ident_lazy_t
                                                                    decl_lazy_t
                                                                    (after typing/predef.ml(223):8372-8851
                                                                    (apply
                                                                    add_type
                                                                    ident_option
                                                                    decl_option
                                                                    (after typing/predef.ml(224):8410-8850
                                                                    (apply
                                                                    add_type
                                                                    ident_list
                                                                    decl_list
                                                                    (after typing/predef.ml(225):8444-8849
                                                                    (apply
                                                                    add_type
                                                                    ident_array
                                                                    decl_array
                                                                    (after typing/predef.ml(226):8480-8848
                                                                    (apply
                                                                    add_type
                                                                    ident_exn
                                                                    decl_exn
                                                                    (after typing/predef.ml(227):8512-8847
                                                                    (apply
                                                                    add_type
                                                                    ident_unit
                                                                    decl_unit
                                                                    (after typing/predef.ml(228):8546-8846
                                                                    (apply
                                                                    add_type
                                                                    ident_bool
                                                                    decl_bool
                                                                    (after typing/predef.ml(229):8580-8845
                                                                    (apply
                                                                    add_type
                                                                    ident_float
                                                                    decl_abstr
                                                                    (after typing/predef.ml(230):8616-8844
                                                                    (apply
                                                                    add_type
                                                                    ident_string
                                                                    decl_abstr
                                                                    (after typing/predef.ml(231):8653-8843
                                                                    (apply
                                                                    add_type
                                                                    ident_char
                                                                    decl_abstr_imm
                                                                    (after typing/predef.ml(232):8692-8842
                                                                    (apply
                                                                    add_type
                                                                    ident_int
                                                                    decl_abstr_imm
                                                                    (after typing/predef.ml(233):8730-8841
                                                                    (apply
                                                                    add_type
                                                                    ident_extension_constructor
                                                                    decl_abstr
                                                                    (after typing/predef.ml(234):8782-8840
                                                                    (apply
                                                                    add_type
                                                                    ident_floatarray
                                                                    decl_abstr
                                                                    empty_env)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
     build_initial_env =
       (function add_type add_exception empty_env
         (funct-body typing/predef.ml(238)<ghost>:8890-9238
           (before typing/predef.ml(239):8927-9238
             (let
               (common =
                  (after typing/predef.ml(239):8940-8991
                    (apply common_initial_env add_type add_exception
                      empty_env)))
               (before typing/predef.ml(240):8997-9238
                 (let
                   (safe_string =
                      (after typing/predef.ml(240):9015-9053
                        (apply add_type ident_bytes decl_abstr common)))
                   (before typing/predef.ml(241):9059-9238
                     (let
                       (decl_bytes_unsafe =
                          (let (init = decl_abstr)
                            (makeblock 0 (*,int,*,*,*,*,*,int,*,*,*,*)
                              (field 0 init) (field 1 init) (field 2 init)
                              (field 3 init) (makeblock 0 type_string)
                              (field 5 init) (field 6 init) (field 7 init)
                              (field 8 init) (field 9 init) (field 10 init)
                              (field 11 init))))
                       (before typing/predef.ml(242):9139-9238
                         (let
                           (unsafe_string =
                              (after typing/predef.ml(242):9159-9204
                                (apply add_type ident_bytes decl_bytes_unsafe
                                  common)))
                           (before typing/predef.ml(243):9210-9238
                             (makeblock 0 safe_string unsafe_string))))))))))))
     builtin_values =
       (after typing/predef.ml(246):9263-9319
         (apply (field 16 (global Stdlib__list!))
           (function id
             (funct-body typing/predef.ml(246):9272-9303
               (before typing/predef.ml(246):9283-9302
                 (makeblock 0
                   (after typing/predef.ml(246):9284-9297
                     (apply (field 14 (global Ident!)) id))
                   id))))
           all_predef_exns))
     builtin_idents =
       (after typing/predef.ml(248):9342-9366
         (apply (field 8 (global Stdlib__list!)) (field 0 builtin_idents))))
    (pseudo _none_(0)<ghost>:-1--1
      (makeblock 0 type_int type_char type_string type_bytes type_float
        type_bool type_unit type_exn type_array type_list type_option
        type_nativeint type_int32 type_int64 type_lazy_t
        type_extension_constructor type_floatarray path_int path_char
        path_string path_bytes path_float path_bool path_unit path_exn
        path_array path_list path_option path_nativeint path_int32 path_int64
        path_lazy_t path_extension_constructor path_floatarray
        path_match_failure path_assert_failure
        path_undefined_recursive_module build_initial_env builtin_values
        builtin_idents ident_division_by_zero all_predef_exns))))
