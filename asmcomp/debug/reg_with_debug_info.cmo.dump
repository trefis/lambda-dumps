(setglobal Reg_with_debug_info!
  (let
    (Debug_info =
       (module-defn(Debug_info) asmcomp/debug/reg_with_debug_info.ml(19):1067-2090
         (let
           (compare =
              (function t1 t2 : int
                (funct-body asmcomp/debug/reg_with_debug_info.ml(28)<ghost>:1271-1530
                  (before asmcomp/debug/reg_with_debug_info.ml(29):1283-1530
                    (let
                      (c =[int]
                         (after asmcomp/debug/reg_with_debug_info.ml(29):1291-1336
                           (apply (field 15 (global Backend_var!))
                             (field 0 t1) (field 0 t2))))
                      (before asmcomp/debug/reg_with_debug_info.ml(30):1344-1530
                        (if (!= c 0)
                          (before asmcomp/debug/reg_with_debug_info.ml(30):1359-1360
                            c)
                          (before asmcomp/debug/reg_with_debug_info.ml(32):1376-1530
                            (after asmcomp/debug/reg_with_debug_info.ml(32):1376-1530
                              (caml_compare
                                (makeblock 0 (int,int,*) (field 1 t1)
                                  (field 2 t1) (field 3 t1))
                                (makeblock 0 (int,int,*) (field 1 t2)
                                  (field 2 t2) (field 3 t2)))))))))))
            holds_value_of =
              (function t
                (funct-body asmcomp/debug/reg_with_debug_info.ml(36)<ghost>:1553-1573
                  (before asmcomp/debug/reg_with_debug_info.ml(36):1557-1573
                    (field 0 t))))
            part_of_value =
              (function t : int
                (funct-body asmcomp/debug/reg_with_debug_info.ml(37)<ghost>:1594-1613
                  (before asmcomp/debug/reg_with_debug_info.ml(37):1598-1613
                    (field 1 t))))
            num_parts_of_value =
              (function t : int
                (funct-body asmcomp/debug/reg_with_debug_info.ml(38)<ghost>:1639-1663
                  (before asmcomp/debug/reg_with_debug_info.ml(38):1643-1663
                    (field 2 t))))
            which_parameter =
              (function t
                (funct-body asmcomp/debug/reg_with_debug_info.ml(39)<ghost>:1686-1707
                  (before asmcomp/debug/reg_with_debug_info.ml(39):1690-1707
                    (field 3 t))))
            provenance =
              (function t
                (funct-body asmcomp/debug/reg_with_debug_info.ml(40)<ghost>:1725-1741
                  (before asmcomp/debug/reg_with_debug_info.ml(40):1729-1741
                    (field 4 t))))
            print =
              (function ppf t
                (funct-body asmcomp/debug/reg_with_debug_info.ml(42)<ghost>:1755-2086
                  (before asmcomp/debug/reg_with_debug_info.ml(43):1767-2086
                    (seq
                      (after asmcomp/debug/reg_with_debug_info.ml(43):1767-1815
                        (apply (field 122 (global Stdlib__format!)) ppf
                          [0: [15: 0a] "%a"] (field 3 (global Backend_var!))
                          (field 0 t)))
                      (before asmcomp/debug/reg_with_debug_info.ml(44):1821-2086
                        (seq
                          (if
                            (not (&& (== (field 1 t) 0) (== (field 2 t) 1)))
                            (before asmcomp/debug/reg_with_debug_info.ml(44):1883-1968
                              (after asmcomp/debug/reg_with_debug_info.ml(44):1883-1968
                                (apply (field 122 (global Stdlib__format!))
                                  ppf
                                  [0:
                                   [12:
                                    '('
                                    [4:
                                     0a 0a 0a
                                     [12: '/' [4: 0a 0a 0a [12: ')' 0a]]]]]
                                   "(%d/%d)"]
                                  (field 1 t) (field 2 t))))
                            0a)
                          (before asmcomp/debug/reg_with_debug_info.ml(47):1974-2086
                            (let (*match* = (field 3 t))
                              (if *match*
                                (let (index =a (field 0 *match*))
                                  (before asmcomp/debug/reg_with_debug_info.ml(49):2046-2078
                                    (after asmcomp/debug/reg_with_debug_info.ml(49):2046-2078
                                      (apply
                                        (field 122 (global Stdlib__format!))
                                        ppf
                                        [0:
                                         [11:
                                          "[P" [4: 0a 0a 0a [12: ']' 0a]]]
                                         "[P%d]"]
                                        index))))
                                (before asmcomp/debug/reg_with_debug_info.ml(48):2023-2025
                                  0a)))))))))))
           (pseudo asmcomp/debug/reg_with_debug_info.ml(19):1087-2090
             (makeblock 0 compare holds_value_of part_of_value
               num_parts_of_value which_parameter provenance print))))
     T =
       (module-defn(T) asmcomp/debug/reg_with_debug_info.ml(53):2092-2346
         (let
           (Order =
              (module-defn(Order) asmcomp/debug/reg_with_debug_info.ml(59):2185-2287
                (let
                  (compare =
                     (function t1 t2 : int
                       (funct-body asmcomp/debug/reg_with_debug_info.ml(61)<ghost>:2242-2281
                         (before asmcomp/debug/reg_with_debug_info.ml(61):2262-2281
                           (- (field 1 t1) (field 1 t2))))))
                  (pseudo asmcomp/debug/reg_with_debug_info.ml(59):2200-2287
                    (makeblock 0 compare))))
            compare =
              (function t1 t2 : int
                (funct-body asmcomp/debug/reg_with_debug_info.ml(64)<ghost>:2303-2342
                  (before asmcomp/debug/reg_with_debug_info.ml(65):2315-2342
                    (after asmcomp/debug/reg_with_debug_info.ml(65):2315-2342
                      (apply (field 0 Order) (field 0 t1) (field 0 t2)))))))
           (pseudo asmcomp/debug/reg_with_debug_info.ml(53):2103-2346
             (makeblock 0 Order compare))))
     create =
       (function reg holds_value_of part_of_value[int]
         num_parts_of_value[int] which_parameter provenance
         (funct-body asmcomp/debug/reg_with_debug_info.ml(72)<ghost>:2400-2878
           (before asmcomp/debug/reg_with_debug_info.ml(74):2495-2878
             (seq
               (if (>= num_parts_of_value 1) 0a
                 (raise
                   (after asmcomp/debug/reg_with_debug_info.ml(74):2495-2527
                     (makeblock 0 (global Assert_failure!)
                       [0: "asmcomp/debug/reg_with_debug_info.ml" 74 2]))))
               (before asmcomp/debug/reg_with_debug_info.ml(75):2531-2878
                 (seq
                   (if
                     (&& (>= part_of_value 0)
                       (< part_of_value num_parts_of_value))
                     0a
                     (raise
                       (after asmcomp/debug/reg_with_debug_info.ml(75):2531-2596
                         (makeblock 0 (global Assert_failure!)
                           [0: "asmcomp/debug/reg_with_debug_info.ml" 75 2]))))
                   (before asmcomp/debug/reg_with_debug_info.ml(76):2600-2878
                     (seq
                       (if
                         (if which_parameter
                           (let (index =a (field 0 which_parameter))
                             (before asmcomp/debug/reg_with_debug_info.ml(76):2664-2674
                               (>= index 0)))
                           (before asmcomp/debug/reg_with_debug_info.ml(76):2643-2647
                             1a))
                         0a
                         (raise
                           (after asmcomp/debug/reg_with_debug_info.ml(76):2600-2675
                             (makeblock 0 (global Assert_failure!)
                               [0:
                                "asmcomp/debug/reg_with_debug_info.ml" 76 2]))))
                       (before asmcomp/debug/reg_with_debug_info.ml(77):2679-2878
                         (let
                           (debug_info =
                              (makeblock 0 (*,int,int,*,*) holds_value_of
                                part_of_value num_parts_of_value
                                which_parameter provenance))
                           (before asmcomp/debug/reg_with_debug_info.ml(85):2834-2878
                             (makeblock 0 reg (makeblock 0 debug_info)))))))))))))
     create_with_debug_info =
       (function reg debug_info
         (funct-body asmcomp/debug/reg_with_debug_info.ml(89)<ghost>:2907-2954
           (before asmcomp/debug/reg_with_debug_info.ml(90):2928-2954
             (makeblock 0 reg debug_info))))
     create_without_debug_info =
       (function reg
         (funct-body asmcomp/debug/reg_with_debug_info.ml(94)<ghost>:2986-3028
           (before asmcomp/debug/reg_with_debug_info.ml(95):2995-3028
             (makeblock 0 reg 0a))))
     create_copying_debug_info =
       (function reg debug_info_from
         (funct-body asmcomp/debug/reg_with_debug_info.ml(99)<ghost>:3060-3141
           (before asmcomp/debug/reg_with_debug_info.ml(100):3086-3141
             (makeblock 0 reg (field 1 debug_info_from)))))
     reg =
       (function t
         (funct-body asmcomp/debug/reg_with_debug_info.ml(104)<ghost>:3151-3160
           (before asmcomp/debug/reg_with_debug_info.ml(104):3155-3160
             (field 0 t))))
     location =
       (function t
         (funct-body asmcomp/debug/reg_with_debug_info.ml(105)<ghost>:3174-3187
           (before asmcomp/debug/reg_with_debug_info.ml(105):3178-3187
             (field 3 (field 0 t)))))
     holds_pointer =
       (function t
         (funct-body asmcomp/debug/reg_with_debug_info.ml(107)<ghost>:3207-3281
           (before asmcomp/debug/reg_with_debug_info.ml(108):3213-3281
             (let (*match* = (field 2 (field 0 t)))
               (if (>= *match* 2)
                 (before asmcomp/debug/reg_with_debug_info.ml(110):3276-3281
                   0a)
                 (before asmcomp/debug/reg_with_debug_info.ml(109):3252-3256
                   1a))))))
     holds_non_pointer =
       (function t
         (funct-body asmcomp/debug/reg_with_debug_info.ml(112)<ghost>:3305-3330
           (before asmcomp/debug/reg_with_debug_info.ml(112):3309-3330
             (not
               (after asmcomp/debug/reg_with_debug_info.ml(112):3313-3330
                 (apply holds_pointer t))))))
     assigned_to_stack =
       (function t
         (funct-body asmcomp/debug/reg_with_debug_info.ml(114)<ghost>:3354-3429
           (before asmcomp/debug/reg_with_debug_info.ml(115):3360-3429
             (let (*match* = (field 3 (field 0 t)))
               (catch
                 (switch* *match*
                  case int 0: (exit 3)
                  case tag 0: (exit 3)
                  case tag 1:
                   (before asmcomp/debug/reg_with_debug_info.ml(116):3396-3400
                     1a))
                with (3)
                 (before asmcomp/debug/reg_with_debug_info.ml(117):3424-3429
                   0a))))))
     regs_at_same_location =
       (function reg1 reg2 register_class
         (funct-body asmcomp/debug/reg_with_debug_info.ml(119)<ghost>:3457-3902
           (before asmcomp/debug/reg_with_debug_info.ml(125):3834-3902
             (&&
               (after asmcomp/debug/reg_with_debug_info.ml(125):3834-3853
                 (caml_equal (field 3 reg1) (field 3 reg2)))
               (after asmcomp/debug/reg_with_debug_info.ml(126):3861-3902
                 (caml_equal
                   (after asmcomp/debug/reg_with_debug_info.ml(126):3861-3880
                     (apply register_class reg1))
                   (after asmcomp/debug/reg_with_debug_info.ml(126):3883-3902
                     (apply register_class reg2))))))))
     at_same_location =
       (function t reg register_class
         (funct-body asmcomp/debug/reg_with_debug_info.ml(128)<ghost>:3925-4008
           (before asmcomp/debug/reg_with_debug_info.ml(129):3961-4008
             (after asmcomp/debug/reg_with_debug_info.ml(129):3961-4008
               (apply regs_at_same_location (field 0 t) reg register_class)))))
     debug_info =
       (function t
         (funct-body asmcomp/debug/reg_with_debug_info.ml(131)<ghost>:4025-4041
           (before asmcomp/debug/reg_with_debug_info.ml(131):4029-4041
             (field 1 t))))
     clear_debug_info =
       (function t
         (funct-body asmcomp/debug/reg_with_debug_info.ml(133)<ghost>:4064-4099
           (before asmcomp/debug/reg_with_debug_info.ml(134):4070-4099
             (let (init = t) (makeblock 0 (field 0 init) 0a)))))
     Order_distinguishing_names_and_locations =
       (module-defn(Order_distinguishing_names_and_locations) asmcomp/debug/reg_with_debug_info.ml(136):4101-4483
         (let
           (compare =
              (function t1 t2 : int
                (funct-body asmcomp/debug/reg_with_debug_info.ml(139)<ghost>:4193-4479
                  (before asmcomp/debug/reg_with_debug_info.ml(140):4205-4479
                    (let
                      (*match* = (field 1 t1)
                       *match* = (field 1 t2)
                       *match* = *match*
                       *match* = *match*)
                      (if *match*
                        (let (di1 =a (field 0 *match*))
                          (if *match*
                            (let (di2 =a (field 0 *match*))
                              (before asmcomp/debug/reg_with_debug_info.ml(145):4350-4479
                                (let
                                  (c =[int]
                                     (after asmcomp/debug/reg_with_debug_info.ml(145):4358-4405
                                       (apply
                                         (field 15 (global Backend_var!))
                                         (field 0 di1) (field 0 di2))))
                                  (before asmcomp/debug/reg_with_debug_info.ml(146):4415-4479
                                    (if (!= c 0)
                                      (before asmcomp/debug/reg_with_debug_info.ml(146):4430-4431
                                        c)
                                      (before asmcomp/debug/reg_with_debug_info.ml(147):4443-4479
                                        (after asmcomp/debug/reg_with_debug_info.ml(147):4443-4479
                                          (caml_compare
                                            (field 3 (field 0 t1))
                                            (field 3 (field 0 t2))))))))))
                            (before asmcomp/debug/reg_with_debug_info.ml(143):4314-4315
                              1)))
                        (if *match*
                          (before asmcomp/debug/reg_with_debug_info.ml(142):4289-4291
                            -1)
                          (before asmcomp/debug/reg_with_debug_info.ml(141):4265-4266
                            0))))))))
           (pseudo asmcomp/debug/reg_with_debug_info.ml(136):4151-4483
             (makeblock 0 compare))))
     Set_distinguishing_names_and_locations =
       (module-defn(Set_distinguishing_names_and_locations) asmcomp/debug/reg_with_debug_info.ml(150):4485-4586
         (apply
           (let (let = (field 0 (global Stdlib__set!)))
             (field 0 (global Stdlib__set!)))
           Order_distinguishing_names_and_locations))
     Map_distinguishing_names_and_locations =
       (module-defn(Map_distinguishing_names_and_locations) asmcomp/debug/reg_with_debug_info.ml(153):4588-4689
         (apply
           (let (let = (field 0 (global Stdlib__map!)))
             (field 0 (global Stdlib__map!)))
           Order_distinguishing_names_and_locations))
     Set =
       (module-defn(Set) asmcomp/debug/reg_with_debug_info.ml(156):4691-5854
         (let
           (include =
              (apply
                (let (let = (field 0 (global Stdlib__set!)))
                  (field 0 (global Stdlib__set!)))
                (makeblock 0 (field 1 T)))
            empty =a (field 0 include)
            is_empty =a (field 1 include)
            mem =a (field 2 include)
            add =a (field 3 include)
            singleton =a (field 4 include)
            remove =a (field 5 include)
            union =a (field 6 include)
            inter =a (field 7 include)
            disjoint =a (field 8 include)
            diff =a (field 9 include)
            compare =a (field 10 include)
            equal =a (field 11 include)
            subset =a (field 12 include)
            iter =a (field 13 include)
            map =a (field 14 include)
            fold =a (field 15 include)
            for_all =a (field 16 include)
            exists =a (field 17 include)
            filter =a (field 18 include)
            partition =a (field 19 include)
            cardinal =a (field 20 include)
            elements =a (field 21 include)
            min_elt =a (field 22 include)
            min_elt_opt =a (field 23 include)
            max_elt =a (field 24 include)
            max_elt_opt =a (field 25 include)
            choose =a (field 26 include)
            choose_opt =a (field 27 include)
            split =a (field 28 include)
            find =a (field 29 include)
            find_opt =a (field 30 include)
            find_first =a (field 31 include)
            find_first_opt =a (field 32 include)
            find_last =a (field 33 include)
            find_last_opt =a (field 34 include)
            of_list =a (field 35 include)
            to_seq_from =a (field 36 include)
            to_seq =a (field 37 include)
            add_seq =a (field 38 include)
            of_seq =a (field 39 include)
            of_array =
              (function elts
                (funct-body asmcomp/debug/reg_with_debug_info.ml(159)<ghost>:4750-4789
                  (before asmcomp/debug/reg_with_debug_info.ml(160):4761-4789
                    (after asmcomp/debug/reg_with_debug_info.ml(160):4761-4789
                      (apply of_list
                        (after asmcomp/debug/reg_with_debug_info.ml(160):4769-4789
                          (apply (field 10 (global Stdlib__array!)) elts)))))))
            forget_debug_info =
              (function t
                (funct-body asmcomp/debug/reg_with_debug_info.ml(162)<ghost>:4815-4882
                  (before asmcomp/debug/reg_with_debug_info.ml(163):4823-4882
                    (after asmcomp/debug/reg_with_debug_info.ml(163):4823-4882
                      (apply fold
                        (function t acc
                          (funct-body asmcomp/debug/reg_with_debug_info.ml(163):4828-4866
                            (before asmcomp/debug/reg_with_debug_info.ml(163):4842-4865
                              (after asmcomp/debug/reg_with_debug_info.ml(163):4842-4865
                                (apply (field 3 (field 9 (global Reg!)))
                                  (after asmcomp/debug/reg_with_debug_info.ml(163):4854-4861
                                    (apply reg t))
                                  acc)))))
                        t (field 0 (field 9 (global Reg!))))))))
            without_debug_info =
              (function regs
                (funct-body asmcomp/debug/reg_with_debug_info.ml(165)<ghost>:4909-5013
                  (before asmcomp/debug/reg_with_debug_info.ml(166):4920-5013
                    (after asmcomp/debug/reg_with_debug_info.ml(166):4920-5013
                      (apply (field 15 (field 9 (global Reg!)))
                        (function reg acc
                          (funct-body asmcomp/debug/reg_with_debug_info.ml(166):4933-4990
                            (before asmcomp/debug/reg_with_debug_info.ml(166):4949-4989
                              (after asmcomp/debug/reg_with_debug_info.ml(166):4949-4989
                                (apply add
                                  (after asmcomp/debug/reg_with_debug_info.ml(166):4953-4985
                                    (apply create_without_debug_info reg))
                                  acc)))))
                        regs empty)))))
            made_unavailable_by_clobber =
              (function t regs_clobbered register_class
                (funct-body asmcomp/debug/reg_with_debug_info.ml(170)<ghost>:5049-5368
                  (before asmcomp/debug/reg_with_debug_info.ml(171):5089-5368
                    (after asmcomp/debug/reg_with_debug_info.ml(171):5089-5368
                      (apply (field 15 (field 9 (global Reg!)))
                        (function reg acc
                          (funct-body asmcomp/debug/reg_with_debug_info.ml(171):5102-5305
                            (before asmcomp/debug/reg_with_debug_info.ml(172):5126-5304
                              (let
                                (made_unavailable =
                                   (after asmcomp/debug/reg_with_debug_info.ml(173):5159-5258
                                     (apply filter
                                       (function reg'
                                         (funct-body asmcomp/debug/reg_with_debug_info.ml(173):5166-5244
                                           (before asmcomp/debug/reg_with_debug_info.ml(174):5193-5243
                                             (after asmcomp/debug/reg_with_debug_info.ml(174):5193-5243
                                               (apply regs_at_same_location
                                                 (field 0 reg') reg
                                                 register_class)))))
                                       t)))
                                (before asmcomp/debug/reg_with_debug_info.ml(177):5278-5304
                                  (after asmcomp/debug/reg_with_debug_info.ml(177):5278-5304
                                    (apply union made_unavailable acc)))))))
                        (after asmcomp/debug/reg_with_debug_info.ml(178):5312-5345
                          (apply (field 15 (global Reg!)) regs_clobbered))
                        empty)))))
            mem_reg =
              (function t reg
                (funct-body asmcomp/debug/reg_with_debug_info.ml(181)<ghost>:5384-5449
                  (before asmcomp/debug/reg_with_debug_info.ml(182):5406-5449
                    (after asmcomp/debug/reg_with_debug_info.ml(182):5406-5449
                      (apply exists
                        (function t
                          (funct-body asmcomp/debug/reg_with_debug_info.ml(182):5413-5447
                            (before asmcomp/debug/reg_with_debug_info.ml(182):5423-5446
                              (== (field 1 (field 0 t)) (field 1 reg)))))
                        t)))))
            filter_reg =
              (function t reg
                (funct-body asmcomp/debug/reg_with_debug_info.ml(184)<ghost>:5468-5534
                  (before asmcomp/debug/reg_with_debug_info.ml(185):5490-5534
                    (after asmcomp/debug/reg_with_debug_info.ml(185):5490-5534
                      (apply filter
                        (function t
                          (funct-body asmcomp/debug/reg_with_debug_info.ml(185):5497-5532
                            (before asmcomp/debug/reg_with_debug_info.ml(185):5507-5531
                              (!= (field 1 (field 0 t)) (field 1 reg)))))
                        t)))))
            find_reg_exn =
              (function t reg
                (funct-body asmcomp/debug/reg_with_debug_info.ml(189)<ghost>:5692-5850
                  (before asmcomp/debug/reg_with_debug_info.ml(190):5714-5850
                    (let
                      (*match* =
                         (after asmcomp/debug/reg_with_debug_info.ml(190):5720-5774
                           (apply elements
                             (after asmcomp/debug/reg_with_debug_info.ml(190):5729-5774
                               (apply filter
                                 (function t
                                   (funct-body asmcomp/debug/reg_with_debug_info.ml(190):5737-5771
                                     (before asmcomp/debug/reg_with_debug_info.ml(190):5747-5770
                                       (== (field 1 (field 0 t))
                                         (field 1 reg)))))
                                 t)))))
                      (if *match*
                        (let (*match* =a (field 1 *match*))
                          (if *match*
                            (before asmcomp/debug/reg_with_debug_info.ml(193):5838-5850
                              (raise
                                (after asmcomp/debug/reg_with_debug_info.ml(193):5838-5850
                                  (makeblock 0 (global Assert_failure!)
                                    [0:
                                     "asmcomp/debug/reg_with_debug_info.ml"
                                     193 11]))))
                            (let (reg =a (field 0 *match*))
                              (before asmcomp/debug/reg_with_debug_info.ml(192):5823-5826
                                reg))))
                        (before asmcomp/debug/reg_with_debug_info.ml(191):5792-5807
                          (raise
                            (after asmcomp/debug/reg_with_debug_info.ml(191):5798-5807
                              (field 7 (global Stdlib!)))))))))))
           (pseudo asmcomp/debug/reg_with_debug_info.ml(156):4704-5854
             (makeblock 0 empty is_empty mem add singleton remove union inter
               disjoint diff compare equal subset iter map fold for_all
               exists filter partition cardinal elements min_elt min_elt_opt
               max_elt max_elt_opt choose choose_opt split find find_opt
               find_first find_first_opt find_last find_last_opt of_list
               to_seq_from to_seq add_seq of_seq of_array forget_debug_info
               without_debug_info made_unavailable_by_clobber mem_reg
               filter_reg find_reg_exn))))
     print =
       (function print_reg ppf t
         (funct-body asmcomp/debug/reg_with_debug_info.ml(196)<ghost>:5866-6061
           (before asmcomp/debug/reg_with_debug_info.ml(197):5887-6061
             (let (*match* = (field 1 t))
               (if *match*
                 (let (debug_info =a (field 0 *match*))
                   (before asmcomp/debug/reg_with_debug_info.ml(200):5990-6061
                     (after asmcomp/debug/reg_with_debug_info.ml(200):5990-6061
                       (apply (field 122 (global Stdlib__format!)) ppf
                         [0: [15: [12: '(' [15: [12: ')' 0a]]]] "%a(%a)"]
                         print_reg (field 0 t) (field 6 Debug_info)
                         debug_info))))
                 (before asmcomp/debug/reg_with_debug_info.ml(198):5923-5962
                   (after asmcomp/debug/reg_with_debug_info.ml(198):5923-5962
                     (apply (field 122 (global Stdlib__format!)) ppf
                       [0: [15: 0a] "%a"] print_reg (field 0 t))))))))))
    (pseudo _none_(0)<ghost>:-1--1
      (makeblock 0
        (makeblock 0 (field 0 Debug_info) (field 1 Debug_info)
          (field 2 Debug_info) (field 3 Debug_info) (field 4 Debug_info)
          (field 5 Debug_info))
        create create_with_debug_info create_without_debug_info
        create_copying_debug_info reg location debug_info at_same_location
        holds_pointer holds_non_pointer assigned_to_stack clear_debug_info
        Set_distinguishing_names_and_locations
        Map_distinguishing_names_and_locations
        (makeblock 0 (field 0 Set) (field 1 Set) (field 2 Set) (field 3 Set)
          (field 4 Set) (field 5 Set) (field 6 Set) (field 7 Set)
          (field 8 Set) (field 9 Set) (field 10 Set) (field 11 Set)
          (field 12 Set) (field 13 Set) (field 14 Set) (field 15 Set)
          (field 16 Set) (field 17 Set) (field 18 Set) (field 19 Set)
          (field 20 Set) (field 21 Set) (field 22 Set) (field 23 Set)
          (field 24 Set) (field 25 Set) (field 26 Set) (field 27 Set)
          (field 28 Set) (field 29 Set) (field 30 Set) (field 31 Set)
          (field 32 Set) (field 33 Set) (field 34 Set) (field 35 Set)
          (field 36 Set) (field 37 Set) (field 38 Set) (field 39 Set)
          (field 40 Set) (field 44 Set) (field 46 Set) (field 45 Set)
          (field 41 Set) (field 42 Set) (field 43 Set))
        print))))
