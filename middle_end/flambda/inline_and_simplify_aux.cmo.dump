(setglobal Inline_and_simplify_aux!
  (let
    (Env =
       (module-defn(Env) middle_end/flambda/inline_and_simplify_aux.ml(20):1238-13736
         (let
           (create =
              (function never_inline backend round[int] ppf_dump
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(49)<ghost>:2328-3160
                  (before middle_end/flambda/inline_and_simplify_aux.ml(50):2374-3160
                    (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                      backend round ppf_dump
                      (field 0 (field 7 (global Variable!)))
                      (field 0 (field 7 (global Mutable_variable!)))
                      (field 0 (field 7 (global Symbol!)))
                      (field 0 (field 13 (global Projection!)))
                      (field 0 (field 6 (global Set_of_closures_origin!))) 0
                      0 (field 0 (global Freshening!)) never_inline 0a 0a
                      (field 0 (field 7 (global Set_of_closures_origin!)))
                      (field 0 (field 7 (global Closure_origin!)))
                      (field 0 (field 7 (global Set_of_closures_origin!))) 0
                      (after middle_end/flambda/inline_and_simplify_aux.ml(69):3073-3111
                        (apply (field 0 (field 0 (global Inlining_stats!)))
                          0a))
                      (field 0 (global Debuginfo!))))))
            backend =
              (function t
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(73)<ghost>:3176-3189
                  (before middle_end/flambda/inline_and_simplify_aux.ml(73):3180-3189
                    (field 0 t))))
            round =
              (function t : int
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(74)<ghost>:3202-3213
                  (before middle_end/flambda/inline_and_simplify_aux.ml(74):3206-3213
                    (field 1 t))))
            ppf_dump =
              (function t
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(75)<ghost>:3229-3243
                  (before middle_end/flambda/inline_and_simplify_aux.ml(75):3233-3243
                    (field 2 t))))
            local =
              (function env
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(77)<ghost>:3257-3482
                  (before middle_end/flambda/inline_and_simplify_aux.ml(78):3267-3482
                    (let (init = env)
                      (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                        (field 0 init) (field 1 init) (field 2 init)
                        (field 0 (field 7 (global Variable!))) (field 4 init)
                        (field 5 init)
                        (field 0 (field 13 (global Projection!)))
                        (field 7 init) (field 8 init) (field 9 init)
                        (after middle_end/flambda/inline_and_simplify_aux.ml(81):3374-3433
                          (apply (field 3 (global Freshening!))
                            (field 10 env)))
                        (field 11 init) (field 12 init) (field 13 init)
                        (field 14 init) (field 15 init) (field 16 init)
                        (field 17 init) (field 18 init)
                        (field 0 (global Debuginfo!)))))))
            inlining_level_up =
              (function env
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(85)<ghost>:3508-3787
                  (before middle_end/flambda/inline_and_simplify_aux.ml(86):3518-3787
                    (let
                      (max_level =[int]
                         (after middle_end/flambda/inline_and_simplify_aux.ml(87):3540-3609
                           (apply (field 2 (field 0 (global Clflags!)))
                             (field 1 env)
                             (field 0 (field 141 (global Clflags!))))))
                      (before middle_end/flambda/inline_and_simplify_aux.ml(89):3621-3787
                        (seq
                          (if
                            (after middle_end/flambda/inline_and_simplify_aux.ml(89):3624-3660
                              (apply
                                (field 3
                                  (global Int_replace_polymorphic_compare!))
                                (+ (field 8 env) 1) max_level))
                            (before middle_end/flambda/inline_and_simplify_aux.ml(90):3672-3729
                              (after middle_end/flambda/inline_and_simplify_aux.ml(90):3672-3729
                                (apply (field 0 (global Misc!))
                                  "Inlining level increased above maximum")))
                            0a)
                          (before middle_end/flambda/inline_and_simplify_aux.ml(91):3735-3787
                            (let (init = env)
                              (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                                (field 0 init) (field 1 init) (field 2 init)
                                (field 3 init) (field 4 init) (field 5 init)
                                (field 6 init) (field 7 init)
                                (+ (field 8 env) 1) (field 9 init)
                                (field 10 init) (field 11 init)
                                (field 12 init) (field 13 init)
                                (field 14 init) (field 15 init)
                                (field 16 init) (field 17 init)
                                (field 18 init) (field 19 init))))))))))
            print =
              (function ppf t
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(93)<ghost>:3801-4043
                  (before middle_end/flambda/inline_and_simplify_aux.ml(94):3813-4043
                    (after middle_end/flambda/inline_and_simplify_aux.ml(94):3813-4043
                      (apply (field 122 (global Stdlib__format!)) ppf
                        [0:
                         [11:
                          "Environment maps: "
                          [15:
                           [17:
                            4a
                            [11:
                             "Projections: "
                             [15:
                              [17: 4a [11: "Freshening: " [15: [17: 4a 0a]]]]]]]]]
                         "Environment maps: %a@.Projections: %a@.Freshening: %a@."]
                        (field 39 (field 6 (global Variable!)))
                        (after middle_end/flambda/inline_and_simplify_aux.ml(96):3921-3949
                          (apply (field 46 (field 7 (global Variable!)))
                            (field 3 t)))
                        (after middle_end/flambda/inline_and_simplify_aux.ml(97):3956-3993
                          (apply (field 51 (field 13 (global Projection!)))
                            (field 5 (global Variable!))))
                        (field 6 t) (field 16 (global Freshening!))
                        (field 10 t))))))
            mem =
              (function t var
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(100)<ghost>:4055-4092
                  (before middle_end/flambda/inline_and_simplify_aux.ml(100):4063-4092
                    (after middle_end/flambda/inline_and_simplify_aux.ml(100):4063-4092
                      (apply (field 2 (field 7 (global Variable!))) var
                        (field 3 t))))))
            add_internal =
              (function t var approx scope
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(102)<ghost>:4113-4663
                  (before middle_end/flambda/inline_and_simplify_aux.ml(103):4165-4663
                    (let
                      (approx =
                         (let (*match* = (field 1 approx))
                           (catch
                             (if *match*
                               (let (var =a (field 0 *match*))
                                 (before middle_end/flambda/inline_and_simplify_aux.ml(109):4501-4510
                                   (if
                                     (after middle_end/flambda/inline_and_simplify_aux.ml(109):4501-4510
                                       (apply mem t var))
                                     (before middle_end/flambda/inline_and_simplify_aux.ml(109):4514-4520
                                       approx)
                                     (exit 1))))
                               (exit 1))
                            with (1)
                             (before middle_end/flambda/inline_and_simplify_aux.ml(110):4534-4586
                               (after middle_end/flambda/inline_and_simplify_aux.ml(110):4534-4586
                                 (apply
                                   (field 38 (global Simple_value_approx!))
                                   approx var))))))
                      (before middle_end/flambda/inline_and_simplify_aux.ml(112):4598-4663
                        (let (init = t)
                          (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                            (field 0 init) (field 1 init) (field 2 init)
                            (after middle_end/flambda/inline_and_simplify_aux.ml(112):4616-4661
                              (apply (field 3 (field 7 (global Variable!)))
                                var (makeblock 0 scope approx) (field 3 t)))
                            (field 4 init) (field 5 init) (field 6 init)
                            (field 7 init) (field 8 init) (field 9 init)
                            (field 10 init) (field 11 init) (field 12 init)
                            (field 13 init) (field 14 init) (field 15 init)
                            (field 16 init) (field 17 init) (field 18 init)
                            (field 19 init))))))))
            add =
              (function t var approx
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(114)<ghost>:4675-4730
                  (before middle_end/flambda/inline_and_simplify_aux.ml(114):4690-4730
                    (after middle_end/flambda/inline_and_simplify_aux.ml(114):4690-4730
                      (apply add_internal t var approx 0a)))))
            add_outer_scope =
              (function t var approx
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(115)<ghost>:4753-4806
                  (before middle_end/flambda/inline_and_simplify_aux.ml(115):4768-4806
                    (after middle_end/flambda/inline_and_simplify_aux.ml(115):4768-4806
                      (apply add_internal t var approx 1a)))))
            add_mutable =
              (function t mut_var approx
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(117)<ghost>:4826-4946
                  (before middle_end/flambda/inline_and_simplify_aux.ml(118):4849-4946
                    (let (init = t)
                      (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                        (field 0 init) (field 1 init) (field 2 init)
                        (field 3 init)
                        (after middle_end/flambda/inline_and_simplify_aux.ml(119):4883-4939
                          (apply
                            (field 3 (field 7 (global Mutable_variable!)))
                            mut_var approx (field 4 t)))
                        (field 5 init) (field 6 init) (field 7 init)
                        (field 8 init) (field 9 init) (field 10 init)
                        (field 11 init) (field 12 init) (field 13 init)
                        (field 14 init) (field 15 init) (field 16 init)
                        (field 17 init) (field 18 init) (field 19 init))))))
            really_import_approx =
              (function t
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(122)<ghost>:4975-5074
                  (before middle_end/flambda/inline_and_simplify_aux.ml(123):4983-5074
                    (let
                      (Backend =
                         (module-defn(Backend) middle_end/flambda/inline_and_simplify_aux.ml(123):4994-5001
                           (field 0 t)))
                      (field 1 Backend)))))
            really_import_approx_with_scope =
              (function t param
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(126)<ghost>:5114-5174
                  (let (approx =a (field 1 param) scope =a (field 0 param))
                    (before middle_end/flambda/inline_and_simplify_aux.ml(127):5138-5174
                      (makeblock 0 scope
                        (after middle_end/flambda/inline_and_simplify_aux.ml(127):5145-5174
                          (apply really_import_approx t approx)))))))
            find_symbol_exn =
              (function t symbol
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(129)<ghost>:5198-5279
                  (before middle_end/flambda/inline_and_simplify_aux.ml(130):5213-5279
                    (after middle_end/flambda/inline_and_simplify_aux.ml(130):5213-5279
                      (apply really_import_approx t
                        (after middle_end/flambda/inline_and_simplify_aux.ml(131):5242-5279
                          (apply (field 26 (field 7 (global Symbol!))) symbol
                            (field 5 t))))))))
            find_symbol_opt =
              (function t symbol
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(133)<ghost>:5303-5432
                  (before middle_end/flambda/inline_and_simplify_aux.ml(134):5318-5432
                    (try
                      (makeblock 0
                        (after middle_end/flambda/inline_and_simplify_aux.ml(134):5327-5405
                          (apply really_import_approx t
                            (after middle_end/flambda/inline_and_simplify_aux.ml(135):5367-5404
                              (apply (field 26 (field 7 (global Symbol!)))
                                symbol (field 5 t))))))
                     with exn
                      (if (== exn (field 7 (global Stdlib!)))
                        (before middle_end/flambda/inline_and_simplify_aux.ml(136):5428-5432
                          0a)
                        (reraise exn))))))
            find_symbol_fatal =
              (function t symbol
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(138)<ghost>:5458-5716
                  (before middle_end/flambda/inline_and_simplify_aux.ml(139):5473-5716
                    (catch
                      (try
                        (exit 3
                          (after middle_end/flambda/inline_and_simplify_aux.ml(139):5479-5503
                            (apply find_symbol_exn t symbol)))
                       with exn
                        (if (== exn (field 7 (global Stdlib!)))
                          (before middle_end/flambda/inline_and_simplify_aux.ml(141):5544-5693
                            (after middle_end/flambda/inline_and_simplify_aux.ml(141):5544-5693
                              (apply (field 1 (global Misc!))
                                [0:
                                 [11:
                                  "Symbol "
                                  [15:
                                   [11:
                                    " is unbound.  Maybe there is a missing [Let_symbol], [Import_symbol] or similar?"
                                    0a]]]
                                 "Symbol %a is unbound.  Maybe there is a missing [Let_symbol], [Import_symbol] or similar?"]
                                (field 5 (global Symbol!)) symbol)))
                          (reraise exn)))
                     with (3 approx)
                      (before middle_end/flambda/inline_and_simplify_aux.ml(144):5710-5716
                        approx)))))
            find_or_load_symbol =
              (function t symbol
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(146)<ghost>:5744-6260
                  (before middle_end/flambda/inline_and_simplify_aux.ml(147):5759-6260
                    (catch
                      (try
                        (exit 5
                          (after middle_end/flambda/inline_and_simplify_aux.ml(147):5765-5789
                            (apply find_symbol_exn t symbol)))
                       with exn
                        (if (== exn (field 7 (global Stdlib!)))
                          (before middle_end/flambda/inline_and_simplify_aux.ml(149):5830-6237
                            (seq
                              (if
                                (after middle_end/flambda/inline_and_simplify_aux.ml(149):5833-5946
                                  (apply (field 1 (global Compilation_unit!))
                                    (after middle_end/flambda/inline_and_simplify_aux.ml(150):5866-5903
                                      (apply
                                        (field 15 (global Compilation_unit!))
                                        0a))
                                    (after middle_end/flambda/inline_and_simplify_aux.ml(151):5914-5946
                                      (apply (field 12 (global Symbol!))
                                        symbol))))
                                (before middle_end/flambda/inline_and_simplify_aux.ml(153):5966-6136
                                  (after middle_end/flambda/inline_and_simplify_aux.ml(153):5966-6136
                                    (apply (field 1 (global Misc!))
                                      [0:
                                       [11:
                                        "Symbol "
                                        [15:
                                         [11:
                                          " from the current compilation unit is unbound.  Maybe there is a missing [Let_symbol] or similar?"
                                          0a]]]
                                       "Symbol %a from the current compilation unit is unbound.  Maybe there is a missing [Let_symbol] or similar?"]
                                      (field 5 (global Symbol!)) symbol)))
                                0a)
                              (before middle_end/flambda/inline_and_simplify_aux.ml(156):6144-6237
                                (let
                                  (Backend =
                                     (module-defn(Backend) middle_end/flambda/inline_and_simplify_aux.ml(156):6155-6162
                                       (field 0 t)))
                                  (after middle_end/flambda/inline_and_simplify_aux.ml(157):6209-6237
                                    (apply (field 2 Backend) symbol))))))
                          (reraise exn)))
                     with (5 approx)
                      (before middle_end/flambda/inline_and_simplify_aux.ml(158):6254-6260
                        approx)))))
            add_projection =
              (function t projection bound_to
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(160)<ghost>:6283-6409
                  (before middle_end/flambda/inline_and_simplify_aux.ml(161):6313-6409
                    (let (init = t)
                      (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                        (field 0 init) (field 1 init) (field 2 init)
                        (field 3 init) (field 4 init) (field 5 init)
                        (after middle_end/flambda/inline_and_simplify_aux.ml(163):6350-6402
                          (apply (field 3 (field 13 (global Projection!)))
                            projection bound_to (field 6 t)))
                        (field 7 init) (field 8 init) (field 9 init)
                        (field 10 init) (field 11 init) (field 12 init)
                        (field 13 init) (field 14 init) (field 15 init)
                        (field 16 init) (field 17 init) (field 18 init)
                        (field 19 init))))))
            find_projection =
              (function t projection
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(166)<ghost>:6433-6564
                  (before middle_end/flambda/inline_and_simplify_aux.ml(167):6453-6564
                    (catch
                      (try
                        (exit 7
                          (after middle_end/flambda/inline_and_simplify_aux.ml(167):6459-6503
                            (apply (field 26 (field 13 (global Projection!)))
                              projection (field 6 t))))
                       with exn
                        (if (== exn (field 7 (global Stdlib!)))
                          (before middle_end/flambda/inline_and_simplify_aux.ml(168):6538-6542
                            0a)
                          (reraise exn)))
                     with (7 var)
                      (before middle_end/flambda/inline_and_simplify_aux.ml(169):6556-6564
                        (makeblock 0 var))))))
            does_not_bind =
              (function t vars
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(171)<ghost>:6586-6629
                  (before middle_end/flambda/inline_and_simplify_aux.ml(172):6599-6629
                    (not
                      (after middle_end/flambda/inline_and_simplify_aux.ml(172):6603-6629
                        (apply (field 28 (global Stdlib__list!))
                          (after middle_end/flambda/inline_and_simplify_aux.ml(172):6616-6623
                            (apply mem t))
                          vars))))))
            does_not_freshen =
              (function t vars
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(174)<ghost>:6654-6712
                  (before middle_end/flambda/inline_and_simplify_aux.ml(175):6667-6712
                    (after middle_end/flambda/inline_and_simplify_aux.ml(175):6667-6712
                      (apply (field 15 (global Freshening!)) (field 10 t)
                        vars)))))
            add_symbol =
              (function t symbol approx
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(177)<ghost>:6731-7101
                  (before middle_end/flambda/inline_and_simplify_aux.ml(178):6753-7101
                    (catch
                      (try
                        (exit 9
                          (after middle_end/flambda/inline_and_simplify_aux.ml(178):6759-6783
                            (apply find_symbol_exn t symbol)))
                       with exn
                        (if (== exn (field 7 (global Stdlib!)))
                          (before middle_end/flambda/inline_and_simplify_aux.ml(180):6824-6904
                            (let (init = t)
                              (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                                (field 0 init) (field 1 init) (field 2 init)
                                (field 3 init) (field 4 init)
                                (after middle_end/flambda/inline_and_simplify_aux.ml(181):6854-6895
                                  (apply (field 3 (field 7 (global Symbol!)))
                                    symbol approx (field 5 t)))
                                (field 6 init) (field 7 init) (field 8 init)
                                (field 9 init) (field 10 init)
                                (field 11 init) (field 12 init)
                                (field 13 init) (field 14 init)
                                (field 15 init) (field 16 init)
                                (field 17 init) (field 18 init)
                                (field 19 init))))
                          (reraise exn)))
                     with (9 val)
                      (before middle_end/flambda/inline_and_simplify_aux.ml(184):6922-7101
                        (after middle_end/flambda/inline_and_simplify_aux.ml(184):6922-7101
                          (apply (field 1 (global Misc!))
                            [0:
                             [11:
                              "Attempt to redefine symbol "
                              [15:
                               [11:
                                " (to "
                                [15:
                                 [11:
                                  ") in environment for [Inline_and_simplify]"
                                  0a]]]]]
                             "Attempt to redefine symbol %a (to %a) in environment for [Inline_and_simplify]"]
                            (field 5 (global Symbol!)) symbol
                            (field 2 (global Simple_value_approx!)) approx)))))))
            redefine_symbol =
              (function t symbol approx
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(189)<ghost>:7125-7328
                  (before middle_end/flambda/inline_and_simplify_aux.ml(190):7147-7328
                    (catch
                      (try
                        (exit 11
                          (after middle_end/flambda/inline_and_simplify_aux.ml(190):7153-7177
                            (apply find_symbol_exn t symbol)))
                       with exn
                        (if (== exn (field 7 (global Stdlib!)))
                          (before middle_end/flambda/inline_and_simplify_aux.ml(192):7218-7230
                            (raise
                              (after middle_end/flambda/inline_and_simplify_aux.ml(192):7218-7230
                                (makeblock 0 (global Assert_failure!)
                                  [0:
                                   "middle_end/flambda/inline_and_simplify_aux.ml"
                                   192 6]))))
                          (reraise exn)))
                     with (11 val)
                      (before middle_end/flambda/inline_and_simplify_aux.ml(194):7248-7328
                        (let (init = t)
                          (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                            (field 0 init) (field 1 init) (field 2 init)
                            (field 3 init) (field 4 init)
                            (after middle_end/flambda/inline_and_simplify_aux.ml(195):7278-7319
                              (apply (field 3 (field 7 (global Symbol!)))
                                symbol approx (field 5 t)))
                            (field 6 init) (field 7 init) (field 8 init)
                            (field 9 init) (field 10 init) (field 11 init)
                            (field 12 init) (field 13 init) (field 14 init)
                            (field 15 init) (field 16 init) (field 17 init)
                            (field 18 init) (field 19 init))))))))
            find_with_scope_exn =
              (function t id
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(198)<ghost>:7356-7697
                  (before middle_end/flambda/inline_and_simplify_aux.ml(199):7367-7697
                    (try
                      (after middle_end/flambda/inline_and_simplify_aux.ml(200):7377-7450
                        (apply really_import_approx_with_scope t
                          (after middle_end/flambda/inline_and_simplify_aux.ml(201):7419-7450
                            (apply (field 26 (field 7 (global Variable!))) id
                              (field 3 t)))))
                     with exn
                      (if (== exn (field 7 (global Stdlib!)))
                        (before middle_end/flambda/inline_and_simplify_aux.ml(203):7479-7697
                          (after middle_end/flambda/inline_and_simplify_aux.ml(203):7479-7697
                            (apply (field 1 (global Misc!))
                              [0:
                               [11:
                                "Env.find_with_scope_exn: Unbound variable "
                                [15:
                                 [17:
                                  4a
                                  [2:
                                   0a
                                   [17:
                                    4a
                                    [11: " Environment: " [15: [17: 4a 0a]]]]]]]]
                               "Env.find_with_scope_exn: Unbound variable %a@.%s@. Environment: %a@."]
                              (field 5 (global Variable!)) id
                              (after middle_end/flambda/inline_and_simplify_aux.ml(206):7614-7681
                                (apply (field 12 (global Stdlib__printexc!))
                                  (after middle_end/flambda/inline_and_simplify_aux.ml(206):7648-7680
                                    (apply
                                      (field 13 (global Stdlib__printexc!))
                                      (field 18 (global Stdlib!))))))
                              print t)))
                        (reraise exn))))))
            find_exn =
              (function t id
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(209)<ghost>:7714-7755
                  (before middle_end/flambda/inline_and_simplify_aux.ml(210):7725-7755
                    (field 1
                      (after middle_end/flambda/inline_and_simplify_aux.ml(210):7729-7755
                        (apply find_with_scope_exn t id))))))
            find_mutable_exn =
              (function t mut_var
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(212)<ghost>:7780-8107
                  (before middle_end/flambda/inline_and_simplify_aux.ml(213):7796-8107
                    (try
                      (after middle_end/flambda/inline_and_simplify_aux.ml(213):7800-7850
                        (apply
                          (field 26 (field 7 (global Mutable_variable!)))
                          mut_var (field 4 t)))
                     with exn
                      (if (== exn (field 7 (global Stdlib!)))
                        (before middle_end/flambda/inline_and_simplify_aux.ml(215):7879-8107
                          (after middle_end/flambda/inline_and_simplify_aux.ml(215):7879-8107
                            (apply (field 1 (global Misc!))
                              [0:
                               [11:
                                "Env.find_mutable_exn: Unbound variable "
                                [15:
                                 [17:
                                  4a
                                  [2:
                                   0a
                                   [17:
                                    4a
                                    [11: " Environment: " [15: [17: 4a 0a]]]]]]]]
                               "Env.find_mutable_exn: Unbound variable %a@.%s@. Environment: %a@."]
                              (field 5 (global Mutable_variable!)) mut_var
                              (after middle_end/flambda/inline_and_simplify_aux.ml(218):8024-8091
                                (apply (field 12 (global Stdlib__printexc!))
                                  (after middle_end/flambda/inline_and_simplify_aux.ml(218):8058-8090
                                    (apply
                                      (field 13 (global Stdlib__printexc!))
                                      (field 18 (global Stdlib!))))))
                              print t)))
                        (reraise exn))))))
            find_list_exn =
              (function t vars
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(221)<ghost>:8129-8183
                  (before middle_end/flambda/inline_and_simplify_aux.ml(222):8142-8183
                    (after middle_end/flambda/inline_and_simplify_aux.ml(222):8142-8183
                      (apply (field 16 (global Stdlib__list!))
                        (function var
                          (funct-body middle_end/flambda/inline_and_simplify_aux.ml(222):8151-8178
                            (before middle_end/flambda/inline_and_simplify_aux.ml(222):8163-8177
                              (after middle_end/flambda/inline_and_simplify_aux.ml(222):8163-8177
                                (apply find_exn t var)))))
                        vars)))))
            find_opt =
              (function t id
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(224)<ghost>:8200-8325
                  (before middle_end/flambda/inline_and_simplify_aux.ml(225):8211-8325
                    (try
                      (makeblock 0
                        (after middle_end/flambda/inline_and_simplify_aux.ml(225):8220-8298
                          (apply really_import_approx t
                            (field 1
                              (after middle_end/flambda/inline_and_simplify_aux.ml(226):8265-8296
                                (apply
                                  (field 26 (field 7 (global Variable!))) id
                                  (field 3 t)))))))
                     with exn
                      (if (== exn (field 7 (global Stdlib!)))
                        (before middle_end/flambda/inline_and_simplify_aux.ml(227):8321-8325
                          0a)
                        (reraise exn))))))
            activate_freshening =
              (function t
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(229)<ghost>:8353-8417
                  (before middle_end/flambda/inline_and_simplify_aux.ml(230):8361-8417
                    (let (init = t)
                      (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                        (field 0 init) (field 1 init) (field 2 init)
                        (field 3 init) (field 4 init) (field 5 init)
                        (field 6 init) (field 7 init) (field 8 init)
                        (field 9 init)
                        (after middle_end/flambda/inline_and_simplify_aux.ml(230):8383-8415
                          (apply (field 2 (global Freshening!)) (field 10 t)))
                        (field 11 init) (field 12 init) (field 13 init)
                        (field 14 init) (field 15 init) (field 16 init)
                        (field 17 init) (field 18 init) (field 19 init))))))
            enter_set_of_closures_declaration =
              (function t origin
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(232)<ghost>:8459-8577
                  (before middle_end/flambda/inline_and_simplify_aux.ml(233):8474-8577
                    (let (init = t)
                      (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                        (field 0 init) (field 1 init) (field 2 init)
                        (field 3 init) (field 4 init) (field 5 init)
                        (field 6 init)
                        (after middle_end/flambda/inline_and_simplify_aux.ml(235):8517-8574
                          (apply
                            (field 3
                              (field 6 (global Set_of_closures_origin!)))
                            origin (field 7 t)))
                        (field 8 init) (field 9 init) (field 10 init)
                        (field 11 init) (field 12 init) (field 13 init)
                        (field 14 init) (field 15 init) (field 16 init)
                        (field 17 init) (field 18 init) (field 19 init))))))
            inside_set_of_closures_declaration =
              (function origin t
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(237)<ghost>:8620-8692
                  (before middle_end/flambda/inline_and_simplify_aux.ml(238):8635-8692
                    (after middle_end/flambda/inline_and_simplify_aux.ml(238):8635-8692
                      (apply
                        (field 2 (field 6 (global Set_of_closures_origin!)))
                        origin (field 7 t))))))
            at_toplevel =
              (function t
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(240)<ghost>:8712-8739
                  (before middle_end/flambda/inline_and_simplify_aux.ml(241):8720-8739
                    (after middle_end/flambda/inline_and_simplify_aux.ml(241):8720-8739
                      (apply
                        (field 0 (global Int_replace_polymorphic_compare!))
                        (field 17 t) 0)))))
            is_inside_branch =
              (function env
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(243)<ghost>:8764-8791
                  (before middle_end/flambda/inline_and_simplify_aux.ml(243):8770-8791
                    (after middle_end/flambda/inline_and_simplify_aux.ml(243):8770-8791
                      (apply
                        (field 3 (global Int_replace_polymorphic_compare!))
                        (field 9 env) 0)))))
            branch_depth =
              (function env : int
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(245)<ghost>:8812-8835
                  (before middle_end/flambda/inline_and_simplify_aux.ml(245):8818-8835
                    (field 9 env))))
            inside_branch =
              (function t
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(247)<ghost>:8857-8911
                  (before middle_end/flambda/inline_and_simplify_aux.ml(248):8865-8911
                    (let (init = t)
                      (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                        (field 0 init) (field 1 init) (field 2 init)
                        (field 3 init) (field 4 init) (field 5 init)
                        (field 6 init) (field 7 init) (field 8 init)
                        (+ (field 9 t) 1) (field 10 init) (field 11 init)
                        (field 12 init) (field 13 init) (field 14 init)
                        (field 15 init) (field 16 init) (field 17 init)
                        (field 18 init) (field 19 init))))))
            set_freshening =
              (function t freshening
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(250)<ghost>:8934-8976
                  (before middle_end/flambda/inline_and_simplify_aux.ml(251):8954-8976
                    (let (init = t)
                      (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                        (field 0 init) (field 1 init) (field 2 init)
                        (field 3 init) (field 4 init) (field 5 init)
                        (field 6 init) (field 7 init) (field 8 init)
                        (field 9 init) freshening (field 11 init)
                        (field 12 init) (field 13 init) (field 14 init)
                        (field 15 init) (field 16 init) (field 17 init)
                        (field 18 init) (field 19 init))))))
            increase_closure_depth =
              (function t
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(253)<ghost>:9007-9182
                  (before middle_end/flambda/inline_and_simplify_aux.ml(254):9015-9182
                    (let
                      (approx =
                         (after middle_end/flambda/inline_and_simplify_aux.ml(255):9034-9099
                           (apply (field 32 (field 7 (global Variable!)))
                             (function param
                               (funct-body middle_end/flambda/inline_and_simplify_aux.ml(255):9051-9090
                                 (let (approx =a (field 1 param))
                                   (before middle_end/flambda/inline_and_simplify_aux.ml(255):9076-9089
                                     (makeblock 0 1a approx)))))
                             (field 3 t))))
                      (before middle_end/flambda/inline_and_simplify_aux.ml(257):9111-9182
                        (let (init = t)
                          (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                            (field 0 init) (field 1 init) (field 2 init)
                            approx (field 4 init) (field 5 init)
                            (field 6 init) (field 7 init) (field 8 init)
                            (field 9 init) (field 10 init) (field 11 init)
                            (field 12 init) (field 13 init) (field 14 init)
                            (field 15 init) (field 16 init)
                            (+ (field 17 t) 1) (field 18 init)
                            (field 19 init))))))))
            set_never_inline =
              (function t
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(262)<ghost>:9207-9279
                  (before middle_end/flambda/inline_and_simplify_aux.ml(263):9215-9279
                    (if (field 11 t)
                      (before middle_end/flambda/inline_and_simplify_aux.ml(263):9238-9239
                        t)
                      (before middle_end/flambda/inline_and_simplify_aux.ml(264):9249-9279
                        (let (init = t)
                          (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                            (field 0 init) (field 1 init) (field 2 init)
                            (field 3 init) (field 4 init) (field 5 init)
                            (field 6 init) (field 7 init) (field 8 init)
                            (field 9 init) (field 10 init) 1a (field 12 init)
                            (field 13 init) (field 14 init) (field 15 init)
                            (field 16 init) (field 17 init) (field 18 init)
                            (field 19 init))))))))
            set_never_inline_inside_closures =
              (function t
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(266)<ghost>:9320-9424
                  (before middle_end/flambda/inline_and_simplify_aux.ml(267):9328-9424
                    (if (field 12 t)
                      (before middle_end/flambda/inline_and_simplify_aux.ml(267):9367-9368
                        t)
                      (before middle_end/flambda/inline_and_simplify_aux.ml(268):9378-9424
                        (let (init = t)
                          (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                            (field 0 init) (field 1 init) (field 2 init)
                            (field 3 init) (field 4 init) (field 5 init)
                            (field 6 init) (field 7 init) (field 8 init)
                            (field 9 init) (field 10 init) (field 11 init) 1a
                            (field 13 init) (field 14 init) (field 15 init)
                            (field 16 init) (field 17 init) (field 18 init)
                            (field 19 init))))))))
            unset_never_inline_inside_closures =
              (function t
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(270)<ghost>:9467-9578
                  (before middle_end/flambda/inline_and_simplify_aux.ml(271):9475-9578
                    (if (field 12 t)
                      (before middle_end/flambda/inline_and_simplify_aux.ml(272):9520-9567
                        (let (init = t)
                          (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                            (field 0 init) (field 1 init) (field 2 init)
                            (field 3 init) (field 4 init) (field 5 init)
                            (field 6 init) (field 7 init) (field 8 init)
                            (field 9 init) (field 10 init) (field 11 init) 0a
                            (field 13 init) (field 14 init) (field 15 init)
                            (field 16 init) (field 17 init) (field 18 init)
                            (field 19 init))))
                      (before middle_end/flambda/inline_and_simplify_aux.ml(273):9577-9578
                        t)))))
            set_never_inline_outside_closures =
              (function t
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(275)<ghost>:9620-9726
                  (before middle_end/flambda/inline_and_simplify_aux.ml(276):9628-9726
                    (if (field 13 t)
                      (before middle_end/flambda/inline_and_simplify_aux.ml(276):9668-9669
                        t)
                      (before middle_end/flambda/inline_and_simplify_aux.ml(277):9679-9726
                        (let (init = t)
                          (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                            (field 0 init) (field 1 init) (field 2 init)
                            (field 3 init) (field 4 init) (field 5 init)
                            (field 6 init) (field 7 init) (field 8 init)
                            (field 9 init) (field 10 init) (field 11 init)
                            (field 12 init) 1a (field 14 init)
                            (field 15 init) (field 16 init) (field 17 init)
                            (field 18 init) (field 19 init))))))))
            unset_never_inline_outside_closures =
              (function t
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(279)<ghost>:9770-9883
                  (before middle_end/flambda/inline_and_simplify_aux.ml(280):9778-9883
                    (if (field 13 t)
                      (before middle_end/flambda/inline_and_simplify_aux.ml(281):9824-9872
                        (let (init = t)
                          (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                            (field 0 init) (field 1 init) (field 2 init)
                            (field 3 init) (field 4 init) (field 5 init)
                            (field 6 init) (field 7 init) (field 8 init)
                            (field 9 init) (field 10 init) (field 11 init)
                            (field 12 init) 0a (field 14 init)
                            (field 15 init) (field 16 init) (field 17 init)
                            (field 18 init) (field 19 init))))
                      (before middle_end/flambda/inline_and_simplify_aux.ml(282):9882-9883
                        t)))))
            actively_unrolling =
              (function t origin
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(284)<ghost>:9910-10055
                  (before middle_end/flambda/inline_and_simplify_aux.ml(285):9925-10055
                    (catch
                      (try
                        (exit 16
                          (after middle_end/flambda/inline_and_simplify_aux.ml(285):9931-9990
                            (apply
                              (field 26
                                (field 7 (global Set_of_closures_origin!)))
                              origin (field 16 t))))
                       with exn
                        (if (== exn (field 7 (global Stdlib!)))
                          (before middle_end/flambda/inline_and_simplify_aux.ml(287):10051-10055
                            0a)
                          (reraise exn)))
                     with (16 count[int])
                      (before middle_end/flambda/inline_and_simplify_aux.ml(286):10011-10021
                        (makeblock 0 (int) count))))))
            start_actively_unrolling =
              (function t origin i[int]
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(289)<ghost>:10088-10237
                  (before middle_end/flambda/inline_and_simplify_aux.ml(290):10105-10237
                    (let
                      (actively_unrolling =
                         (after middle_end/flambda/inline_and_simplify_aux.ml(291):10136-10196
                           (apply
                             (field 3
                               (field 7 (global Set_of_closures_origin!)))
                             origin i (field 16 t))))
                      (before middle_end/flambda/inline_and_simplify_aux.ml(293):10208-10237
                        (let (init = t)
                          (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                            (field 0 init) (field 1 init) (field 2 init)
                            (field 3 init) (field 4 init) (field 5 init)
                            (field 6 init) (field 7 init) (field 8 init)
                            (field 9 init) (field 10 init) (field 11 init)
                            (field 12 init) (field 13 init) (field 14 init)
                            (field 15 init) actively_unrolling
                            (field 17 init) (field 18 init) (field 19 init))))))))
            continue_actively_unrolling =
              (function t origin
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(295)<ghost>:10273-10628
                  (before middle_end/flambda/inline_and_simplify_aux.ml(296):10288-10628
                    (let
                      (unrolling =[int]
                         (try
                           (after middle_end/flambda/inline_and_simplify_aux.ml(298):10322-10381
                             (apply
                               (field 26
                                 (field 7 (global Set_of_closures_origin!)))
                               origin (field 16 t)))
                          with exn
                           (if (== exn (field 7 (global Stdlib!)))
                             (before middle_end/flambda/inline_and_simplify_aux.ml(300):10414-10470
                               (after middle_end/flambda/inline_and_simplify_aux.ml(300):10414-10470
                                 (apply (field 0 (global Misc!))
                                   "Unexpected actively unrolled function")))
                             (reraise exn))))
                      (before middle_end/flambda/inline_and_simplify_aux.ml(302):10482-10628
                        (let
                          (actively_unrolling =
                             (after middle_end/flambda/inline_and_simplify_aux.ml(303):10513-10587
                               (apply
                                 (field 3
                                   (field 7 (global Set_of_closures_origin!)))
                                 origin (- unrolling 1) (field 16 t))))
                          (before middle_end/flambda/inline_and_simplify_aux.ml(305):10599-10628
                            (let (init = t)
                              (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                                (field 0 init) (field 1 init) (field 2 init)
                                (field 3 init) (field 4 init) (field 5 init)
                                (field 6 init) (field 7 init) (field 8 init)
                                (field 9 init) (field 10 init)
                                (field 11 init) (field 12 init)
                                (field 13 init) (field 14 init)
                                (field 15 init) actively_unrolling
                                (field 17 init) (field 18 init)
                                (field 19 init))))))))))
            unrolling_allowed =
              (function t origin
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(307)<ghost>:10654-10897
                  (before middle_end/flambda/inline_and_simplify_aux.ml(308):10669-10897
                    (let
                      (unroll_count =[int]
                         (try
                           (after middle_end/flambda/inline_and_simplify_aux.ml(310):10706-10760
                             (apply
                               (field 26
                                 (field 7 (global Set_of_closures_origin!)))
                               origin (field 14 t)))
                          with exn
                           (if (== exn (field 7 (global Stdlib!)))
                             (before middle_end/flambda/inline_and_simplify_aux.ml(312):10793-10869
                               (after middle_end/flambda/inline_and_simplify_aux.ml(312):10793-10869
                                 (apply (field 2 (field 0 (global Clflags!)))
                                   (field 1 t)
                                   (field 0 (field 102 (global Clflags!))))))
                             (reraise exn))))
                      (before middle_end/flambda/inline_and_simplify_aux.ml(315):10881-10897
                        (after middle_end/flambda/inline_and_simplify_aux.ml(315):10881-10897
                          (apply
                            (field 3
                              (global Int_replace_polymorphic_compare!))
                            unroll_count 0)))))))
            inside_unrolled_function =
              (function t origin
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(317)<ghost>:10930-11299
                  (before middle_end/flambda/inline_and_simplify_aux.ml(318):10945-11299
                    (let
                      (unroll_count =[int]
                         (try
                           (after middle_end/flambda/inline_and_simplify_aux.ml(320):10982-11036
                             (apply
                               (field 26
                                 (field 7 (global Set_of_closures_origin!)))
                               origin (field 14 t)))
                          with exn
                           (if (== exn (field 7 (global Stdlib!)))
                             (before middle_end/flambda/inline_and_simplify_aux.ml(322):11069-11145
                               (after middle_end/flambda/inline_and_simplify_aux.ml(322):11069-11145
                                 (apply (field 2 (field 0 (global Clflags!)))
                                   (field 1 t)
                                   (field 0 (field 102 (global Clflags!))))))
                             (reraise exn))))
                      (before middle_end/flambda/inline_and_simplify_aux.ml(325):11157-11299
                        (let
                          (unroll_counts =
                             (after middle_end/flambda/inline_and_simplify_aux.ml(326):11183-11263
                               (apply
                                 (field 3
                                   (field 7 (global Set_of_closures_origin!)))
                                 origin (- unroll_count 1) (field 14 t))))
                          (before middle_end/flambda/inline_and_simplify_aux.ml(329):11275-11299
                            (let (init = t)
                              (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                                (field 0 init) (field 1 init) (field 2 init)
                                (field 3 init) (field 4 init) (field 5 init)
                                (field 6 init) (field 7 init) (field 8 init)
                                (field 9 init) (field 10 init)
                                (field 11 init) (field 12 init)
                                (field 13 init) unroll_counts (field 15 init)
                                (field 16 init) (field 17 init)
                                (field 18 init) (field 19 init))))))))))
            inlining_allowed =
              (function t id
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(331)<ghost>:11324-11572
                  (before middle_end/flambda/inline_and_simplify_aux.ml(332):11335-11572
                    (let
                      (inlining_count =[int]
                         (try
                           (after middle_end/flambda/inline_and_simplify_aux.ml(334):11374-11418
                             (apply
                               (field 26 (field 7 (global Closure_origin!)))
                               id (field 15 t)))
                          with exn
                           (if (== exn (field 7 (global Stdlib!)))
                             (before middle_end/flambda/inline_and_simplify_aux.ml(336):11451-11542
                               (after middle_end/flambda/inline_and_simplify_aux.ml(336):11451-11542
                                 (apply (field 16 (global Stdlib!)) 1
                                   (after middle_end/flambda/inline_and_simplify_aux.ml(336):11457-11542
                                     (apply
                                       (field 2 (field 0 (global Clflags!)))
                                       (field 1 t)
                                       (field 0
                                         (field 102 (global Clflags!))))))))
                             (reraise exn))))
                      (before middle_end/flambda/inline_and_simplify_aux.ml(339):11554-11572
                        (after middle_end/flambda/inline_and_simplify_aux.ml(339):11554-11572
                          (apply
                            (field 3
                              (global Int_replace_polymorphic_compare!))
                            inlining_count 0)))))))
            inside_inlined_function =
              (function t id
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(341)<ghost>:11604-11964
                  (before middle_end/flambda/inline_and_simplify_aux.ml(342):11615-11964
                    (let
                      (inlining_count =[int]
                         (try
                           (after middle_end/flambda/inline_and_simplify_aux.ml(344):11654-11698
                             (apply
                               (field 26 (field 7 (global Closure_origin!)))
                               id (field 15 t)))
                          with exn
                           (if (== exn (field 7 (global Stdlib!)))
                             (before middle_end/flambda/inline_and_simplify_aux.ml(346):11731-11822
                               (after middle_end/flambda/inline_and_simplify_aux.ml(346):11731-11822
                                 (apply (field 16 (global Stdlib!)) 1
                                   (after middle_end/flambda/inline_and_simplify_aux.ml(346):11737-11822
                                     (apply
                                       (field 2 (field 0 (global Clflags!)))
                                       (field 1 t)
                                       (field 0
                                         (field 102 (global Clflags!))))))))
                             (reraise exn))))
                      (before middle_end/flambda/inline_and_simplify_aux.ml(349):11834-11964
                        (let
                          (inlining_counts =
                             (after middle_end/flambda/inline_and_simplify_aux.ml(350):11862-11926
                               (apply
                                 (field 3 (field 7 (global Closure_origin!)))
                                 id (- inlining_count 1) (field 15 t))))
                          (before middle_end/flambda/inline_and_simplify_aux.ml(352):11938-11964
                            (let (init = t)
                              (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                                (field 0 init) (field 1 init) (field 2 init)
                                (field 3 init) (field 4 init) (field 5 init)
                                (field 6 init) (field 7 init) (field 8 init)
                                (field 9 init) (field 10 init)
                                (field 11 init) (field 12 init)
                                (field 13 init) (field 14 init)
                                inlining_counts (field 16 init)
                                (field 17 init) (field 18 init)
                                (field 19 init))))))))))
            inlining_level =
              (function t : int
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(354)<ghost>:11987-12007
                  (before middle_end/flambda/inline_and_simplify_aux.ml(354):11991-12007
                    (field 8 t))))
            freshening =
              (function t
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(355)<ghost>:12025-12041
                  (before middle_end/flambda/inline_and_simplify_aux.ml(355):12029-12041
                    (field 10 t))))
            never_inline =
              (function t
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(356)<ghost>:12061-12114
                  (before middle_end/flambda/inline_and_simplify_aux.ml(356):12065-12114
                    (|| (field 11 t) (field 13 t)))))
            note_entering_closure =
              (function t closure_id dbg
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(358)<ghost>:12144-12386
                  (before middle_end/flambda/inline_and_simplify_aux.ml(359):12169-12386
                    (if (field 11 t)
                      (before middle_end/flambda/inline_and_simplify_aux.ml(359):12192-12193
                        t)
                      (before middle_end/flambda/inline_and_simplify_aux.ml(361):12209-12386
                        (let (init = t)
                          (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                            (field 0 init) (field 1 init) (field 2 init)
                            (field 3 init) (field 4 init) (field 5 init)
                            (field 6 init) (field 7 init) (field 8 init)
                            (field 9 init) (field 10 init) (field 11 init)
                            (field 12 init) (field 13 init) (field 14 init)
                            (field 15 init) (field 16 init) (field 17 init)
                            (after middle_end/flambda/inline_and_simplify_aux.ml(363):12267-12377
                              (apply
                                (field 1 (field 0 (global Inlining_stats!)))
                                (field 18 t) closure_id dbg))
                            (field 19 init))))))))
            note_entering_call =
              (function t closure_id dbg
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(367)<ghost>:12413-12652
                  (before middle_end/flambda/inline_and_simplify_aux.ml(368):12438-12652
                    (if (field 11 t)
                      (before middle_end/flambda/inline_and_simplify_aux.ml(368):12461-12462
                        t)
                      (before middle_end/flambda/inline_and_simplify_aux.ml(370):12478-12652
                        (let (init = t)
                          (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                            (field 0 init) (field 1 init) (field 2 init)
                            (field 3 init) (field 4 init) (field 5 init)
                            (field 6 init) (field 7 init) (field 8 init)
                            (field 9 init) (field 10 init) (field 11 init)
                            (field 12 init) (field 13 init) (field 14 init)
                            (field 15 init) (field 16 init) (field 17 init)
                            (after middle_end/flambda/inline_and_simplify_aux.ml(372):12536-12643
                              (apply
                                (field 2 (field 0 (global Inlining_stats!)))
                                (field 18 t) closure_id dbg))
                            (field 19 init))))))))
            note_entering_inlined =
              (function t
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(376)<ghost>:12682-12890
                  (before middle_end/flambda/inline_and_simplify_aux.ml(377):12690-12890
                    (if (field 11 t)
                      (before middle_end/flambda/inline_and_simplify_aux.ml(377):12713-12714
                        t)
                      (before middle_end/flambda/inline_and_simplify_aux.ml(379):12730-12890
                        (let (init = t)
                          (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                            (field 0 init) (field 1 init) (field 2 init)
                            (field 3 init) (field 4 init) (field 5 init)
                            (field 6 init) (field 7 init) (field 8 init)
                            (field 9 init) (field 10 init) (field 11 init)
                            (field 12 init) (field 13 init) (field 14 init)
                            (field 15 init) (field 16 init) (field 17 init)
                            (after middle_end/flambda/inline_and_simplify_aux.ml(381):12788-12881
                              (apply
                                (field 3 (field 0 (global Inlining_stats!)))
                                (field 18 t)))
                            (field 19 init))))))))
            note_entering_specialised =
              (function t closure_ids
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(385)<ghost>:12924-13162
                  (before middle_end/flambda/inline_and_simplify_aux.ml(386):12945-13162
                    (if (field 11 t)
                      (before middle_end/flambda/inline_and_simplify_aux.ml(386):12968-12969
                        t)
                      (before middle_end/flambda/inline_and_simplify_aux.ml(388):12985-13162
                        (let (init = t)
                          (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                            (field 0 init) (field 1 init) (field 2 init)
                            (field 3 init) (field 4 init) (field 5 init)
                            (field 6 init) (field 7 init) (field 8 init)
                            (field 9 init) (field 10 init) (field 11 init)
                            (field 12 init) (field 13 init) (field 14 init)
                            (field 15 init) (field 16 init) (field 17 init)
                            (after middle_end/flambda/inline_and_simplify_aux.ml(390):13043-13153
                              (apply
                                (field 4 (field 0 (global Inlining_stats!)))
                                (field 18 t) closure_ids))
                            (field 19 init))))))))
            enter_closure =
              (function t closure_id inline_inside dbg f
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(394)<ghost>:13184-13441
                  (before middle_end/flambda/inline_and_simplify_aux.ml(395):13227-13441
                    (let
                      (t =
                         (if (&& inline_inside (not (field 12 t)))
                           (before middle_end/flambda/inline_and_simplify_aux.ml(396):13301-13302
                             t)
                           (before middle_end/flambda/inline_and_simplify_aux.ml(397):13314-13332
                             (after middle_end/flambda/inline_and_simplify_aux.ml(397):13314-13332
                               (apply set_never_inline t)))))
                      (before middle_end/flambda/inline_and_simplify_aux.ml(399):13344-13441
                        (let
                          (t =
                             (after middle_end/flambda/inline_and_simplify_aux.ml(399):13352-13389
                               (apply unset_never_inline_outside_closures t)))
                          (before middle_end/flambda/inline_and_simplify_aux.ml(400):13397-13441
                            (after middle_end/flambda/inline_and_simplify_aux.ml(400):13397-13441
                              (apply f
                                (after middle_end/flambda/inline_and_simplify_aux.ml(400):13399-13441
                                  (apply note_entering_closure t closure_id
                                    dbg)))))))))))
            record_decision =
              (function t decision
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(402)<ghost>:13465-13573
                  (before middle_end/flambda/inline_and_simplify_aux.ml(403):13482-13573
                    (after middle_end/flambda/inline_and_simplify_aux.ml(403):13482-13573
                      (apply (field 1 (global Inlining_stats!)) decision
                        (field 18 t))))))
            set_inline_debuginfo =
              (function t dbg
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(406)<ghost>:13602-13649
                  (before middle_end/flambda/inline_and_simplify_aux.ml(407):13615-13649
                    (let (init = t)
                      (makeblock 0 (*,int,*,*,*,*,*,*,int,int,*,*,*,*,*,*,*,int,*,*)
                        (field 0 init) (field 1 init) (field 2 init)
                        (field 3 init) (field 4 init) (field 5 init)
                        (field 6 init) (field 7 init) (field 8 init)
                        (field 9 init) (field 10 init) (field 11 init)
                        (field 12 init) (field 13 init) (field 14 init)
                        (field 15 init) (field 16 init) (field 17 init)
                        (field 18 init) dbg)))))
            add_inlined_debuginfo =
              (function t dbg
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(409)<ghost>:13679-13732
                  (before middle_end/flambda/inline_and_simplify_aux.ml(410):13692-13732
                    (after middle_end/flambda/inline_and_simplify_aux.ml(410):13692-13732
                      (apply (field 5 (global Debuginfo!)) (field 19 t) dbg))))))
           (pseudo middle_end/flambda/inline_and_simplify_aux.ml(20):1251-13736
             (makeblock 0 create backend round ppf_dump local
               inlining_level_up print mem add_internal add add_outer_scope
               add_mutable really_import_approx
               really_import_approx_with_scope find_symbol_exn
               find_symbol_opt find_symbol_fatal find_or_load_symbol
               add_projection find_projection does_not_bind does_not_freshen
               add_symbol redefine_symbol find_with_scope_exn find_exn
               find_mutable_exn find_list_exn find_opt activate_freshening
               enter_set_of_closures_declaration
               inside_set_of_closures_declaration at_toplevel
               is_inside_branch branch_depth inside_branch set_freshening
               increase_closure_depth set_never_inline
               set_never_inline_inside_closures
               unset_never_inline_inside_closures
               set_never_inline_outside_closures
               unset_never_inline_outside_closures actively_unrolling
               start_actively_unrolling continue_actively_unrolling
               unrolling_allowed inside_unrolled_function inlining_allowed
               inside_inlined_function inlining_level freshening never_inline
               note_entering_closure note_entering_call note_entering_inlined
               note_entering_specialised enter_closure record_decision
               set_inline_debuginfo add_inlined_debuginfo))))
     initial_inlining_threshold =
       (function round[int]
         (funct-body middle_end/flambda/inline_and_simplify_aux.ml(413)<ghost>:13769-14102
           (before middle_end/flambda/inline_and_simplify_aux.ml(414):13808-14102
             (let
               (unscaled =[float]
                  (after middle_end/flambda/inline_and_simplify_aux.ml(415):13827-13892
                    (apply (field 2 (field 1 (global Clflags!))) round
                      (field 0 (field 96 (global Clflags!))))))
               (before middle_end/flambda/inline_and_simplify_aux.ml(419):13982-14102
                 (makeblock 0 (int)
                   (int_of_float
                     (*. unscaled
                       (float_of_int (field 5 (global Inlining_cost!)))))))))))
     initial_inlining_toplevel_threshold =
       (function round[int]
         (funct-body middle_end/flambda/inline_and_simplify_aux.ml(423)<ghost>:14144-14642
           (before middle_end/flambda/inline_and_simplify_aux.ml(424):14183-14642
             (let
               (ordinary_threshold =[float]
                  (after middle_end/flambda/inline_and_simplify_aux.ml(425):14212-14277
                    (apply (field 2 (field 1 (global Clflags!))) round
                      (field 0 (field 96 (global Clflags!))))))
               (before middle_end/flambda/inline_and_simplify_aux.ml(427):14285-14642
                 (let
                   (toplevel_threshold =[int]
                      (after middle_end/flambda/inline_and_simplify_aux.ml(428):14314-14386
                        (apply (field 2 (field 0 (global Clflags!))) round
                          (field 0 (field 104 (global Clflags!))))))
                   (before middle_end/flambda/inline_and_simplify_aux.ml(430):14394-14642
                     (let
                       (unscaled =[int]
                          (+ (int_of_float ordinary_threshold)
                            toplevel_threshold))
                       (before middle_end/flambda/inline_and_simplify_aux.ml(435):14557-14642
                         (makeblock 0 (int)
                           (* unscaled (field 5 (global Inlining_cost!)))))))))))))
     Result =
       (module-defn(Result) middle_end/flambda/inline_and_simplify_aux.ml(438):14644-16795
         (let
           (create =
              (function param
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(447)<ghost>:14930-15167
                  (before middle_end/flambda/inline_and_simplify_aux.ml(448):14939-15167
                    (makeblock 0 (*,*,*,*,int)
                      (after middle_end/flambda/inline_and_simplify_aux.ml(448):14950-14989
                        (apply (field 9 (global Simple_value_approx!)) 0a))
                      (field 0 (field 6 (global Static_exception!))) 0a
                      (field 0 (field 3 (global Inlining_cost!))) 0))))
            approx =
              (function t
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(455)<ghost>:15182-15194
                  (before middle_end/flambda/inline_and_simplify_aux.ml(455):15186-15194
                    (field 0 t))))
            set_approx =
              (function t approx
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(456)<ghost>:15212-15240
                  (before middle_end/flambda/inline_and_simplify_aux.ml(456):15223-15240
                    (let (init = t)
                      (makeblock 0 (*,*,*,*,int) approx (field 1 init)
                        (field 2 init) (field 3 init) (field 4 init))))))
            meet_approx =
              (function t env approx
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(458)<ghost>:15260-15450
                  (before middle_end/flambda/inline_and_simplify_aux.ml(459):15279-15450
                    (let
                      (really_import_approx =
                         (after middle_end/flambda/inline_and_simplify_aux.ml(459):15306-15334
                           (apply (field 12 Env) env)))
                      (before middle_end/flambda/inline_and_simplify_aux.ml(460):15342-15450
                        (let
                          (meet =
                             (after middle_end/flambda/inline_and_simplify_aux.ml(461):15359-15421
                               (apply
                                 (field 45 (global Simple_value_approx!))
                                 really_import_approx (field 0 t) approx)))
                          (before middle_end/flambda/inline_and_simplify_aux.ml(463):15433-15450
                            (after middle_end/flambda/inline_and_simplify_aux.ml(463):15433-15450
                              (apply set_approx t meet)))))))))
            use_static_exception =
              (function t i
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(465)<ghost>:15479-15595
                  (before middle_end/flambda/inline_and_simplify_aux.ml(466):15489-15595
                    (let (init = t)
                      (makeblock 0 (*,*,*,*,int) (field 0 init)
                        (after middle_end/flambda/inline_and_simplify_aux.ml(468):15537-15588
                          (apply
                            (field 3 (field 6 (global Static_exception!))) i
                            (field 1 t)))
                        (field 2 init) (field 3 init) (field 4 init))))))
            used_static_exceptions =
              (function t
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(471)<ghost>:15626-15654
                  (before middle_end/flambda/inline_and_simplify_aux.ml(471):15630-15654
                    (field 1 t))))
            exit_scope_catch =
              (function t i
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(473)<ghost>:15679-15798
                  (before middle_end/flambda/inline_and_simplify_aux.ml(474):15689-15798
                    (let (init = t)
                      (makeblock 0 (*,*,*,*,int) (field 0 init)
                        (after middle_end/flambda/inline_and_simplify_aux.ml(476):15737-15791
                          (apply
                            (field 5 (field 6 (global Static_exception!))) i
                            (field 1 t)))
                        (field 2 init) (field 3 init) (field 4 init))))))
            map_benefit =
              (function t f
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(479)<ghost>:15818-15860
                  (before middle_end/flambda/inline_and_simplify_aux.ml(480):15828-15860
                    (let (init = t)
                      (makeblock 0 (*,*,*,*,int) (field 0 init)
                        (field 1 init) (field 2 init)
                        (after middle_end/flambda/inline_and_simplify_aux.ml(480):15847-15858
                          (apply f (field 3 t)))
                        (field 4 init))))))
            add_benefit =
              (function t b
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(482)<ghost>:15880-15948
                  (before middle_end/flambda/inline_and_simplify_aux.ml(483):15890-15948
                    (let (init = t)
                      (makeblock 0 (*,*,*,*,int) (field 0 init)
                        (field 1 init) (field 2 init)
                        (after middle_end/flambda/inline_and_simplify_aux.ml(483):15909-15946
                          (apply (field 1 (field 3 (global Inlining_cost!)))
                            (field 3 t) b))
                        (field 4 init))))))
            benefit =
              (function t
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(485)<ghost>:15964-15977
                  (before middle_end/flambda/inline_and_simplify_aux.ml(485):15968-15977
                    (field 3 t))))
            reset_benefit =
              (function t
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(487)<ghost>:15999-16055
                  (before middle_end/flambda/inline_and_simplify_aux.ml(488):16007-16055
                    (let (init = t)
                      (makeblock 0 (*,*,*,*,int) (field 0 init)
                        (field 1 init) (field 2 init)
                        (field 0 (field 3 (global Inlining_cost!)))
                        (field 4 init))))))
            set_inlining_threshold =
              (function t inlining_threshold
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(490)<ghost>:16086-16142
                  (before middle_end/flambda/inline_and_simplify_aux.ml(491):16113-16142
                    (let (init = t)
                      (makeblock 0 (*,*,*,*,int) (field 0 init)
                        (field 1 init) inlining_threshold (field 3 init)
                        (field 4 init))))))
            add_inlining_threshold =
              (function t j
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(493)<ghost>:16173-16355
                  (before middle_end/flambda/inline_and_simplify_aux.ml(494):16183-16355
                    (let (*match* = (field 2 t))
                      (if *match*
                        (let (i =a (field 0 *match*))
                          (before middle_end/flambda/inline_and_simplify_aux.ml(497):16253-16355
                            (let
                              (inlining_threshold =
                                 (makeblock 0
                                   (after middle_end/flambda/inline_and_simplify_aux.ml(497):16283-16316
                                     (apply
                                       (field 0
                                         (field 0 (global Inlining_cost!)))
                                       i j))))
                              (before middle_end/flambda/inline_and_simplify_aux.ml(498):16326-16355
                                (let (init = t)
                                  (makeblock 0 (*,*,*,*,int) (field 0 init)
                                    (field 1 init) inlining_threshold
                                    (field 3 init) (field 4 init)))))))
                        (before middle_end/flambda/inline_and_simplify_aux.ml(495):16229-16230
                          t))))))
            sub_inlining_threshold =
              (function t j
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(500)<ghost>:16386-16568
                  (before middle_end/flambda/inline_and_simplify_aux.ml(501):16396-16568
                    (let (*match* = (field 2 t))
                      (if *match*
                        (let (i =a (field 0 *match*))
                          (before middle_end/flambda/inline_and_simplify_aux.ml(504):16466-16568
                            (let
                              (inlining_threshold =
                                 (makeblock 0
                                   (after middle_end/flambda/inline_and_simplify_aux.ml(504):16496-16529
                                     (apply
                                       (field 1
                                         (field 0 (global Inlining_cost!)))
                                       i j))))
                              (before middle_end/flambda/inline_and_simplify_aux.ml(505):16539-16568
                                (let (init = t)
                                  (makeblock 0 (*,*,*,*,int) (field 0 init)
                                    (field 1 init) inlining_threshold
                                    (field 3 init) (field 4 init)))))))
                        (before middle_end/flambda/inline_and_simplify_aux.ml(502):16442-16443
                          t))))))
            inlining_threshold =
              (function t
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(507)<ghost>:16595-16619
                  (before middle_end/flambda/inline_and_simplify_aux.ml(507):16599-16619
                    (field 2 t))))
            seen_direct_application =
              (function t
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(509)<ghost>:16651-16726
                  (before middle_end/flambda/inline_and_simplify_aux.ml(510):16659-16726
                    (let (init = t)
                      (makeblock 0 (*,*,*,*,int) (field 0 init)
                        (field 1 init) (field 2 init) (field 3 init)
                        (+ (field 4 t) 1))))))
            num_direct_applications =
              (function t : int
                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(512)<ghost>:16758-16791
                  (before middle_end/flambda/inline_and_simplify_aux.ml(513):16766-16791
                    (field 4 t)))))
           (pseudo middle_end/flambda/inline_and_simplify_aux.ml(438):14660-16795
             (makeblock 0 create approx set_approx meet_approx
               use_static_exception used_static_exceptions exit_scope_catch
               map_benefit add_benefit benefit reset_benefit
               set_inlining_threshold add_inlining_threshold
               sub_inlining_threshold inlining_threshold
               seen_direct_application num_direct_applications))))
     keep_body_check =
       (function is_classic_mode recursive
         (funct-body middle_end/flambda/inline_and_simplify_aux.ml(519)<ghost>:16864-18166
           (before middle_end/flambda/inline_and_simplify_aux.ml(520):16896-18166
             (if (not is_classic_mode)
               (before middle_end/flambda/inline_and_simplify_aux.ml(520):16924-16957
                 (function param param
                   (funct-body middle_end/flambda/inline_and_simplify_aux.ml(520):16924-16957
                     (before middle_end/flambda/inline_and_simplify_aux.ml(521):16947-16951
                       1a))))
               (before middle_end/flambda/inline_and_simplify_aux.ml(522):16963-18166
                 (let
                   (can_inline_non_rec_function =
                      (function fun_decl
                        (funct-body middle_end/flambda/inline_and_simplify_aux.ml(523)<ghost>:17005-17712
                          (before middle_end/flambda/inline_and_simplify_aux.ml(533):17519-17712
                            (let
                              (inlining_threshold =
                                 (after middle_end/flambda/inline_and_simplify_aux.ml(533):17544-17579
                                   (apply initial_inlining_threshold 0)))
                              (before middle_end/flambda/inline_and_simplify_aux.ml(534):17589-17712
                                (let
                                  (bonus =[int]
                                     (after middle_end/flambda/inline_and_simplify_aux.ml(534):17601-17638
                                       (apply
                                         (field 3 (global Flambda_utils!))
                                         fun_decl)))
                                  (before middle_end/flambda/inline_and_simplify_aux.ml(535):17648-17712
                                    (after middle_end/flambda/inline_and_simplify_aux.ml(535):17648-17712
                                      (apply
                                        (field 1 (global Inlining_cost!))
                                        (field 2 fun_decl) inlining_threshold
                                        bonus))))))))))
                   (before middle_end/flambda/inline_and_simplify_aux.ml(537):17724-18158
                     (function var fun_decl
                       (funct-body middle_end/flambda/inline_and_simplify_aux.ml(537):17724-18158
                         (before middle_end/flambda/inline_and_simplify_aux.ml(538):17798-18158
                           (if (field 5 fun_decl)
                             (before middle_end/flambda/inline_and_simplify_aux.ml(538):17820-17848
                               1a)
                             (before middle_end/flambda/inline_and_simplify_aux.ml(540):17854-18158
                               (if
                                 (after middle_end/flambda/inline_and_simplify_aux.ml(540):17857-17900
                                   (apply
                                     (field 2 (field 6 (global Variable!)))
                                     var
                                     (after middle_end/flambda/inline_and_simplify_aux.ml(540):17878-17900
                                       (let
                                         (lzarg = recursive
                                          tag =a (caml_obj_tag lzarg))
                                         (if (== tag 250) (field 0 lzarg)
                                           (if (== tag 246)
                                             (apply
                                               (field 1
                                                 (global CamlinternalLazy!))
                                               lzarg)
                                             lzarg))))))
                                 (before middle_end/flambda/inline_and_simplify_aux.ml(540):17906-17935
                                   0a)
                                 (before middle_end/flambda/inline_and_simplify_aux.ml(542):17941-18158
                                   (let (*match* = (field 7 fun_decl))
                                     (if (isint *match*)
                                       (switch* *match*
                                        case int 0:
                                         (before middle_end/flambda/inline_and_simplify_aux.ml(546):18112-18116
                                           1a)
                                        case int 1:
                                         (before middle_end/flambda/inline_and_simplify_aux.ml(547):18143-18148
                                           0a)
                                        case int 2:
                                         (before middle_end/flambda/inline_and_simplify_aux.ml(544):18010-18046
                                           (after middle_end/flambda/inline_and_simplify_aux.ml(544):18010-18046
                                             (apply
                                               can_inline_non_rec_function
                                               fun_decl))))
                                       (let (factor =a (field 0 *match*))
                                         (before middle_end/flambda/inline_and_simplify_aux.ml(545):18074-18084
                                           (after middle_end/flambda/inline_and_simplify_aux.ml(545):18074-18084
                                             (apply
                                               (field 3
                                                 (global Int_replace_polymorphic_compare!))
                                               factor 0))))))))))))))))))))
     prepare_to_simplify_set_of_closures =
       (function env set_of_closures function_decls freshen
         only_for_function_decl
         (funct-body middle_end/flambda/inline_and_simplify_aux.ml(551)<ghost>:18208-23406
           (before middle_end/flambda/inline_and_simplify_aux.ml(555):18369-23406
             (let
               (free_vars =
                  (after middle_end/flambda/inline_and_simplify_aux.ml(556):18389-19113
                    (apply (field 32 (field 7 (global Variable!)))
                      (function external_var
                        (funct-body middle_end/flambda/inline_and_simplify_aux.ml(556):18406-19081
                          (before middle_end/flambda/inline_and_simplify_aux.ml(557):18462-19080
                            (let
                              (var =
                                 (let
                                   (var =
                                      (after middle_end/flambda/inline_and_simplify_aux.ml(559):18504-18565
                                        (apply (field 9 (global Freshening!))
                                          (after middle_end/flambda/inline_and_simplify_aux.ml(559):18530-18548
                                            (apply (field 51 Env) env))
                                          (field 0 external_var))))
                                   (before middle_end/flambda/inline_and_simplify_aux.ml(561):18589-18786
                                     (let
                                       (*match* =
                                          (after middle_end/flambda/inline_and_simplify_aux.ml(562):18607-18719
                                            (apply
                                              (field 54
                                                (global Simple_value_approx!))
                                              (after middle_end/flambda/inline_and_simplify_aux.ml(562):18639-18659
                                                (apply (field 25 Env) env
                                                  var))
                                              (function var
                                                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(563):18693-18719
                                                  (before middle_end/flambda/inline_and_simplify_aux.ml(563):18705-18718
                                                    (after middle_end/flambda/inline_and_simplify_aux.ml(563):18705-18718
                                                      (apply (field 7 Env)
                                                        env var))))))))
                                       (if *match*
                                         (let (var =a (field 0 *match*))
                                           (before middle_end/flambda/inline_and_simplify_aux.ml(566):18783-18786
                                             var))
                                         (before middle_end/flambda/inline_and_simplify_aux.ml(565):18755-18758
                                           var))))))
                              (before middle_end/flambda/inline_and_simplify_aux.ml(568):18806-19080
                                (let
                                  (approx =
                                     (after middle_end/flambda/inline_and_simplify_aux.ml(568):18819-18837
                                       (apply (field 25 Env) env var)))
                                  (before middle_end/flambda/inline_and_simplify_aux.ml(571):18973-19080
                                    (let
                                      (projection = (field 1 external_var))
                                      (before middle_end/flambda/inline_and_simplify_aux.ml(572):19025-19080
                                        (makeblock 0
                                          (makeblock 0 var projection)
                                          approx))))))))))
                      (field 1 set_of_closures))))
               (before middle_end/flambda/inline_and_simplify_aux.ml(575):19121-23406
                 (let
                   (specialised_args =
                      (after middle_end/flambda/inline_and_simplify_aux.ml(576):19148-20028
                        (apply (field 38 (field 7 (global Variable!)))
                          (field 2 set_of_closures)
                          (function param spec_to
                            (funct-body middle_end/flambda/inline_and_simplify_aux.ml(577):19214-20028
                              (before middle_end/flambda/inline_and_simplify_aux.ml(578):19271-20027
                                (let
                                  (keep =
                                     (if only_for_function_decl
                                       (let
                                         (function_decl =a
                                            (field 0 only_for_function_decl))
                                         (before middle_end/flambda/inline_and_simplify_aux.ml(582):19397-19461
                                           (after middle_end/flambda/inline_and_simplify_aux.ml(582):19397-19461
                                             (apply
                                               (field 2
                                                 (field 6 (global Variable!)))
                                               param
                                               (after middle_end/flambda/inline_and_simplify_aux.ml(582):19420-19461
                                                 (apply
                                                   (field 43
                                                     (field 5
                                                       (global Parameter!)))
                                                   (field 1 function_decl)))))))
                                       (before middle_end/flambda/inline_and_simplify_aux.ml(580):19346-19350
                                         1a)))
                                  (before middle_end/flambda/inline_and_simplify_aux.ml(584):19481-20027
                                    (if (not keep)
                                      (before middle_end/flambda/inline_and_simplify_aux.ml(584):19498-19502
                                        0a)
                                      (before middle_end/flambda/inline_and_simplify_aux.ml(586):19526-20027
                                        (let
                                          (external_var = (field 0 spec_to))
                                          (before middle_end/flambda/inline_and_simplify_aux.ml(587):19570-20027
                                            (let
                                              (var =
                                                 (after middle_end/flambda/inline_and_simplify_aux.ml(588):19592-19649
                                                   (apply
                                                     (field 9
                                                       (global Freshening!))
                                                     (after middle_end/flambda/inline_and_simplify_aux.ml(588):19618-19636
                                                       (apply (field 51 Env)
                                                         env))
                                                     external_var)))
                                              (before middle_end/flambda/inline_and_simplify_aux.ml(590):19673-20027
                                                (let
                                                  (var =
                                                     (let
                                                       (*match* =
                                                          (after middle_end/flambda/inline_and_simplify_aux.ml(592):19715-19829
                                                            (apply
                                                              (field 54
                                                                (global Simple_value_approx!))
                                                              (after middle_end/flambda/inline_and_simplify_aux.ml(592):19747-19767
                                                                (apply
                                                                  (field 25
                                                                    Env)
                                                                  env var))
                                                              (function var
                                                                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(593):19803-19829
                                                                  (before middle_end/flambda/inline_and_simplify_aux.ml(593):19815-19828
                                                                    (after middle_end/flambda/inline_and_simplify_aux.ml(593):19815-19828
                                                                    (apply
                                                                    (field 7
                                                                    Env) env
                                                                    var))))))))
                                                       (if *match*
                                                         (let
                                                           (var =a
                                                              (field 0
                                                                *match*))
                                                           (before middle_end/flambda/inline_and_simplify_aux.ml(596):19899-19902
                                                             var))
                                                         (before middle_end/flambda/inline_and_simplify_aux.ml(595):19869-19872
                                                           var))))
                                                  (before middle_end/flambda/inline_and_simplify_aux.ml(598):19926-20027
                                                    (let
                                                      (projection =
                                                         (field 1 spec_to))
                                                      (before middle_end/flambda/inline_and_simplify_aux.ml(599):19975-20027
                                                        (makeblock 0
                                                          (makeblock 0 var
                                                            projection))))))))))))))))))))
                   (before middle_end/flambda/inline_and_simplify_aux.ml(601):20036-23406
                     (let (environment_before_cleaning = env)
                       (before middle_end/flambda/inline_and_simplify_aux.ml(603):20158-23406
                         (let
                           (env =
                              (after middle_end/flambda/inline_and_simplify_aux.ml(603):20168-20179
                                (apply (field 4 Env) env)))
                           (before middle_end/flambda/inline_and_simplify_aux.ml(604):20185-23406
                             (let
                               (*match* =
                                  (after middle_end/flambda/inline_and_simplify_aux.ml(605):20237-20371
                                    (apply (field 14 (global Freshening!))
                                      (after middle_end/flambda/inline_and_simplify_aux.ml(605):20283-20301
                                        (apply (field 51 Env) env))
                                      free_vars function_decls (not freshen)))
                                freshening =a (field 3 *match*)
                                sb =a (field 2 *match*)
                                function_decls =a (field 1 *match*)
                                free_vars =a (field 0 *match*))
                               (before middle_end/flambda/inline_and_simplify_aux.ml(608):20379-23406
                                 (let
                                   (env =
                                      (after middle_end/flambda/inline_and_simplify_aux.ml(608):20389-20412
                                        (apply (field 36 Env) env sb)))
                                   (before middle_end/flambda/inline_and_simplify_aux.ml(609):20418-23406
                                     (let
                                       (free_vars =
                                          (after middle_end/flambda/inline_and_simplify_aux.ml(610):20438-20561
                                            (apply
                                              (field 18 (global Freshening!))
                                              free_vars
                                              (after middle_end/flambda/inline_and_simplify_aux.ml(611):20506-20524
                                                (apply (field 51 Env) env))
                                              freshening)))
                                       (before middle_end/flambda/inline_and_simplify_aux.ml(614):20569-23406
                                         (let
                                           (specialised_args =
                                              (let
                                                (specialised_args =
                                                   (after middle_end/flambda/inline_and_simplify_aux.ml(616):20625-20718
                                                     (apply
                                                       (field 45
                                                         (field 7
                                                           (global Variable!)))
                                                       (after middle_end/flambda/inline_and_simplify_aux.ml(616):20647-20693
                                                         (apply
                                                           (field 9
                                                             (global Freshening!))
                                                           (after middle_end/flambda/inline_and_simplify_aux.ml(616):20674-20692
                                                             (apply
                                                               (field 51 Env)
                                                               env))))
                                                       specialised_args)))
                                                (before middle_end/flambda/inline_and_simplify_aux.ml(619):20730-20859
                                                  (after middle_end/flambda/inline_and_simplify_aux.ml(619):20730-20859
                                                    (apply
                                                      (field 17
                                                        (global Freshening!))
                                                      specialised_args
                                                      (after middle_end/flambda/inline_and_simplify_aux.ml(620):20804-20822
                                                        (apply (field 51 Env)
                                                          env))
                                                      freshening)))))
                                           (before middle_end/flambda/inline_and_simplify_aux.ml(623):20867-23406
                                             (let
                                               (parameter_approximations =
                                                  (after middle_end/flambda/inline_and_simplify_aux.ml(626):21033-21262
                                                    (apply
                                                      (field 45
                                                        (field 7
                                                          (global Variable!)))
                                                      (after middle_end/flambda/inline_and_simplify_aux.ml(626):21055-21101
                                                        (apply
                                                          (field 9
                                                            (global Freshening!))
                                                          (after middle_end/flambda/inline_and_simplify_aux.ml(626):21082-21100
                                                            (apply
                                                              (field 51 Env)
                                                              env))))
                                                      (after middle_end/flambda/inline_and_simplify_aux.ml(627):21108-21262
                                                        (apply
                                                          (field 33
                                                            (field 7
                                                              (global Variable!)))
                                                          (function _id'
                                                            spec_to
                                                            (funct-body middle_end/flambda/inline_and_simplify_aux.ml(627):21127-21236
                                                              (before middle_end/flambda/inline_and_simplify_aux.ml(628):21185-21235
                                                                (after middle_end/flambda/inline_and_simplify_aux.ml(628):21185-21235
                                                                  (apply
                                                                    (field 25
                                                                    Env)
                                                                    environment_before_cleaning
                                                                    (field 0
                                                                    spec_to))))))
                                                          specialised_args)))))
                                               (before middle_end/flambda/inline_and_simplify_aux.ml(631):21270-23406
                                                 (let
                                                   (direct_call_surrogates =
                                                      (after middle_end/flambda/inline_and_simplify_aux.ml(632):21303-21821
                                                        (apply
                                                          (field 12
                                                            (field 7
                                                              (global Variable!)))
                                                          (function existing
                                                            surrogate
                                                            surrogates
                                                            (funct-body middle_end/flambda/inline_and_simplify_aux.ml(632):21321-21749
                                                              (before middle_end/flambda/inline_and_simplify_aux.ml(633):21367-21748
                                                                (let
                                                                  (existing =
                                                                    (after middle_end/flambda/inline_and_simplify_aux.ml(634):21392-21481
                                                                    (apply
                                                                    (field 2
                                                                    (field 13
                                                                    (global Freshening!)))
                                                                    freshening
                                                                    (after middle_end/flambda/inline_and_simplify_aux.ml(635):21455-21481
                                                                    (apply
                                                                    (field 9
                                                                    (global Closure_id!))
                                                                    existing)))))
                                                                  (before middle_end/flambda/inline_and_simplify_aux.ml(637):21501-21748
                                                                    (let
                                                                    (surrogate =
                                                                    (after middle_end/flambda/inline_and_simplify_aux.ml(638):21527-21617
                                                                    (apply
                                                                    (field 2
                                                                    (field 13
                                                                    (global Freshening!)))
                                                                    freshening
                                                                    (after middle_end/flambda/inline_and_simplify_aux.ml(639):21590-21617
                                                                    (apply
                                                                    (field 9
                                                                    (global Closure_id!))
                                                                    surrogate)))))
                                                                    (before middle_end/flambda/inline_and_simplify_aux.ml(641):21637-21748
                                                                    (seq
                                                                    (if
                                                                    (not
                                                                    (after middle_end/flambda/inline_and_simplify_aux.ml(641):21649-21689
                                                                    (apply
                                                                    (field 2
                                                                    (field 7
                                                                    (global Closure_id!)))
                                                                    existing
                                                                    surrogates)))
                                                                    0a
                                                                    (raise
                                                                    (after middle_end/flambda/inline_and_simplify_aux.ml(641):21637-21690
                                                                    (makeblock 0
                                                                    (global Assert_failure!)
                                                                    [0:
                                                                    "middle_end/flambda/inline_and_simplify_aux.ml"
                                                                    641 8]))))
                                                                    (before middle_end/flambda/inline_and_simplify_aux.ml(642):21700-21748
                                                                    (after middle_end/flambda/inline_and_simplify_aux.ml(642):21700-21748
                                                                    (apply
                                                                    (field 3
                                                                    (field 7
                                                                    (global Closure_id!)))
                                                                    existing
                                                                    surrogate
                                                                    surrogates)))))))))))
                                                          (field 3
                                                            set_of_closures)
                                                          (field 0
                                                            (field 7
                                                              (global Closure_id!))))))
                                                   (before middle_end/flambda/inline_and_simplify_aux.ml(646):21829-23406
                                                     (let
                                                       (env =
                                                          (after middle_end/flambda/inline_and_simplify_aux.ml(647):21843-21926
                                                            (apply
                                                              (field 30 Env)
                                                              env
                                                              (field 2
                                                                function_decls))))
                                                       (before middle_end/flambda/inline_and_simplify_aux.ml(651):21999-23406
                                                         (let
                                                           (internal_value_set_of_closures =
                                                              (let
                                                                (bound_vars =
                                                                   (after middle_end/flambda/inline_and_simplify_aux.ml(653):22063-22228
                                                                    (apply
                                                                    (field 12
                                                                    (field 7
                                                                    (global Variable!)))
                                                                    (function
                                                                    id param
                                                                    map
                                                                    (funct-body middle_end/flambda/inline_and_simplify_aux.ml(653):22081-22181
                                                                    (let
                                                                    (desc =a
                                                                    (field 1
                                                                    param))
                                                                    (before middle_end/flambda/inline_and_simplify_aux.ml(654):22116-22180
                                                                    (after middle_end/flambda/inline_and_simplify_aux.ml(654):22116-22180
                                                                    (apply
                                                                    (field 3
                                                                    (field 7
                                                                    (global Var_within_closure!)))
                                                                    (after middle_end/flambda/inline_and_simplify_aux.ml(654):22143-22171
                                                                    (apply
                                                                    (field 9
                                                                    (global Var_within_closure!))
                                                                    id)) desc
                                                                    map))))))
                                                                    free_vars
                                                                    (field 0
                                                                    (field 7
                                                                    (global Var_within_closure!))))))
                                                                (before middle_end/flambda/inline_and_simplify_aux.ml(657):22240-22802
                                                                  (let
                                                                    (free_vars =
                                                                    (after middle_end/flambda/inline_and_simplify_aux.ml(657):22256-22286
                                                                    (apply
                                                                    (field 32
                                                                    (field 7
                                                                    (global Variable!)))
                                                                    (function
                                                                    prim stub
                                                                    (field 0
                                                                    prim))
                                                                    free_vars)))
                                                                    (before middle_end/flambda/inline_and_simplify_aux.ml(658):22294-22802
                                                                    (let
                                                                    (invariant_params =
                                                                    (opaque
                                                                    (makeblock 250
                                                                    (field 0
                                                                    (field 7
                                                                    (global Variable!))))))
                                                                    (before middle_end/flambda/inline_and_simplify_aux.ml(659):22348-22802
                                                                    (let
                                                                    (recursive =
                                                                    (makemutable 246
                                                                    (function
                                                                    param
                                                                    (after middle_end/flambda/inline_and_simplify_aux.ml(659):22369-22408
                                                                    (apply
                                                                    (field 46
                                                                    (field 7
                                                                    (global Variable!)))
                                                                    (field 3
                                                                    function_decls))))))
                                                                    (before middle_end/flambda/inline_and_simplify_aux.ml(660):22416-22802
                                                                    (let
                                                                    (is_classic_mode =
                                                                    (field 0
                                                                    function_decls))
                                                                    (before middle_end/flambda/inline_and_simplify_aux.ml(661):22476-22802
                                                                    (let
                                                                    (keep_body =
                                                                    (after middle_end/flambda/inline_and_simplify_aux.ml(661):22492-22535
                                                                    (apply
                                                                    keep_body_check
                                                                    is_classic_mode
                                                                    recursive)))
                                                                    (before middle_end/flambda/inline_and_simplify_aux.ml(662):22543-22802
                                                                    (let
                                                                    (function_decls =
                                                                    (after middle_end/flambda/inline_and_simplify_aux.ml(663):22570-22626
                                                                    (apply
                                                                    (field 6
                                                                    (global Simple_value_approx!))
                                                                    keep_body
                                                                    function_decls)))
                                                                    (before middle_end/flambda/inline_and_simplify_aux.ml(665):22638-22802
                                                                    (after middle_end/flambda/inline_and_simplify_aux.ml(665):22638-22802
                                                                    (apply
                                                                    (field 7
                                                                    (global Simple_value_approx!))
                                                                    function_decls
                                                                    bound_vars
                                                                    free_vars
                                                                    invariant_params
                                                                    recursive
                                                                    specialised_args
                                                                    freshening
                                                                    direct_call_surrogates)))))))))))))))))
                                                           (before middle_end/flambda/inline_and_simplify_aux.ml(672):22984-23406
                                                             (let
                                                               (set_of_closures_env =
                                                                  (after middle_end/flambda/inline_and_simplify_aux.ml(673):23014-23272
                                                                    (apply
                                                                    (field 12
                                                                    (field 7
                                                                    (global Variable!)))
                                                                    (function
                                                                    closure
                                                                    param env
                                                                    (funct-body middle_end/flambda/inline_and_simplify_aux.ml(673):23032-23242
                                                                    (before middle_end/flambda/inline_and_simplify_aux.ml(674):23062-23234
                                                                    (let
                                                                    (approx =
                                                                    (after middle_end/flambda/inline_and_simplify_aux.ml(675):23085-23190
                                                                    (apply
                                                                    (field 24
                                                                    (global Simple_value_approx!))
                                                                    (makeblock 0
                                                                    closure)
                                                                    0a 0a
                                                                    internal_value_set_of_closures
                                                                    (after middle_end/flambda/inline_and_simplify_aux.ml(676):23165-23190
                                                                    (apply
                                                                    (field 9
                                                                    (global Closure_id!))
                                                                    closure)))))
                                                                    (before middle_end/flambda/inline_and_simplify_aux.ml(678):23210-23234
                                                                    (after middle_end/flambda/inline_and_simplify_aux.ml(678):23210-23234
                                                                    (apply
                                                                    (field 9
                                                                    Env) env
                                                                    closure
                                                                    approx)))))))
                                                                    (field 3
                                                                    function_decls)
                                                                    env)))
                                                               (before middle_end/flambda/inline_and_simplify_aux.ml(682):23280-23406
                                                                 (makeblock 0
                                                                   free_vars
                                                                   specialised_args
                                                                   function_decls
                                                                   parameter_approximations
                                                                   internal_value_set_of_closures
                                                                   set_of_closures_env))))))))))))))))))))))))))))))
     populate_closure_approximations =
       (function function_decl free_vars parameter_approximations
         set_of_closures_env
         (funct-body middle_end/flambda/inline_and_simplify_aux.ml(689)<ghost>:23634-24334
           (before middle_end/flambda/inline_and_simplify_aux.ml(694):23859-24334
             (let
               (env =
                  (after middle_end/flambda/inline_and_simplify_aux.ml(695):23873-23990
                    (apply (field 12 (field 7 (global Variable!)))
                      (function id param env
                        (funct-body middle_end/flambda/inline_and_simplify_aux.ml(695):23891-23954
                          (let (desc =a (field 1 param))
                            (before middle_end/flambda/inline_and_simplify_aux.ml(696):23924-23953
                              (after middle_end/flambda/inline_and_simplify_aux.ml(696):23924-23953
                                (apply (field 10 Env) env id desc))))))
                      free_vars set_of_closures_env)))
               (before middle_end/flambda/inline_and_simplify_aux.ml(700):24054-24334
                 (let
                   (env =
                      (after middle_end/flambda/inline_and_simplify_aux.ml(701):24068-24323
                        (apply (field 20 (global Stdlib__list!))
                          (function env id
                            (funct-body middle_end/flambda/inline_and_simplify_aux.ml(701):24083-24270
                              (before middle_end/flambda/inline_and_simplify_aux.ml(702):24106-24269
                                (let
                                  (approx =
                                     (try
                                       (after middle_end/flambda/inline_and_simplify_aux.ml(703):24133-24178
                                         (apply
                                           (field 26
                                             (field 7 (global Variable!)))
                                           id parameter_approximations))
                                      with exn
                                       (if
                                         (== exn (field 7 (global Stdlib!)))
                                         (before middle_end/flambda/inline_and_simplify_aux.ml(704):24207-24230
                                           (after middle_end/flambda/inline_and_simplify_aux.ml(704):24207-24230
                                             (apply
                                               (field 9
                                                 (global Simple_value_approx!))
                                               0a)))
                                         (reraise exn))))
                                  (before middle_end/flambda/inline_and_simplify_aux.ml(706):24250-24269
                                    (after middle_end/flambda/inline_and_simplify_aux.ml(706):24250-24269
                                      (apply (field 9 Env) env id approx)))))))
                          env
                          (after middle_end/flambda/inline_and_simplify_aux.ml(707):24281-24323
                            (apply (field 0 (field 13 (global Parameter!)))
                              (field 1 function_decl))))))
                   (before middle_end/flambda/inline_and_simplify_aux.ml(709):24331-24334
                     env)))))))
     prepare_to_simplify_closure =
       (function function_decl free_vars specialised_args
         parameter_approximations set_of_closures_env
         (funct-body middle_end/flambda/inline_and_simplify_aux.ml(711)<ghost>:24368-25482
           (before middle_end/flambda/inline_and_simplify_aux.ml(714):24508-25482
             (let
               (closure_env =
                  (after middle_end/flambda/inline_and_simplify_aux.ml(715):24530-24640
                    (apply populate_closure_approximations function_decl
                      free_vars parameter_approximations set_of_closures_env)))
               (before middle_end/flambda/inline_and_simplify_aux.ml(719):24713-25482
                 (let
                   (add_projections =
                      (function closure_env which_variables map
                        (funct-body middle_end/flambda/inline_and_simplify_aux.ml(719)<ghost>:24733-25246
                          (before middle_end/flambda/inline_and_simplify_aux.ml(720):24774-25246
                            (after middle_end/flambda/inline_and_simplify_aux.ml(720):24774-25246
                              (apply (field 12 (field 7 (global Variable!)))
                                (function inner_var spec_arg env
                                  (funct-body middle_end/flambda/inline_and_simplify_aux.ml(720):24792-25206
                                    (before middle_end/flambda/inline_and_simplify_aux.ml(721):24831-25205
                                      (let
                                        (spec_arg =
                                           (after middle_end/flambda/inline_and_simplify_aux.ml(721):24873-24885
                                             (apply map spec_arg)))
                                        (before middle_end/flambda/inline_and_simplify_aux.ml(722):24897-25205
                                          (let (*match* = (field 1 spec_arg))
                                            (if *match*
                                              (let
                                                (projection =a
                                                   (field 0 *match*))
                                                (before middle_end/flambda/inline_and_simplify_aux.ml(725):24989-25205
                                                  (let
                                                    (from =
                                                       (after middle_end/flambda/inline_and_simplify_aux.ml(725):25000-25037
                                                         (apply
                                                           (field 15
                                                             (global Projection!))
                                                           projection)))
                                                    (before middle_end/flambda/inline_and_simplify_aux.ml(726):25051-25205
                                                      (if
                                                        (after middle_end/flambda/inline_and_simplify_aux.ml(726):25054-25104
                                                          (apply
                                                            (field 2
                                                              (field 6
                                                                (global Variable!)))
                                                            from
                                                            (field 3
                                                              function_decl)))
                                                        (before middle_end/flambda/inline_and_simplify_aux.ml(727):25122-25174
                                                          (after middle_end/flambda/inline_and_simplify_aux.ml(727):25122-25174
                                                            (apply
                                                              (field 18 Env)
                                                              env projection
                                                              inner_var)))
                                                        (before middle_end/flambda/inline_and_simplify_aux.ml(729):25202-25205
                                                          env))))))
                                              (before middle_end/flambda/inline_and_simplify_aux.ml(723):24946-24949
                                                env))))))))
                                which_variables closure_env))))))
                   (before middle_end/flambda/inline_and_simplify_aux.ml(733):25254-25482
                     (let
                       (closure_env =
                          (after middle_end/flambda/inline_and_simplify_aux.ml(734):25276-25374
                            (apply add_projections closure_env
                              specialised_args
                              (function spec_to
                                (funct-body middle_end/flambda/inline_and_simplify_aux.ml(735):25350-25374
                                  (before middle_end/flambda/inline_and_simplify_aux.ml(735):25366-25373
                                    spec_to))))))
                       (before middle_end/flambda/inline_and_simplify_aux.ml(737):25382-25482
                         (after middle_end/flambda/inline_and_simplify_aux.ml(737):25382-25482
                           (apply add_projections closure_env free_vars
                             (function param
                               (funct-body middle_end/flambda/inline_and_simplify_aux.ml(738):25447-25482
                                 (let (spec_to =a (field 0 param))
                                   (before middle_end/flambda/inline_and_simplify_aux.ml(738):25474-25481
                                     spec_to))))))))))))))))
    (pseudo _none_(0)<ghost>:-1--1
      (makeblock 0
        (makeblock 0 (field 0 Env) (field 1 Env) (field 12 Env) (field 2 Env)
          (field 3 Env) (field 9 Env) (field 10 Env) (field 11 Env)
          (field 25 Env) (field 26 Env) (field 24 Env) (field 28 Env)
          (field 27 Env) (field 20 Env) (field 21 Env) (field 22 Env)
          (field 23 Env) (field 14 Env) (field 15 Env) (field 16 Env)
          (field 17 Env) (field 18 Env) (field 19 Env) (field 7 Env)
          (field 51 Env) (field 36 Env) (field 29 Env) (field 4 Env)
          (field 31 Env) (field 32 Env) (field 33 Env) (field 34 Env)
          (field 35 Env) (field 37 Env) (field 38 Env) (field 39 Env)
          (field 40 Env) (field 41 Env) (field 42 Env) (field 52 Env)
          (field 50 Env) (field 5 Env) (field 43 Env) (field 44 Env)
          (field 45 Env) (field 46 Env) (field 47 Env) (field 48 Env)
          (field 49 Env) (field 53 Env) (field 54 Env) (field 55 Env)
          (field 56 Env) (field 57 Env) (field 58 Env) (field 6 Env)
          (field 59 Env) (field 60 Env))
        (makeblock 0 (field 0 Result) (field 1 Result) (field 2 Result)
          (field 3 Result) (field 5 Result) (field 4 Result) (field 6 Result)
          (field 9 Result) (field 7 Result) (field 8 Result)
          (field 10 Result) (field 11 Result) (field 12 Result)
          (field 13 Result) (field 14 Result) (field 15 Result)
          (field 16 Result))
        initial_inlining_threshold initial_inlining_toplevel_threshold
        prepare_to_simplify_set_of_closures prepare_to_simplify_closure
        keep_body_check))))
