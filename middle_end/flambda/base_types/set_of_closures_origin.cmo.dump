(setglobal Set_of_closures_origin!
  (let
    (include =a (global Set_of_closures_id!)
     T =a (field 0 include)
     equal =a (field 1 include)
     hash =a (field 2 include)
     compare =a (field 3 include)
     output =a (field 4 include)
     print =a (field 5 include)
     Set =a (field 6 include)
     Map =a (field 7 include)
     Tbl =a (field 8 include)
     get_compilation_unit =a (field 11 include)
     create =
       (function t
         (funct-body middle_end/flambda/base_types/set_of_closures_origin.ml(22)<ghost>:1277-1282
           (before middle_end/flambda/base_types/set_of_closures_origin.ml(22):1281-1282
             t)))
     rename =
       (function f t
         (funct-body middle_end/flambda/base_types/set_of_closures_origin.ml(23)<ghost>:1294-1303
           (before middle_end/flambda/base_types/set_of_closures_origin.ml(23):1300-1303
             (after middle_end/flambda/base_types/set_of_closures_origin.ml(23):1300-1303
               (apply f t))))))
    (pseudo _none_(0)<ghost>:-1--1
      (makeblock 0 T equal hash compare output print Set Map Tbl create
        get_compilation_unit rename))))
