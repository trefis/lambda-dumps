(setglobal Static_exception!
  (let
    (include =a (field 0 (global Numbers!))
     T =a (field 0 include)
     equal =a (field 1 include)
     hash =a (field 2 include)
     compare =a (field 3 include)
     output =a (field 4 include)
     print =a (field 5 include)
     Set =a (field 6 include)
     Map =a (field 7 include)
     Tbl =a (field 8 include)
     create =
       (function param : int
         (funct-body middle_end/flambda/base_types/static_exception.ml(22)<ghost>:1270-1301
           (before middle_end/flambda/base_types/static_exception.ml(22):1275-1301
             (after middle_end/flambda/base_types/static_exception.ml(22):1275-1301
               (apply (field 33 (global Lambda!)) 0a)))))
     to_int =
       (function t
         (funct-body middle_end/flambda/base_types/static_exception.ml(23)<ghost>:1313-1318
           (before middle_end/flambda/base_types/static_exception.ml(23):1317-1318
             t))))
    (pseudo _none_(0)<ghost>:-1--1
      (makeblock 0 T equal hash compare output print Set Map Tbl create
        to_int))))
