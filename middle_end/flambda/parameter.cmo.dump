(setglobal Parameter!
  (let
    (wrap =
       (function var
         (funct-body middle_end/flambda/parameter.ml(28)<ghost>:1426-1439
           (before middle_end/flambda/parameter.ml(28):1432-1439
             (makeblock 0 var))))
     var =
       (function p
         (funct-body middle_end/flambda/parameter.ml(30)<ghost>:1449-1458
           (before middle_end/flambda/parameter.ml(30):1453-1458 (field 0 p))))
     M =
       (module-defn(M) middle_end/flambda/parameter.ml(32):1460-1850
         (apply (field 1 (global Identifiable!))
           (let
             (compare =
                (function param param : int
                  (funct-body middle_end/flambda/parameter.ml(36)<ghost>:1539-1603
                    (let (var2 =a (field 0 param) var1 =a (field 0 param))
                      (before middle_end/flambda/parameter.ml(37):1577-1603
                        (after middle_end/flambda/parameter.ml(37):1577-1603
                          (apply (field 3 (global Variable!)) var1 var2))))))
              equal =
                (function param param
                  (funct-body middle_end/flambda/parameter.ml(39)<ghost>:1619-1681
                    (let (var2 =a (field 0 param) var1 =a (field 0 param))
                      (before middle_end/flambda/parameter.ml(40):1657-1681
                        (after middle_end/flambda/parameter.ml(40):1657-1681
                          (apply (field 1 (global Variable!)) var1 var2))))))
              hash =
                (function param : int
                  (funct-body middle_end/flambda/parameter.ml(42)<ghost>:1696-1729
                    (let (var =a (field 0 param))
                      (before middle_end/flambda/parameter.ml(43):1712-1729
                        (after middle_end/flambda/parameter.ml(43):1712-1729
                          (apply (field 2 (global Variable!)) var))))))
              print =
                (function ppf param
                  (funct-body middle_end/flambda/parameter.ml(45)<ghost>:1745-1787
                    (let (var =a (field 0 param))
                      (before middle_end/flambda/parameter.ml(46):1765-1787
                        (after middle_end/flambda/parameter.ml(46):1765-1787
                          (apply (field 5 (global Variable!)) ppf var))))))
              output =
                (function o param
                  (funct-body middle_end/flambda/parameter.ml(48)<ghost>:1804-1843
                    (let (var =a (field 0 param))
                      (before middle_end/flambda/parameter.ml(49):1822-1843
                        (after middle_end/flambda/parameter.ml(49):1822-1843
                          (apply (field 4 (global Variable!)) o var)))))))
             (pseudo middle_end/flambda/parameter.ml(33):1492-1849
               (makeblock 0 equal hash compare output print)))))
     include =a (let (let = (field 0 M)) (field 0 M))
     equal =a (field 0 include)
     hash =a (field 1 include)
     compare =a (field 2 include)
     output =a (field 3 include)
     print =a (field 4 include)
     Set =
       (module-defn(Set) middle_end/flambda/parameter.ml(57):1916-2008
         (let
           (include =a (field 6 M)
            empty =a (field 0 include)
            is_empty =a (field 1 include)
            mem =a (field 2 include)
            add =a (field 3 include)
            singleton =a (field 4 include)
            remove =a (field 5 include)
            union =a (field 6 include)
            inter =a (field 7 include)
            disjoint =a (field 8 include)
            diff =a (field 9 include)
            compare =a (field 10 include)
            equal =a (field 11 include)
            subset =a (field 12 include)
            iter =a (field 13 include)
            fold =a (field 14 include)
            for_all =a (field 15 include)
            exists =a (field 16 include)
            filter =a (field 17 include)
            partition =a (field 18 include)
            cardinal =a (field 19 include)
            elements =a (field 20 include)
            min_elt =a (field 21 include)
            min_elt_opt =a (field 22 include)
            max_elt =a (field 23 include)
            max_elt_opt =a (field 24 include)
            choose =a (field 25 include)
            choose_opt =a (field 26 include)
            split =a (field 27 include)
            find =a (field 28 include)
            find_opt =a (field 29 include)
            find_first =a (field 30 include)
            find_first_opt =a (field 31 include)
            find_last =a (field 32 include)
            find_last_opt =a (field 33 include)
            to_seq_from =a (field 34 include)
            to_seq =a (field 35 include)
            add_seq =a (field 36 include)
            of_seq =a (field 37 include)
            output =a (field 38 include)
            print =a (field 39 include)
            to_string =a (field 40 include)
            of_list =a (field 41 include)
            map =a (field 42 include)
            vars =
              (function l
                (funct-body middle_end/flambda/parameter.ml(59)<ghost>:1963-2004
                  (before middle_end/flambda/parameter.ml(59):1967-2004
                    (after middle_end/flambda/parameter.ml(59):1967-2004
                      (apply (field 41 (field 6 (global Variable!)))
                        (after middle_end/flambda/parameter.ml(59):1988-2004
                          (apply (field 16 (global Stdlib__list!)) var l))))))))
           (pseudo middle_end/flambda/parameter.ml(57):1929-2008
             (makeblock 0 empty is_empty mem add singleton remove union inter
               disjoint diff compare equal subset iter fold for_all exists
               filter partition cardinal elements min_elt min_elt_opt max_elt
               max_elt_opt choose choose_opt split find find_opt find_first
               find_first_opt find_last find_last_opt to_seq_from to_seq
               add_seq of_seq output print to_string of_list map vars))))
     rename =
       (function current_compilation_unit p
         (funct-body middle_end/flambda/parameter.ml(62)<ghost>:2021-2110
           (before middle_end/flambda/parameter.ml(63):2053-2110
             (makeblock 0
               (after middle_end/flambda/parameter.ml(63):2061-2108
                 (apply (field 11 (global Variable!))
                   current_compilation_unit (field 0 p)))))))
     map_var =
       (function f param
         (funct-body middle_end/flambda/parameter.ml(65)<ghost>:2124-2151
           (let (var =a (field 0 param))
             (before middle_end/flambda/parameter.ml(65):2136-2151
               (makeblock 0
                 (after middle_end/flambda/parameter.ml(65):2144-2149
                   (apply f var)))))))
     List =
       (module-defn(List) middle_end/flambda/parameter.ml(67):2153-2234
         (let
           (vars =
              (function params
                (funct-body middle_end/flambda/parameter.ml(68)<ghost>:2185-2230
                  (before middle_end/flambda/parameter.ml(68):2194-2230
                    (after middle_end/flambda/parameter.ml(68):2194-2230
                      (apply (field 16 (global Stdlib__list!))
                        (function param
                          (funct-body middle_end/flambda/parameter.ml(68):2203-2223
                            (let (var =a (field 0 param))
                              (before middle_end/flambda/parameter.ml(68):2219-2222
                                var))))
                        params))))))
           (pseudo middle_end/flambda/parameter.ml(67):2167-2234
             (makeblock 0 vars)))))
    (pseudo _none_(0)<ghost>:-1--1
      (makeblock 0 wrap var rename map_var (let (let = 0a) (field 0 M)) Set
        equal hash compare output print (let (let = 0a) (field 7 M))
        (let (let = 0a) (field 8 M)) List))))
