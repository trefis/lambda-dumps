(setglobal Simple_value_approx!
  (let
    (descr =
       (function t
         (funct-body middle_end/flambda/simple_value_approx.ml(115)<ghost>:3673-3684
           (before middle_end/flambda/simple_value_approx.ml(115):3677-3684
             (field 0 t))))
     print_value_set_of_closures =
       (function ppf param
         (funct-body middle_end/flambda/simple_value_approx.ml(117)<ghost>:3718-4281
           (let
             (freshening =a (field 7 param)
              size =a (field 5 param)
              invariant_params =a (field 3 param)
              *match* =a (field 0 param)
              funs =a (field 3 *match*))
             (before middle_end/flambda/simple_value_approx.ml(119):3801-4281
               (after middle_end/flambda/simple_value_approx.ml(119):3801-4281
                 (apply (field 122 (global Stdlib__format!)) ppf
                   [0:
                    [11:
                     "(set_of_closures:"
                     [17:
                      [0: "@ " 1 0]
                      [15:
                       [11:
                        " invariant_params="
                        [15:
                         [11:
                          " freshening="
                          [15: [11: " size=" [15: [12: ')' 0a]]]]]]]]]]
                    "(set_of_closures:@ %a invariant_params=%a freshening=%a size=%a)"]
                   (function ppf
                     (funct-body middle_end/flambda/simple_value_approx.ml(121):3895-3961
                       (before middle_end/flambda/simple_value_approx.ml(121):3907-3960
                         (after middle_end/flambda/simple_value_approx.ml(121):3907-3960
                           (apply (field 11 (field 7 (global Variable!)))
                             (function id param
                               (funct-body middle_end/flambda/simple_value_approx.ml(121):3925-3960
                                 (before middle_end/flambda/simple_value_approx.ml(121):3938-3959
                                   (after middle_end/flambda/simple_value_approx.ml(121):3938-3959
                                     (apply (field 5 (global Variable!)) ppf
                                       id))))))))))
                   funs
                   (after middle_end/flambda/simple_value_approx.ml(122):3971-4010
                     (apply (field 51 (field 7 (global Variable!)))
                       (field 39 (field 6 (global Variable!)))))
                   (after middle_end/flambda/simple_value_approx.ml(122):4011-4040
                     (let
                       (lzarg = invariant_params tag =a (caml_obj_tag lzarg))
                       (if (== tag 250) (field 0 lzarg)
                         (if (== tag 246)
                           (apply (field 1 (global CamlinternalLazy!)) lzarg)
                           lzarg))))
                   (field 4 (field 13 (global Freshening!))) freshening
                   (after middle_end/flambda/simple_value_approx.ml(124):4089-4259
                     (apply (field 51 (field 7 (global Variable!)))
                       (function ppf some_size
                         (funct-body middle_end/flambda/simple_value_approx.ml(124):4109-4258
                           (before middle_end/flambda/simple_value_approx.ml(125):4138-4257
                             (if some_size
                               (let (size =a (field 0 some_size))
                                 (before middle_end/flambda/simple_value_approx.ml(127):4224-4257
                                   (after middle_end/flambda/simple_value_approx.ml(127):4224-4257
                                     (apply
                                       (field 122 (global Stdlib__format!))
                                       ppf
                                       [0:
                                        [11: "Some " [4: 0a 0a 0a 0a]]
                                        "Some %d"]
                                       size))))
                               (before middle_end/flambda/simple_value_approx.ml(126):4176-4201
                                 (after middle_end/flambda/simple_value_approx.ml(126):4176-4201
                                   (apply
                                     (field 122 (global Stdlib__format!)) ppf
                                     [0: [11: "None" 0a] "None"])))))))))
                   (after middle_end/flambda/simple_value_approx.ml(128):4264-4281
                     (let (lzarg = size tag =a (caml_obj_tag lzarg))
                       (if (== tag 250) (field 0 lzarg)
                         (if (== tag 246)
                           (apply (field 1 (global CamlinternalLazy!)) lzarg)
                           lzarg))))))))))
     print_unresolved_value =
       (function ppf param
         (funct-body middle_end/flambda/simple_value_approx.ml(130)<ghost>:4310-4506
           (switch* param
            case tag 0:
             (let (set =a (field 0 param))
               (before middle_end/flambda/simple_value_approx.ml(132):4359-4430
                 (after middle_end/flambda/simple_value_approx.ml(132):4359-4430
                   (apply (field 122 (global Stdlib__format!)) ppf
                     [0:
                      [11: "Set_of_closures_id " [15: 0a]]
                      "Set_of_closures_id %a"]
                     (field 5 (global Set_of_closures_id!)) set))))
            case tag 1:
             (let (symbol =a (field 0 param))
               (before middle_end/flambda/simple_value_approx.ml(134):4456-4506
                 (after middle_end/flambda/simple_value_approx.ml(134):4456-4506
                   (apply (field 122 (global Stdlib__format!)) ppf
                     [0: [11: "Symbol " [15: 0a]] "Symbol %a"]
                     (field 5 (global Symbol!)) symbol)))))))
     print_function_declaration =
       (function ppf var f
         (funct-body middle_end/flambda/simple_value_approx.ml(136)<ghost>:4539-5627
           (before middle_end/flambda/simple_value_approx.ml(137):4578-5627
             (let
               (param =
                  (function ppf p
                    (funct-body middle_end/flambda/simple_value_approx.ml(137)<ghost>:4588-4632
                      (before middle_end/flambda/simple_value_approx.ml(137):4596-4632
                        (after middle_end/flambda/simple_value_approx.ml(137):4596-4632
                          (apply (field 5 (global Variable!)) ppf
                            (after middle_end/flambda/simple_value_approx.ml(137):4615-4632
                              (apply (field 1 (global Parameter!)) p))))))))
               (before middle_end/flambda/simple_value_approx.ml(138):4638-5627
                 (let
                   (params =
                      (function ppf
                        (funct-body middle_end/flambda/simple_value_approx.ml(138)<ghost>:4649-4698
                          (before middle_end/flambda/simple_value_approx.ml(138):4655-4698
                            (after middle_end/flambda/simple_value_approx.ml(138):4655-4698
                              (apply (field 14 (global Stdlib__list!))
                                (after middle_end/flambda/simple_value_approx.ml(138):4665-4698
                                  (apply (field 122 (global Stdlib__format!))
                                    ppf
                                    [0: [17: [0: "@ " 1 0] [15: 0a]] "@ %a"]
                                    param))))))))
                   (before middle_end/flambda/simple_value_approx.ml(139):4704-5627
                     (let (*match* = (field 2 f))
                       (if *match*
                         (let (b =a (field 0 *match*))
                           (before middle_end/flambda/simple_value_approx.ml(144):4876-5627
                             (let
                               (stub =
                                  (if (field 2 b)
                                    (before middle_end/flambda/simple_value_approx.ml(144):4902-4911
                                      " *stub*")
                                    (before middle_end/flambda/simple_value_approx.ml(144):4917-4919
                                      "")))
                               (before middle_end/flambda/simple_value_approx.ml(145):4927-5627
                                 (let
                                   (is_a_functor =
                                      (if (field 6 b)
                                        (before middle_end/flambda/simple_value_approx.ml(145):4969-4981
                                          " *functor*")
                                        (before middle_end/flambda/simple_value_approx.ml(145):4987-4989
                                          "")))
                                   (before middle_end/flambda/simple_value_approx.ml(146):4997-5627
                                     (let
                                       (inline =
                                          (let (*match* = (field 4 b))
                                            (if (isint *match*)
                                              (switch* *match*
                                               case int 0:
                                                (before middle_end/flambda/simple_value_approx.ml(148):5061-5072
                                                  " *inline*")
                                               case int 1:
                                                (before middle_end/flambda/simple_value_approx.ml(149):5097-5114
                                                  " *never_inline*")
                                               case int 2:
                                                (before middle_end/flambda/simple_value_approx.ml(151):5173-5175
                                                  ""))
                                              (before middle_end/flambda/simple_value_approx.ml(150):5135-5146
                                                " *unroll*"))))
                                       (before middle_end/flambda/simple_value_approx.ml(153):5187-5627
                                         (let
                                           (specialise =
                                              (let (*match* = (field 5 b))
                                                (switch* *match*
                                                 case int 0:
                                                  (before middle_end/flambda/simple_value_approx.ml(155):5263-5278
                                                    " *specialise*")
                                                 case int 1:
                                                  (before middle_end/flambda/simple_value_approx.ml(156):5307-5328
                                                    " *never_specialise*")
                                                 case int 2:
                                                  (before middle_end/flambda/simple_value_approx.ml(157):5359-5361
                                                    ""))))
                                           (before middle_end/flambda/simple_value_approx.ml(159):5373-5627
                                             (let
                                               (print_body =
                                                  (function ppf param
                                                    (funct-body middle_end/flambda/simple_value_approx.ml(159)<ghost>:5388-5438
                                                      (before middle_end/flambda/simple_value_approx.ml(160):5402-5438
                                                        (after middle_end/flambda/simple_value_approx.ml(160):5402-5438
                                                          (apply
                                                            (field 122
                                                              (global Stdlib__format!))
                                                            ppf
                                                            [0:
                                                             [11:
                                                              "<Function Body>"
                                                              0a]
                                                             "<Function Body>"]))))))
                                               (before middle_end/flambda/simple_value_approx.ml(162):5450-5627
                                                 (after middle_end/flambda/simple_value_approx.ml(162):5450-5627
                                                   (apply
                                                     (field 122
                                                       (global Stdlib__format!))
                                                     ppf
                                                     [0:
                                                      [18:
                                                       [1:
                                                        [0:
                                                         [11: "<2>" 0a] "<2>"]]
                                                       [12:
                                                        '('
                                                        [15:
                                                         [2:
                                                          0a
                                                          [2:
                                                           0a
                                                           [2:
                                                            0a
                                                            [2:
                                                             0a
                                                             [17:
                                                              [0: "@ " 1 0]
                                                              [12:
                                                               '='
                                                               [17:
                                                                [0: "@ " 1 0]
                                                                [11:
                                                                 "fun"
                                                                 [18:
                                                                  [1:
                                                                   [0:
                                                                    [11:
                                                                    "<2>" 0a]
                                                                    "<2>"]]
                                                                  [15:
                                                                   [17:
                                                                    0a
                                                                    [11:
                                                                    " ->"
                                                                    [17:
                                                                    [0:
                                                                    "@ " 1 0]
                                                                    [18:
                                                                    [1:
                                                                    [0:
                                                                    [11:
                                                                    "<2>" 0a]
                                                                    "<2>"]]
                                                                    [12:
                                                                    '<'
                                                                    [15:
                                                                    [12:
                                                                    '>'
                                                                    [17:
                                                                    0a
                                                                    [12:
                                                                    ')'
                                                                    [17:
                                                                    0a
                                                                    [17:
                                                                    [0:
                                                                    "@ " 1 0]
                                                                    0a]]]]]]]]]]]]]]]]]]]]]]]]
                                                      "@[<2>(%a%s%s%s%s@ =@ fun@[<2>%a@] ->@ @[<2><%a>@])@]@ "]
                                                     (field 5
                                                       (global Variable!))
                                                     var stub is_a_functor
                                                     inline specialise params
                                                     (field 1 f) print_body
                                                     b))))))))))))))
                         (before middle_end/flambda/simple_value_approx.ml(141):4747-4839
                           (after middle_end/flambda/simple_value_approx.ml(141):4747-4839
                             (apply (field 122 (global Stdlib__format!)) ppf
                               [0:
                                [18:
                                 [1: [0: [11: "<2>" 0a] "<2>"]]
                                 [12:
                                  '('
                                  [15:
                                   [17:
                                    [0: "@ " 1 0]
                                    [12:
                                     '='
                                     [17:
                                      [0: "@ " 1 0]
                                      [11:
                                       "fun"
                                       [18:
                                        [1: [0: [11: "<2>" 0a] "<2>"]]
                                        [15:
                                         [17:
                                          0a
                                          [12:
                                           ')'
                                           [17: 0a [17: [0: "@ " 1 0] 0a]]]]]]]]]]]]]
                                "@[<2>(%a@ =@ fun@[<2>%a@])@]@ "]
                               (field 5 (global Variable!)) var params
                               (field 1 f)))))))))))))
     print_function_declarations =
       (function ppf fd
         (funct-body middle_end/flambda/simple_value_approx.ml(167)<ghost>:5661-5814
           (before middle_end/flambda/simple_value_approx.ml(168):5698-5814
             (let
               (funs =
                  (function ppf
                    (funct-body middle_end/flambda/simple_value_approx.ml(168)<ghost>:5707-5763
                      (before middle_end/flambda/simple_value_approx.ml(168):5713-5763
                        (after middle_end/flambda/simple_value_approx.ml(168):5713-5763
                          (apply (field 11 (field 7 (global Variable!)))
                            (after middle_end/flambda/simple_value_approx.ml(168):5731-5763
                              (apply print_function_declaration ppf))))))))
               (before middle_end/flambda/simple_value_approx.ml(169):5769-5814
                 (after middle_end/flambda/simple_value_approx.ml(169):5769-5814
                   (apply (field 122 (global Stdlib__format!)) ppf
                     [0:
                      [18:
                       [1: [0: [11: "<2>" 0a] "<2>"]]
                       [12: '(' [15: [12: ')' [17: 0a 0a]]]]]
                      "@[<2>(%a)@]"]
                     funs (field 3 fd)))))))))
    (letrec
      (print_descr
         (function ppf param
           (funct-body middle_end/flambda/simple_value_approx.ml(171)<ghost>:5836-7815
             (switch* param
              case int 0:
               (before middle_end/flambda/simple_value_approx.ml(185):6423-6450
                 (after middle_end/flambda/simple_value_approx.ml(185):6423-6450
                   (apply (field 122 (global Stdlib__format!)) ppf
                     [0: [11: "bottom" 0a] "bottom"])))
              case tag 0:
               (let (fields =a (field 1 param) tag =a (field 0 param))
                 (before middle_end/flambda/simple_value_approx.ml(176):6029-6187
                   (let
                     (p =
                        (function ppf fields
                          (funct-body middle_end/flambda/simple_value_approx.ml(176)<ghost>:6035-6116
                            (before middle_end/flambda/simple_value_approx.ml(177):6054-6116
                              (after middle_end/flambda/simple_value_approx.ml(177):6054-6116
                                (apply (field 12 (global Stdlib__array!))
                                  (function v
                                    (funct-body middle_end/flambda/simple_value_approx.ml(177):6065-6109
                                      (before middle_end/flambda/simple_value_approx.ml(177):6075-6108
                                        (after middle_end/flambda/simple_value_approx.ml(177):6075-6108
                                          (apply
                                            (field 122
                                              (global Stdlib__format!))
                                            ppf
                                            [0:
                                             [15: [17: [0: "@ " 1 0] 0a]]
                                             "%a@ "]
                                            print v)))))
                                  fields))))))
                     (before middle_end/flambda/simple_value_approx.ml(178):6124-6187
                       (after middle_end/flambda/simple_value_approx.ml(178):6124-6187
                         (apply (field 122 (global Stdlib__format!)) ppf
                           [0:
                            [12:
                             '['
                             [4:
                              3a 0a 0a
                              [12:
                               ':'
                               [17:
                                [0: "@ " 1 0]
                                [18:
                                 [1: [0: [11: "<1>" 0a] "<1>"]]
                                 [15: [17: 0a [12: ']' 0a]]]]]]]]
                            "[%i:@ @[<1>%a@]]"]
                           (after middle_end/flambda/simple_value_approx.ml(178):6162-6178
                             (apply (field 9 (global Tag!)) tag))
                           p fields))))))
              case tag 1:
               (let (i =a (field 0 param))
                 (before middle_end/flambda/simple_value_approx.ml(172):5870-5895
                   (after middle_end/flambda/simple_value_approx.ml(172):5870-5895
                     (apply (field 16 (global Stdlib__format!)) ppf i))))
              case tag 2:
               (let (c =a (field 0 param))
                 (before middle_end/flambda/simple_value_approx.ml(173):5916-5941
                   (after middle_end/flambda/simple_value_approx.ml(173):5916-5941
                     (apply (field 122 (global Stdlib__format!)) ppf
                       [0: [0: 0a] "%c"] c))))
              case tag 3:
               (let (i =a (field 0 param))
                 (before middle_end/flambda/simple_value_approx.ml(174):5966-5992
                   (after middle_end/flambda/simple_value_approx.ml(174):5966-5992
                     (apply (field 122 (global Stdlib__format!)) ppf
                       [0: [4: 3a 0a 0a [12: 'a' 0a]] "%ia"] i))))
              case tag 4:
               (let (*match* =a (field 0 param))
                 (if *match*
                   (let (f =a (field 0 *match*))
                     (before middle_end/flambda/simple_value_approx.ml(195):6968-6995
                       (after middle_end/flambda/simple_value_approx.ml(195):6968-6995
                         (apply (field 18 (global Stdlib__format!)) ppf f))))
                   (before middle_end/flambda/simple_value_approx.ml(196):7020-7054
                     (after middle_end/flambda/simple_value_approx.ml(196):7020-7054
                       (apply (field 12 (global Stdlib__format!)) ppf
                         "float")))))
              case tag 5:
               (let (i =a (field 1 param) t =a (field 0 param))
                 (before middle_end/flambda/simple_value_approx.ml(217):7673-7815
                   (switch* t
                    case int 0:
                     (before middle_end/flambda/simple_value_approx.ml(218):7701-7727
                       (after middle_end/flambda/simple_value_approx.ml(218):7701-7727
                         (apply (field 122 (global Stdlib__format!)) ppf
                           [0: [5: 3a 0a 0a 0a] "%li"] i)))
                    case int 1:
                     (before middle_end/flambda/simple_value_approx.ml(219):7743-7769
                       (after middle_end/flambda/simple_value_approx.ml(219):7743-7769
                         (apply (field 122 (global Stdlib__format!)) ppf
                           [0: [7: 3a 0a 0a 0a] "%Li"] i)))
                    case int 2:
                     (before middle_end/flambda/simple_value_approx.ml(220):7789-7815
                       (after middle_end/flambda/simple_value_approx.ml(220):7789-7815
                         (apply (field 122 (global Stdlib__format!)) ppf
                           [0: [6: 3a 0a 0a 0a] "%ni"] i))))))
              case tag 6:
               (let (set_of_closures =a (field 0 param))
                 (before middle_end/flambda/simple_value_approx.ml(192):6792-6839
                   (after middle_end/flambda/simple_value_approx.ml(192):6792-6839
                     (apply print_value_set_of_closures ppf set_of_closures))))
              case tag 7:
               (let
                 (*match* =a (field 0 param)
                  closure_id =a (field 1 *match*)
                  set_of_closures =a (field 0 *match*))
                 (before middle_end/flambda/simple_value_approx.ml(189):6642-6742
                   (after middle_end/flambda/simple_value_approx.ml(189):6642-6742
                     (apply (field 122 (global Stdlib__format!)) ppf
                       [0:
                        [11:
                         "(closure:"
                         [17:
                          [0: "@ " 1 0]
                          [15:
                           [11:
                            " from" [17: [0: "@ " 1 0] [15: [12: ')' 0a]]]]]]]
                        "(closure:@ %a from@ %a)"]
                       (field 5 (global Closure_id!)) closure_id print
                       set_of_closures))))
              case tag 8:
               (let
                 (*match* =a (field 0 param)
                  size =a (field 1 *match*)
                  contents =a (field 0 *match*))
                 (before middle_end/flambda/simple_value_approx.ml(197):7094-7381
                   (if contents
                     (let (s =a (field 0 contents))
                       (before middle_end/flambda/simple_value_approx.ml(202):7216-7373
                         (let
                           (s =
                              (if
                                (after middle_end/flambda/simple_value_approx.ml(203):7239-7248
                                  (apply
                                    (field 3
                                      (global Int_replace_polymorphic_compare!))
                                    size 10))
                                (before middle_end/flambda/simple_value_approx.ml(204):7266-7290
                                  (after middle_end/flambda/simple_value_approx.ml(204):7266-7290
                                    (apply (field 27 (global Stdlib!))
                                      (after middle_end/flambda/simple_value_approx.ml(204):7266-7282
                                        (apply
                                          (field 3 (global Stdlib__string!))
                                          s 0 8))
                                      "...")))
                                (before middle_end/flambda/simple_value_approx.ml(205):7308-7309
                                  s)))
                           (before middle_end/flambda/simple_value_approx.ml(207):7333-7373
                             (after middle_end/flambda/simple_value_approx.ml(207):7333-7373
                               (apply (field 122 (global Stdlib__format!))
                                 ppf
                                 [0:
                                  [11:
                                   "string "
                                   [4: 3a 0a 0a [12: ' ' [3: 0a 0a]]]]
                                  "string %i %S"]
                                 size s))))))
                     (before middle_end/flambda/simple_value_approx.ml(200):7152-7187
                       (after middle_end/flambda/simple_value_approx.ml(200):7152-7187
                         (apply (field 122 (global Stdlib__format!)) ppf
                           [0: [11: "string " [4: 3a 0a 0a 0a]] "string %i"]
                           size))))))
              case tag 9:
               (let (float_array =a (field 0 param))
                 (before middle_end/flambda/simple_value_approx.ml(210):7423-7638
                   (let (*match* = (field 0 float_array))
                     (if *match*
                       (before middle_end/flambda/simple_value_approx.ml(214):7574-7630
                         (after middle_end/flambda/simple_value_approx.ml(214):7574-7630
                           (apply (field 122 (global Stdlib__format!)) ppf
                             [0:
                              [11: "float_array_imm " [4: 3a 0a 0a 0a]]
                              "float_array_imm %i"]
                             (field 1 float_array))))
                       (before middle_end/flambda/simple_value_approx.ml(212):7495-7547
                         (after middle_end/flambda/simple_value_approx.ml(212):7495-7547
                           (apply (field 122 (global Stdlib__format!)) ppf
                             [0:
                              [11: "float_array " [4: 3a 0a 0a 0a]]
                              "float_array %i"]
                             (field 1 float_array))))))))
              case tag 10:
               (let (reason =a (field 0 param))
                 (before middle_end/flambda/simple_value_approx.ml(180):6220-6401
                   (if reason
                     (let (value =a (field 0 reason))
                       (before middle_end/flambda/simple_value_approx.ml(182):6282-6355
                         (after middle_end/flambda/simple_value_approx.ml(182):6282-6355
                           (apply (field 122 (global Stdlib__format!)) ppf
                             [0:
                              [11: "?(due to unresolved " [15: [12: ')' 0a]]]
                              "?(due to unresolved %a)"]
                             print_unresolved_value value))))
                     (before middle_end/flambda/simple_value_approx.ml(183):6371-6393
                       (after middle_end/flambda/simple_value_approx.ml(183):6371-6393
                         (apply (field 122 (global Stdlib__format!)) ppf
                           [0: [12: '?' 0a] "?"]))))))
              case tag 11:
               (let (id =a (field 0 param))
                 (before middle_end/flambda/simple_value_approx.ml(186):6474-6518
                   (after middle_end/flambda/simple_value_approx.ml(186):6474-6518
                     (apply (field 122 (global Stdlib__format!)) ppf
                       [0: [12: '_' [15: [12: '_' 0a]]] "_%a_"]
                       (field 5 (global Export_id!)) id))))
              case tag 12:
               (let (sym =a (field 0 param))
                 (before middle_end/flambda/simple_value_approx.ml(187):6543-6583
                   (after middle_end/flambda/simple_value_approx.ml(187):6543-6583
                     (apply (field 122 (global Stdlib__format!)) ppf
                       [0: [15: 0a] "%a"] (field 5 (global Symbol!)) sym))))
              case tag 13:
               (let (value =a (field 0 param))
                 (before middle_end/flambda/simple_value_approx.ml(194):6874-6939
                   (after middle_end/flambda/simple_value_approx.ml(194):6874-6939
                     (apply (field 122 (global Stdlib__format!)) ppf
                       [0:
                        [11: "(unresolved " [15: [12: ')' 0a]]]
                        "(unresolved %a)"]
                       print_unresolved_value value)))))))
        print
          (function ppf param
            (funct-body middle_end/flambda/simple_value_approx.ml(222)<ghost>:7827-8186
              (let
                (symbol =a (field 2 param)
                 var =a (field 1 param)
                 descr =a (field 0 param))
                (before middle_end/flambda/simple_value_approx.ml(223):7859-8186
                  (let
                    (print =
                       (function ppf param
                         (funct-body middle_end/flambda/simple_value_approx.ml(223)<ghost>:7869-8062
                           (if param
                             (let
                               (*match* =a (field 0 param)
                                *match* =a (field 1 *match*)
                                sym =a (field 0 *match*))
                               (if *match*
                                 (let (sym =a sym field =a (field 0 *match*))
                                   (before middle_end/flambda/simple_value_approx.ml(227):8011-8062
                                     (after middle_end/flambda/simple_value_approx.ml(227):8011-8062
                                       (apply
                                         (field 122 (global Stdlib__format!))
                                         ppf
                                         [0:
                                          [15:
                                           [11:
                                            ".(" [4: 3a 0a 0a [12: ')' 0a]]]]
                                          "%a.(%i)"]
                                         (field 5 (global Symbol!)) sym
                                         field))))
                                 (before middle_end/flambda/simple_value_approx.ml(225):7950-7970
                                   (after middle_end/flambda/simple_value_approx.ml(225):7950-7970
                                     (apply (field 5 (global Symbol!)) ppf
                                       sym)))))
                             (before middle_end/flambda/simple_value_approx.ml(224):7898-7923
                               (after middle_end/flambda/simple_value_approx.ml(224):7898-7923
                                 (apply (field 14 (global Symbol!)) ppf 0a)))))))
                    (before middle_end/flambda/simple_value_approx.ml(229):8070-8186
                      (after middle_end/flambda/simple_value_approx.ml(229):8070-8186
                        (apply (field 122 (global Stdlib__format!)) ppf
                          [0:
                           [11:
                            "{ descr="
                            [15:
                             [11:
                              " var="
                              [15: [11: " symbol=" [15: [11: " }" 0a]]]]]]]
                           "{ descr=%a var=%a symbol=%a }"]
                          print_descr descr (field 17 (global Variable!)) var
                          print symbol)))))))))
      (let
        (approx =
           (function descr
             (funct-body middle_end/flambda/simple_value_approx.ml(234)<ghost>:8199-8243
               (before middle_end/flambda/simple_value_approx.ml(234):8207-8243
                 (makeblock 0 descr 0a 0a))))
         augment_with_variable =
           (function t var
             (funct-body middle_end/flambda/simple_value_approx.ml(236)<ghost>:8271-8304
               (before middle_end/flambda/simple_value_approx.ml(236):8279-8304
                 (let (init = t)
                   (makeblock 0 (field 0 init) (makeblock 0 var)
                     (field 2 init))))))
         augment_with_symbol =
           (function t symbol
             (funct-body middle_end/flambda/simple_value_approx.ml(237)<ghost>:8329-8379
               (before middle_end/flambda/simple_value_approx.ml(237):8340-8379
                 (let (init = t)
                   (makeblock 0 (field 0 init) (field 1 init)
                     (makeblock 0 (makeblock 0 symbol 0a)))))))
         augment_with_symbol_field =
           (function t symbol field[int]
             (funct-body middle_end/flambda/simple_value_approx.ml(238)<ghost>:8410-8522
               (before middle_end/flambda/simple_value_approx.ml(239):8429-8522
                 (let (*match* = (field 2 t))
                   (if *match*
                     (before middle_end/flambda/simple_value_approx.ml(241):8521-8522
                       t)
                     (before middle_end/flambda/simple_value_approx.ml(240):8461-8506
                       (let (init = t)
                         (makeblock 0 (field 0 init) (field 1 init)
                           (makeblock 0
                             (makeblock 0 symbol (makeblock 0 (int) field)))))))))))
         replace_description =
           (function t descr
             (funct-body middle_end/flambda/simple_value_approx.ml(242)<ghost>:8547-8573
               (before middle_end/flambda/simple_value_approx.ml(242):8557-8573
                 (let (init = t)
                   (makeblock 0 descr (field 1 init) (field 2 init))))))
         augment_with_kind =
           (function t kind
             (funct-body middle_end/flambda/simple_value_approx.ml(244)<ghost>:8597-9210
               (before middle_end/flambda/simple_value_approx.ml(245):8628-9210
                 (catch
                   (if (isint kind)
                     (switch* kind
                      case int 0:
                       (before middle_end/flambda/simple_value_approx.ml(246):8659-8660
                         t)
                      case int 1:
                       (before middle_end/flambda/simple_value_approx.ml(248):8682-9199
                         (let (*match* = (field 0 t))
                           (catch
                             (catch
                               (catch
                                 (switch *match*
                                  case tag 4:
                                   (before middle_end/flambda/simple_value_approx.ml(250):8736-8737
                                     t)
                                  case tag 10: (exit 1)
                                  case tag 11: (exit 3)
                                  case tag 12: (exit 3)
                                  case tag 13: (exit 1)
                                  default: (exit 2))
                                with (1)
                                 (before middle_end/flambda/simple_value_approx.ml(252):8790-8825
                                   (let (init = t)
                                     (makeblock 0 [4: 0a] (field 1 init)
                                       (field 2 init)))))
                              with (2)
                               (before middle_end/flambda/simple_value_approx.ml(264):9081-9112
                                 (let (init = t)
                                   (makeblock 0 0a (field 1 init)
                                     (field 2 init)))))
                            with (3)
                             (before middle_end/flambda/simple_value_approx.ml(267):9190-9191
                               t))))
                      case int 2: (exit 4))
                     (exit 4))
                  with (4)
                   (before middle_end/flambda/simple_value_approx.ml(269):9209-9210
                     t)))))
         augment_kind_with_approx =
           (function t kind
             (funct-body middle_end/flambda/simple_value_approx.ml(271)<ghost>:9241-9552
               (before middle_end/flambda/simple_value_approx.ml(272):9292-9552
                 (let (*match* = (field 0 t))
                   (catch
                     (switch *match*
                      case tag 1:
                       (before middle_end/flambda/simple_value_approx.ml(274):9361-9368
                         2a)
                      case tag 4:
                       (before middle_end/flambda/simple_value_approx.ml(273):9332-9341
                         1a)
                      case tag 5:
                       (let (*match* =a (field 0 *match*))
                         (switch* *match*
                          case int 0:
                           (before middle_end/flambda/simple_value_approx.ml(275):9403-9422
                             [0: 1a])
                          case int 1:
                           (before middle_end/flambda/simple_value_approx.ml(276):9457-9476
                             [0: 2a])
                          case int 2:
                           (before middle_end/flambda/simple_value_approx.ml(277):9515-9538
                             [0: 0a])))
                      default: (exit 5))
                    with (5)
                     (before middle_end/flambda/simple_value_approx.ml(278):9548-9552
                       kind))))))
         value_unknown =
           (function reason
             (funct-body middle_end/flambda/simple_value_approx.ml(280)<ghost>:9572-9610
               (before middle_end/flambda/simple_value_approx.ml(280):9581-9610
                 (after middle_end/flambda/simple_value_approx.ml(280):9581-9610
                   (apply approx (makeblock 10 reason))))))
         value_int =
           (function i[int]
             (funct-body middle_end/flambda/simple_value_approx.ml(281)<ghost>:9625-9649
               (before middle_end/flambda/simple_value_approx.ml(281):9629-9649
                 (after middle_end/flambda/simple_value_approx.ml(281):9629-9649
                   (apply approx (makeblock 1 (int) i))))))
         value_char =
           (function i[int]
             (funct-body middle_end/flambda/simple_value_approx.ml(282)<ghost>:9665-9690
               (before middle_end/flambda/simple_value_approx.ml(282):9669-9690
                 (after middle_end/flambda/simple_value_approx.ml(282):9669-9690
                   (apply approx (makeblock 2 (int) i))))))
         value_constptr =
           (function i[int]
             (funct-body middle_end/flambda/simple_value_approx.ml(283)<ghost>:9710-9739
               (before middle_end/flambda/simple_value_approx.ml(283):9714-9739
                 (after middle_end/flambda/simple_value_approx.ml(283):9714-9739
                   (apply approx (makeblock 3 (int) i))))))
         value_float =
           (function f[float]
             (funct-body middle_end/flambda/simple_value_approx.ml(284)<ghost>:9756-9789
               (before middle_end/flambda/simple_value_approx.ml(284):9760-9789
                 (after middle_end/flambda/simple_value_approx.ml(284):9760-9789
                   (apply approx (makeblock 4 (makeblock 0 (float) f)))))))
         value_any_float =
           (after middle_end/flambda/simple_value_approx.ml(285):9812-9837
             (apply approx [4: 0a]))
         value_boxed_int =
           (function bi i
             (funct-body middle_end/flambda/simple_value_approx.ml(286)<ghost>:9858-9896
               (before middle_end/flambda/simple_value_approx.ml(286):9865-9896
                 (after middle_end/flambda/simple_value_approx.ml(286):9865-9896
                   (apply approx (makeblock 5 bi i))))))
         value_closure =
           (function closure_var set_of_closures_var set_of_closures_symbol
             value_set_of_closures closure_id
             (funct-body middle_end/flambda/simple_value_approx.ml(288)<ghost>:9916-10403
               (before middle_end/flambda/simple_value_approx.ml(290):10017-10403
                 (let
                   (approx_set_of_closures =
                      (makeblock 0 (makeblock 6 value_set_of_closures)
                        set_of_closures_var
                        (after middle_end/flambda/simple_value_approx.ml(293):10153-10205
                          (apply (field 6 (global Stdlib__option!))
                            (function s
                              (funct-body middle_end/flambda/simple_value_approx.ml(293):10164-10182
                                (before middle_end/flambda/simple_value_approx.ml(293):10174-10181
                                  (makeblock 0 s 0a))))
                            set_of_closures_symbol))))
                   (before middle_end/flambda/simple_value_approx.ml(296):10220-10403
                     (let
                       (value_closure =
                          (makeblock 0 approx_set_of_closures closure_id))
                       (before middle_end/flambda/simple_value_approx.ml(301):10319-10403
                         (makeblock 0 (makeblock 7 value_closure) closure_var
                           0a))))))))
         create_value_set_of_closures =
           (function function_decls bound_vars free_vars invariant_params
             recursive specialised_args freshening direct_call_surrogates
             (funct-body middle_end/flambda/simple_value_approx.ml(307)<ghost>:10444-11735
               (before middle_end/flambda/simple_value_approx.ml(310):10608-11735
                 (let
                   (size =
                      (makemutable 246
                        (function param
                          (let
                            (functions =
                               (after middle_end/flambda/simple_value_approx.ml(312):10652-10689
                                 (apply
                                   (field 46 (field 7 (global Variable!)))
                                   (field 3 function_decls))))
                            (before middle_end/flambda/simple_value_approx.ml(313):10699-11561
                              (after middle_end/flambda/simple_value_approx.ml(313):10699-11561
                                (apply
                                  (field 12 (field 7 (global Variable!)))
                                  (function fun_var function_decl sizes
                                    (funct-body middle_end/flambda/simple_value_approx.ml(314):10725-11514
                                      (before middle_end/flambda/simple_value_approx.ml(315):10771-11513
                                        (let
                                          (*match* = (field 2 function_decl))
                                          (if *match*
                                            (let
                                              (function_body =a
                                                 (field 0 *match*))
                                              (before middle_end/flambda/simple_value_approx.ml(318):10884-11513
                                                (let
                                                  (params =
                                                     (after middle_end/flambda/simple_value_approx.ml(318):10897-10936
                                                       (apply
                                                         (field 43
                                                           (field 5
                                                             (global Parameter!)))
                                                         (field 1
                                                           function_decl))))
                                                  (before middle_end/flambda/simple_value_approx.ml(319):10954-11513
                                                    (let
                                                      (free_vars =
                                                         (after middle_end/flambda/simple_value_approx.ml(320):10986-11105
                                                           (apply
                                                             (field 9
                                                               (field 6
                                                                 (global Variable!)))
                                                             (after middle_end/flambda/simple_value_approx.ml(321):11022-11077
                                                               (apply
                                                                 (field 9
                                                                   (field 6
                                                                    (global Variable!)))
                                                                 (field 0
                                                                   function_body)
                                                                 params))
                                                             functions)))
                                                      (before middle_end/flambda/simple_value_approx.ml(324):11137-11513
                                                        (let
                                                          (num_free_vars =[int]
                                                             (after middle_end/flambda/simple_value_approx.ml(324):11157-11188
                                                               (apply
                                                                 (field 19
                                                                   (field 6
                                                                    (global Variable!)))
                                                                 free_vars)))
                                                          (before middle_end/flambda/simple_value_approx.ml(325):11206-11513
                                                            (let
                                                              (max_size =[int]
                                                                 (after middle_end/flambda/simple_value_approx.ml(326):11237-11324
                                                                   (apply
                                                                    (field 8
                                                                    (global Inlining_cost!))
                                                                    num_free_vars)))
                                                              (before middle_end/flambda/simple_value_approx.ml(329):11356-11513
                                                                (let
                                                                  (size =
                                                                    (after middle_end/flambda/simple_value_approx.ml(330):11383-11446
                                                                    (apply
                                                                    (field 9
                                                                    (global Inlining_cost!))
                                                                    (field 7
                                                                    function_body)
                                                                    max_size)))
                                                                  (before middle_end/flambda/simple_value_approx.ml(332):11478-11513
                                                                    (after middle_end/flambda/simple_value_approx.ml(332):11478-11513
                                                                    (apply
                                                                    (field 3
                                                                    (field 7
                                                                    (global Variable!)))
                                                                    fun_var
                                                                    size
                                                                    sizes))))))))))))))
                                            (before middle_end/flambda/simple_value_approx.ml(316):10830-10835
                                              sizes))))))
                                  (field 3 function_decls)
                                  (field 0 (field 7 (global Variable!))))))))))
                   (before middle_end/flambda/simple_value_approx.ml(335):11570-11735
                     (makeblock 0 function_decls bound_vars free_vars
                       invariant_params recursive size specialised_args
                       freshening direct_call_surrogates))))))
         update_freshening_of_value_set_of_closures =
           (function value_set_of_closures freshening
             (funct-body middle_end/flambda/simple_value_approx.ml(346)<ghost>:11784-11959
               (before middle_end/flambda/simple_value_approx.ml(350):11917-11959
                 (let (init = value_set_of_closures)
                   (makeblock 0 (field 0 init) (field 1 init) (field 2 init)
                     (field 3 init) (field 4 init) (field 5 init)
                     (field 6 init) freshening (field 8 init))))))
         value_set_of_closures =
           (function set_of_closures_var value_set_of_closures
             (funct-body middle_end/flambda/simple_value_approx.ml(352)<ghost>:11987-12142
               (before middle_end/flambda/simple_value_approx.ml(353):12034-12142
                 (makeblock 0 (makeblock 6 value_set_of_closures)
                   set_of_closures_var 0a))))
         value_block =
           (function t b
             (funct-body middle_end/flambda/simple_value_approx.ml(358)<ghost>:12160-12193
               (before middle_end/flambda/simple_value_approx.ml(358):12166-12193
                 (after middle_end/flambda/simple_value_approx.ml(358):12166-12193
                   (apply approx (makeblock 0 t b))))))
         value_extern =
           (function ex
             (funct-body middle_end/flambda/simple_value_approx.ml(359)<ghost>:12211-12240
               (before middle_end/flambda/simple_value_approx.ml(359):12216-12240
                 (after middle_end/flambda/simple_value_approx.ml(359):12216-12240
                   (apply approx (makeblock 11 ex))))))
         value_symbol =
           (function sym
             (funct-body middle_end/flambda/simple_value_approx.ml(360)<ghost>:12258-12328
               (before middle_end/flambda/simple_value_approx.ml(361):12266-12328
                 (let
                   (init =
                      (after middle_end/flambda/simple_value_approx.ml(361):12268-12295
                        (apply approx (makeblock 12 sym))))
                   (makeblock 0 (field 0 init) (field 1 init)
                     (makeblock 0 (makeblock 0 sym 0a)))))))
         value_bottom =
           (after middle_end/flambda/simple_value_approx.ml(362):12348-12367
             (apply approx 0a))
         value_unresolved =
           (function value
             (funct-body middle_end/flambda/simple_value_approx.ml(363)<ghost>:12389-12428
               (before middle_end/flambda/simple_value_approx.ml(363):12397-12428
                 (after middle_end/flambda/simple_value_approx.ml(363):12397-12428
                   (apply approx (makeblock 13 value))))))
         value_string =
           (function size[int] contents
             (funct-body middle_end/flambda/simple_value_approx.ml(365)<ghost>:12447-12502
               (before middle_end/flambda/simple_value_approx.ml(365):12463-12502
                 (after middle_end/flambda/simple_value_approx.ml(365):12463-12502
                   (apply approx
                     (makeblock 8 (makeblock 0 (*,int) contents size)))))))
         value_mutable_float_array =
           (function size[int]
             (funct-body middle_end/flambda/simple_value_approx.ml(366)<ghost>:12533-12611
               (before middle_end/flambda/simple_value_approx.ml(367):12543-12611
                 (after middle_end/flambda/simple_value_approx.ml(367):12543-12611
                   (apply approx (makeblock 9 (makeblock 0 (*,int) 0a size)))))))
         value_immutable_float_array =
           (function contents
             (funct-body middle_end/flambda/simple_value_approx.ml(368)<ghost>:12644-12858
               (before middle_end/flambda/simple_value_approx.ml(369):12667-12858
                 (let (size =[int] (array.length[addr] contents))
                   (before middle_end/flambda/simple_value_approx.ml(370):12705-12858
                     (let
                       (contents =
                          (after middle_end/flambda/simple_value_approx.ml(371):12724-12783
                            (apply (field 14 (global Stdlib__array!))
                              (function t
                                (funct-body middle_end/flambda/simple_value_approx.ml(371):12734-12774
                                  (before middle_end/flambda/simple_value_approx.ml(371):12744-12773
                                    (after middle_end/flambda/simple_value_approx.ml(371):12744-12773
                                      (apply augment_with_kind t 1a)))))
                              contents)))
                       (before middle_end/flambda/simple_value_approx.ml(373):12791-12858
                         (after middle_end/flambda/simple_value_approx.ml(373):12791-12858
                           (apply approx
                             (makeblock 9
                               (makeblock 0 (*,int) (makeblock 0 contents)
                                 size)))))))))))
         name_expr_fst =
           (function param name
             (funct-body middle_end/flambda/simple_value_approx.ml(375)<ghost>:12878-12947
               (let (thing =a (field 1 param) named =a (field 0 param))
                 (before middle_end/flambda/simple_value_approx.ml(376):12903-12947
                   (makeblock 0
                     (after middle_end/flambda/simple_value_approx.ml(376):12903-12940
                       (apply (field 11 (global Flambda_utils!)) name named))
                     thing)))))
         make_const_int_named =
           (function n[int]
             (funct-body middle_end/flambda/simple_value_approx.ml(378)<ghost>:12974-13026
               (before middle_end/flambda/simple_value_approx.ml(379):13000-13026
                 (makeblock 0 (makeblock 1 (makeblock 0 (int) n))
                   (after middle_end/flambda/simple_value_approx.ml(379):13015-13026
                     (apply value_int n))))))
         make_const_int =
           (function n[int]
             (funct-body middle_end/flambda/simple_value_approx.ml(380)<ghost>:13046-13275
               (before middle_end/flambda/simple_value_approx.ml(381):13060-13275
                 (let
                   (name =
                      (if (!= n 0)
                        (if (!= n 1)
                          (before middle_end/flambda/simple_value_approx.ml(385):13190-13223
                            (field 14 (global Internal_variable_names!)))
                          (before middle_end/flambda/simple_value_approx.ml(384):13145-13178
                            (field 15 (global Internal_variable_names!))))
                        (before middle_end/flambda/simple_value_approx.ml(383):13099-13133
                          (field 22 (global Internal_variable_names!)))))
                   (before middle_end/flambda/simple_value_approx.ml(387):13231-13275
                     (after middle_end/flambda/simple_value_approx.ml(387):13231-13275
                       (apply name_expr_fst
                         (after middle_end/flambda/simple_value_approx.ml(387):13245-13269
                           (apply make_const_int_named n))
                         name)))))))
         make_const_char_named =
           (function n[int]
             (funct-body middle_end/flambda/simple_value_approx.ml(389)<ghost>:13303-13357
               (before middle_end/flambda/simple_value_approx.ml(390):13329-13357
                 (makeblock 0 (makeblock 1 (makeblock 1 (int) n))
                   (after middle_end/flambda/simple_value_approx.ml(390):13345-13357
                     (apply value_char n))))))
         make_const_char =
           (function n[int]
             (funct-body middle_end/flambda/simple_value_approx.ml(391)<ghost>:13378-13480
               (before middle_end/flambda/simple_value_approx.ml(392):13384-13480
                 (let (name = (field 11 (global Internal_variable_names!)))
                   (before middle_end/flambda/simple_value_approx.ml(393):13435-13480
                     (after middle_end/flambda/simple_value_approx.ml(393):13435-13480
                       (apply name_expr_fst
                         (after middle_end/flambda/simple_value_approx.ml(393):13449-13474
                           (apply make_const_char_named n))
                         name)))))))
         make_const_ptr_named =
           (function n[int]
             (funct-body middle_end/flambda/simple_value_approx.ml(395)<ghost>:13507-13574
               (before middle_end/flambda/simple_value_approx.ml(396):13533-13574
                 (makeblock 0 (makeblock 1 (makeblock 2 (int) n))
                   (after middle_end/flambda/simple_value_approx.ml(396):13558-13574
                     (apply value_constptr n))))))
         make_const_ptr =
           (function n[int]
             (funct-body middle_end/flambda/simple_value_approx.ml(397)<ghost>:13594-13831
               (before middle_end/flambda/simple_value_approx.ml(398):13608-13831
                 (let
                   (name =
                      (if (!= n 0)
                        (if (!= n 1)
                          (before middle_end/flambda/simple_value_approx.ml(402):13746-13779
                            (field 16 (global Internal_variable_names!)))
                          (before middle_end/flambda/simple_value_approx.ml(401):13697-13734
                            (field 17 (global Internal_variable_names!))))
                        (before middle_end/flambda/simple_value_approx.ml(400):13647-13685
                          (field 18 (global Internal_variable_names!)))))
                   (before middle_end/flambda/simple_value_approx.ml(404):13787-13831
                     (after middle_end/flambda/simple_value_approx.ml(404):13787-13831
                       (apply name_expr_fst
                         (after middle_end/flambda/simple_value_approx.ml(404):13801-13825
                           (apply make_const_ptr_named n))
                         name)))))))
         make_const_bool_named =
           (function b
             (funct-body middle_end/flambda/simple_value_approx.ml(406)<ghost>:13859-13926
               (before middle_end/flambda/simple_value_approx.ml(407):13885-13926
                 (after middle_end/flambda/simple_value_approx.ml(407):13885-13926
                   (apply make_const_ptr_named
                     (if b
                       (before middle_end/flambda/simple_value_approx.ml(407):13917-13918
                         1)
                       (before middle_end/flambda/simple_value_approx.ml(407):13924-13925
                         0)))))))
         make_const_bool =
           (function b
             (funct-body middle_end/flambda/simple_value_approx.ml(408)<ghost>:13947-14037
               (before middle_end/flambda/simple_value_approx.ml(409):13953-14037
                 (after middle_end/flambda/simple_value_approx.ml(409):13953-14037
                   (apply name_expr_fst
                     (after middle_end/flambda/simple_value_approx.ml(409):13967-13992
                       (apply make_const_bool_named b))
                     (field 9 (global Internal_variable_names!)))))))
         make_const_float_named =
           (function f[float]
             (funct-body middle_end/flambda/simple_value_approx.ml(412)<ghost>:14066-14132
               (before middle_end/flambda/simple_value_approx.ml(413):14092-14132
                 (makeblock 0 (makeblock 2 (makeblock 0 (float) f))
                   (after middle_end/flambda/simple_value_approx.ml(413):14119-14132
                     (apply value_float f))))))
         make_const_float =
           (function f[float]
             (funct-body middle_end/flambda/simple_value_approx.ml(414)<ghost>:14154-14246
               (before middle_end/flambda/simple_value_approx.ml(415):14160-14246
                 (after middle_end/flambda/simple_value_approx.ml(415):14160-14246
                   (apply name_expr_fst
                     (after middle_end/flambda/simple_value_approx.ml(415):14174-14200
                       (apply make_const_float_named f))
                     (field 13 (global Internal_variable_names!)))))))
         make_const_boxed_int_named =
           (function t i
             (funct-body middle_end/flambda/simple_value_approx.ml(418):14279-14510
               (before middle_end/flambda/simple_value_approx.ml(420):14343-14510
                 (let
                   (c =
                      (switch* t
                       case int 0:
                        (before middle_end/flambda/simple_value_approx.ml(422):14403-14410
                          (makeblock 1 (int32) i))
                       case int 1:
                        (before middle_end/flambda/simple_value_approx.ml(423):14426-14433
                          (makeblock 2 (int64) i))
                       case int 2:
                        (before middle_end/flambda/simple_value_approx.ml(424):14453-14464
                          (makeblock 3 (nativeint) i))))
                   (before middle_end/flambda/simple_value_approx.ml(426):14472-14510
                     (makeblock 0 (makeblock 2 c)
                       (after middle_end/flambda/simple_value_approx.ml(426):14491-14510
                         (apply value_boxed_int t i))))))))
         make_const_boxed_int =
           (function t i
             (funct-body middle_end/flambda/simple_value_approx.ml(427)<ghost>:14536-14640
               (before middle_end/flambda/simple_value_approx.ml(428):14544-14640
                 (after middle_end/flambda/simple_value_approx.ml(428):14544-14640
                   (apply name_expr_fst
                     (after middle_end/flambda/simple_value_approx.ml(428):14558-14590
                       (apply make_const_boxed_int_named t i))
                     (field 10 (global Internal_variable_names!)))))))
         simplify =
           (function t lam
             (funct-body middle_end/flambda/simple_value_approx.ml(438)<ghost>:14868-15919
               (before middle_end/flambda/simple_value_approx.ml(439):14916-15919
                 (if
                   (after middle_end/flambda/simple_value_approx.ml(439):14919-14949
                     (apply (field 0 (global Effect_analysis!)) lam))
                   (before middle_end/flambda/simple_value_approx.ml(440):14959-15887
                     (let (*match* = (field 0 t))
                       (catch
                         (switch *match*
                          case tag 1:
                           (let (n =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(442):15005-15079
                               (let
                                 (*match* =
                                    (after middle_end/flambda/simple_value_approx.ml(442):15025-15041
                                      (apply make_const_int n))
                                  approx =a (field 1 *match*)
                                  const =a (field 0 *match*))
                                 (before middle_end/flambda/simple_value_approx.ml(443):15051-15079
                                   (makeblock 0 const 1a approx)))))
                          case tag 2:
                           (let (n =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(445):15108-15183
                               (let
                                 (*match* =
                                    (after middle_end/flambda/simple_value_approx.ml(445):15128-15145
                                      (apply make_const_char n))
                                  approx =a (field 1 *match*)
                                  const =a (field 0 *match*))
                                 (before middle_end/flambda/simple_value_approx.ml(446):15155-15183
                                   (makeblock 0 const 1a approx)))))
                          case tag 3:
                           (let (n =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(448):15216-15290
                               (let
                                 (*match* =
                                    (after middle_end/flambda/simple_value_approx.ml(448):15236-15252
                                      (apply make_const_ptr n))
                                  approx =a (field 1 *match*)
                                  const =a (field 0 *match*))
                                 (before middle_end/flambda/simple_value_approx.ml(449):15262-15290
                                   (makeblock 0 const 1a approx)))))
                          case tag 4:
                           (let (*match* =a (field 0 *match*))
                             (if *match*
                               (let (f =a (field 0 *match*))
                                 (before middle_end/flambda/simple_value_approx.ml(451):15327-15403
                                   (let
                                     (*match* =
                                        (after middle_end/flambda/simple_value_approx.ml(451):15347-15365
                                          (apply make_const_float f))
                                      approx =a (field 1 *match*)
                                      const =a (field 0 *match*))
                                     (before middle_end/flambda/simple_value_approx.ml(452):15375-15403
                                       (makeblock 0 const 1a approx)))))
                               (exit 23)))
                          case tag 5:
                           (let
                             (i =a (field 1 *match*) t =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(454):15442-15524
                               (let
                                 (*match* =
                                    (after middle_end/flambda/simple_value_approx.ml(454):15462-15486
                                      (apply make_const_boxed_int t i))
                                  approx =a (field 1 *match*)
                                  const =a (field 0 *match*))
                                 (before middle_end/flambda/simple_value_approx.ml(455):15496-15524
                                   (makeblock 0 const 1a approx)))))
                          case tag 12:
                           (let (sym =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(457):15557-15656
                               (let
                                 (name =
                                    (field 65
                                      (global Internal_variable_names!)))
                                 (before middle_end/flambda/simple_value_approx.ml(458):15608-15656
                                   (makeblock 0
                                     (after middle_end/flambda/simple_value_approx.ml(458):15608-15638
                                       (apply
                                         (field 11 (global Flambda_utils!))
                                         name (makeblock 0 sym)))
                                     1a t)))))
                          default: (exit 23))
                        with (23)
                         (before middle_end/flambda/simple_value_approx.ml(462):15867-15887
                           (makeblock 0 lam 0a t)))))
                   (before middle_end/flambda/simple_value_approx.ml(464):15899-15919
                     (makeblock 0 lam 0a t))))))
         simplify_named =
           (function t named
             (funct-body middle_end/flambda/simple_value_approx.ml(466)<ghost>:15940-16974
               (before middle_end/flambda/simple_value_approx.ml(467):16000-16974
                 (if
                   (after middle_end/flambda/simple_value_approx.ml(467):16003-16041
                     (apply (field 1 (global Effect_analysis!)) named))
                   (before middle_end/flambda/simple_value_approx.ml(468):16051-16940
                     (let (*match* = (field 0 t))
                       (catch
                         (switch *match*
                          case tag 1:
                           (let (n =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(470):16097-16177
                               (let
                                 (*match* =
                                    (after middle_end/flambda/simple_value_approx.ml(470):16117-16139
                                      (apply make_const_int_named n))
                                  approx =a (field 1 *match*)
                                  const =a (field 0 *match*))
                                 (before middle_end/flambda/simple_value_approx.ml(471):16149-16177
                                   (makeblock 0 const 1a approx)))))
                          case tag 2:
                           (let (n =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(473):16206-16287
                               (let
                                 (*match* =
                                    (after middle_end/flambda/simple_value_approx.ml(473):16226-16249
                                      (apply make_const_char_named n))
                                  approx =a (field 1 *match*)
                                  const =a (field 0 *match*))
                                 (before middle_end/flambda/simple_value_approx.ml(474):16259-16287
                                   (makeblock 0 const 1a approx)))))
                          case tag 3:
                           (let (n =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(476):16320-16400
                               (let
                                 (*match* =
                                    (after middle_end/flambda/simple_value_approx.ml(476):16340-16362
                                      (apply make_const_ptr_named n))
                                  approx =a (field 1 *match*)
                                  const =a (field 0 *match*))
                                 (before middle_end/flambda/simple_value_approx.ml(477):16372-16400
                                   (makeblock 0 const 1a approx)))))
                          case tag 4:
                           (let (*match* =a (field 0 *match*))
                             (if *match*
                               (let (f =a (field 0 *match*))
                                 (before middle_end/flambda/simple_value_approx.ml(479):16437-16519
                                   (let
                                     (*match* =
                                        (after middle_end/flambda/simple_value_approx.ml(479):16457-16481
                                          (apply make_const_float_named f))
                                      approx =a (field 1 *match*)
                                      const =a (field 0 *match*))
                                     (before middle_end/flambda/simple_value_approx.ml(480):16491-16519
                                       (makeblock 0 const 1a approx)))))
                               (exit 39)))
                          case tag 5:
                           (let
                             (i =a (field 1 *match*) t =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(482):16558-16646
                               (let
                                 (*match* =
                                    (after middle_end/flambda/simple_value_approx.ml(482):16578-16608
                                      (apply make_const_boxed_int_named t i))
                                  approx =a (field 1 *match*)
                                  const =a (field 0 *match*))
                                 (before middle_end/flambda/simple_value_approx.ml(483):16618-16646
                                   (makeblock 0 const 1a approx)))))
                          case tag 12:
                           (let (sym =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(485):16679-16707
                               (makeblock 0 (makeblock 0 sym) 1a t)))
                          default: (exit 39))
                        with (39)
                         (before middle_end/flambda/simple_value_approx.ml(489):16918-16940
                           (makeblock 0 named 0a t)))))
                   (before middle_end/flambda/simple_value_approx.ml(491):16952-16974
                     (makeblock 0 named 0a t))))))
         simplify_var =
           (function t
             (funct-body middle_end/flambda/simple_value_approx.ml(495)<ghost>:17104-17847
               (before middle_end/flambda/simple_value_approx.ml(496):17139-17847
                 (let (*match* = (field 0 t))
                   (catch
                     (switch *match*
                      case tag 1:
                       (let (n =a (field 0 *match*))
                         (before middle_end/flambda/simple_value_approx.ml(497):17177-17206
                           (makeblock 0
                             (after middle_end/flambda/simple_value_approx.ml(497):17182-17206
                               (apply make_const_int_named n)))))
                      case tag 2:
                       (let (n =a (field 0 *match*))
                         (before middle_end/flambda/simple_value_approx.ml(498):17227-17257
                           (makeblock 0
                             (after middle_end/flambda/simple_value_approx.ml(498):17232-17257
                               (apply make_const_char_named n)))))
                      case tag 3:
                       (let (n =a (field 0 *match*))
                         (before middle_end/flambda/simple_value_approx.ml(499):17282-17311
                           (makeblock 0
                             (after middle_end/flambda/simple_value_approx.ml(499):17287-17311
                               (apply make_const_ptr_named n)))))
                      case tag 4:
                       (let (*match* =a (field 0 *match*))
                         (if *match*
                           (let (f =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(500):17340-17371
                               (makeblock 0
                                 (after middle_end/flambda/simple_value_approx.ml(500):17345-17371
                                   (apply make_const_float_named f)))))
                           (exit 40)))
                      case tag 5:
                       (let (i =a (field 1 *match*) t =a (field 0 *match*))
                         (before middle_end/flambda/simple_value_approx.ml(501):17402-17439
                           (makeblock 0
                             (after middle_end/flambda/simple_value_approx.ml(501):17407-17439
                               (apply make_const_boxed_int_named t i)))))
                      case tag 12:
                       (let (sym =a (field 0 *match*))
                         (before middle_end/flambda/simple_value_approx.ml(502):17464-17484
                           (makeblock 0 (makeblock 0 (makeblock 0 sym) t))))
                      default: (exit 40))
                    with (40)
                     (before middle_end/flambda/simple_value_approx.ml(507):17689-17847
                       (let (*match* = (field 2 t))
                         (if *match*
                           (let
                             (*match* =a (field 0 *match*)
                              *match* =a (field 1 *match*)
                              sym =a (field 0 *match*))
                             (if *match*
                               (let (sym =a sym field =a (field 0 *match*))
                                 (before middle_end/flambda/simple_value_approx.ml(509):17788-17828
                                   (makeblock 0
                                     (makeblock 0
                                       (makeblock 4 (*,int) sym field) t))))
                               (before middle_end/flambda/simple_value_approx.ml(508):17735-17755
                                 (makeblock 0
                                   (makeblock 0 (makeblock 0 sym) t)))))
                           (before middle_end/flambda/simple_value_approx.ml(510):17843-17847
                             0a)))))))))
         join_summaries =
           (function summary replaced_by_var_or_symbol
             (funct-body middle_end/flambda/simple_value_approx.ml(512)<ghost>:17868-18081
               (before middle_end/flambda/simple_value_approx.ml(513):17907-18081
                 (let (*match* = replaced_by_var_or_symbol *match* = summary)
                   (catch
                     (if *match* (exit 41)
                       (if *match* (exit 41)
                         (before middle_end/flambda/simple_value_approx.ml(517):18069-18081
                           0a)))
                    with (41)
                     (before middle_end/flambda/simple_value_approx.ml(516):18028-18041
                       1a))))))
         simplify_using_env =
           (function t is_present_in_env flam
             (funct-body middle_end/flambda/simple_value_approx.ml(519)<ghost>:18106-18736
               (before middle_end/flambda/simple_value_approx.ml(520):18136-18736
                 (catch
                   (let (*match* = (field 1 t))
                     (catch
                       (if *match*
                         (let (var =a (field 0 *match*))
                           (before middle_end/flambda/simple_value_approx.ml(522):18215-18236
                             (if
                               (after middle_end/flambda/simple_value_approx.ml(522):18215-18236
                                 (apply is_present_in_env var))
                               (before middle_end/flambda/simple_value_approx.ml(522):18240-18261
                                 (let
                                   (flam = (makeblock 0 var)
                                    replaced_by_var_or_symbol = 1a)
                                   (exit 46 flam replaced_by_var_or_symbol)))
                               (exit 45))))
                         (exit 45))
                      with (45)
                       (before middle_end/flambda/simple_value_approx.ml(524):18279-18614
                         (let (*match* = (field 2 t))
                           (if *match*
                             (let
                               (*match* =a (field 0 *match*)
                                *match* =a (field 1 *match*)
                                sym =a (field 0 *match*))
                               (if *match*
                                 (let (sym =a sym field =a (field 0 *match*))
                                   (before middle_end/flambda/simple_value_approx.ml(529):18469-18586
                                     (let
                                       (name =
                                          (field 66
                                            (global Internal_variable_names!)))
                                       (before middle_end/flambda/simple_value_approx.ml(530):18528-18586
                                         (let
                                           (flam =
                                              (after middle_end/flambda/simple_value_approx.ml(530):18535-18585
                                                (apply
                                                  (field 11
                                                    (global Flambda_utils!))
                                                  name
                                                  (makeblock 4 (*,int) sym
                                                    field)))
                                            replaced_by_var_or_symbol = 1a)
                                           (exit 46 flam
                                             replaced_by_var_or_symbol))))))
                                 (before middle_end/flambda/simple_value_approx.ml(526):18335-18426
                                   (let
                                     (name =
                                        (field 65
                                          (global Internal_variable_names!)))
                                     (before middle_end/flambda/simple_value_approx.ml(527):18388-18426
                                       (let
                                         (flam =
                                            (after middle_end/flambda/simple_value_approx.ml(527):18395-18425
                                              (apply
                                                (field 11
                                                  (global Flambda_utils!))
                                                name (makeblock 0 sym)))
                                          replaced_by_var_or_symbol = 1a)
                                         (exit 46 flam
                                           replaced_by_var_or_symbol)))))))
                             (before middle_end/flambda/simple_value_approx.ml(531):18603-18614
                               (let
                                 (flam =a flam
                                  replaced_by_var_or_symbol = 0a)
                                 (exit 46 flam replaced_by_var_or_symbol))))))))
                  with (46 flam replaced_by_var_or_symbol)
                   (before middle_end/flambda/simple_value_approx.ml(533):18622-18736
                     (let
                       (*match* =
                          (after middle_end/flambda/simple_value_approx.ml(533):18651-18666
                            (apply simplify t flam))
                        approx =a (field 2 *match*)
                        summary =a (field 1 *match*)
                        const =a (field 0 *match*))
                       (before middle_end/flambda/simple_value_approx.ml(534):18672-18736
                         (makeblock 0 const
                           (after middle_end/flambda/simple_value_approx.ml(534):18679-18728
                             (apply join_summaries summary
                               replaced_by_var_or_symbol))
                           approx))))))))
         simplify_named_using_env =
           (function t is_present_in_env named
             (funct-body middle_end/flambda/simple_value_approx.ml(536)<ghost>:18767-19288
               (before middle_end/flambda/simple_value_approx.ml(537):18798-19288
                 (catch
                   (let (*match* = (field 1 t))
                     (catch
                       (if *match*
                         (let (var =a (field 0 *match*))
                           (before middle_end/flambda/simple_value_approx.ml(539):18878-18899
                             (if
                               (after middle_end/flambda/simple_value_approx.ml(539):18878-18899
                                 (apply is_present_in_env var))
                               (before middle_end/flambda/simple_value_approx.ml(540):18909-18937
                                 (let
                                   (named = (makeblock 10 (makeblock 0 var))
                                    replaced_by_var_or_symbol = 1a)
                                   (exit 59 named replaced_by_var_or_symbol)))
                               (exit 58))))
                         (exit 58))
                      with (58)
                       (before middle_end/flambda/simple_value_approx.ml(542):18955-19159
                         (let (*match* = (field 2 t))
                           (if *match*
                             (let
                               (*match* =a (field 0 *match*)
                                *match* =a (field 1 *match*)
                                sym =a (field 0 *match*))
                               (if *match*
                                 (let (sym =a sym field =a (field 0 *match*))
                                   (before middle_end/flambda/simple_value_approx.ml(545):19086-19130
                                     (let
                                       (named =
                                          (makeblock 4 (*,int) sym field)
                                        replaced_by_var_or_symbol = 1a)
                                       (exit 59 named
                                         replaced_by_var_or_symbol))))
                                 (before middle_end/flambda/simple_value_approx.ml(543):19003-19043
                                   (let
                                     (named = (makeblock 0 sym)
                                      replaced_by_var_or_symbol = 1a)
                                     (exit 59 named
                                       replaced_by_var_or_symbol)))))
                             (before middle_end/flambda/simple_value_approx.ml(546):19147-19159
                               (let
                                 (named =a named
                                  replaced_by_var_or_symbol = 0a)
                                 (exit 59 named replaced_by_var_or_symbol))))))))
                  with (59 named replaced_by_var_or_symbol)
                   (before middle_end/flambda/simple_value_approx.ml(548):19167-19288
                     (let
                       (*match* =
                          (after middle_end/flambda/simple_value_approx.ml(548):19196-19218
                            (apply simplify_named t named))
                        approx =a (field 2 *match*)
                        summary =a (field 1 *match*)
                        const =a (field 0 *match*))
                       (before middle_end/flambda/simple_value_approx.ml(549):19224-19288
                         (makeblock 0 const
                           (after middle_end/flambda/simple_value_approx.ml(549):19231-19280
                             (apply join_summaries summary
                               replaced_by_var_or_symbol))
                           approx))))))))
         simplify_var_to_var_using_env =
           (function t is_present_in_env
             (funct-body middle_end/flambda/simple_value_approx.ml(551)<ghost>:19324-19431
               (before middle_end/flambda/simple_value_approx.ml(552):19349-19431
                 (let (*match* = (field 1 t))
                   (catch
                     (if *match*
                       (let (var =a (field 0 *match*))
                         (before middle_end/flambda/simple_value_approx.ml(553):19384-19405
                           (if
                             (after middle_end/flambda/simple_value_approx.ml(553):19384-19405
                               (apply is_present_in_env var))
                             (before middle_end/flambda/simple_value_approx.ml(553):19409-19417
                               (makeblock 0 var))
                             (exit 68))))
                       (exit 68))
                    with (68)
                     (before middle_end/flambda/simple_value_approx.ml(554):19427-19431
                       0a))))))
         known =
           (function t
             (funct-body middle_end/flambda/simple_value_approx.ml(556)<ghost>:19443-19767
               (before middle_end/flambda/simple_value_approx.ml(557):19449-19767
                 (let (*match* = (field 0 t))
                   (catch
                     (catch
                       (switch *match*
                        case tag 10: (exit 69)
                        case tag 13: (exit 69)
                        default: (exit 70))
                      with (69)
                       (before middle_end/flambda/simple_value_approx.ml(559):19514-19519
                         0a))
                    with (70)
                     (before middle_end/flambda/simple_value_approx.ml(563):19763-19767
                       1a))))))
         useful =
           (function t
             (funct-body middle_end/flambda/simple_value_approx.ml(565)<ghost>:19780-20102
               (before middle_end/flambda/simple_value_approx.ml(566):19786-20102
                 (let (*match* = (field 0 t))
                   (catch
                     (switch *match*
                      case int 0: (exit 71)
                      case tag 10: (exit 71)
                      case tag 13: (exit 71)
                      default:
                       (before middle_end/flambda/simple_value_approx.ml(571):20098-20102
                         1a))
                    with (71)
                     (before middle_end/flambda/simple_value_approx.ml(567):19864-19869
                       0a))))))
         all_not_useful =
           (function ts
             (funct-body middle_end/flambda/simple_value_approx.ml(573)<ghost>:20123-20169
               (before middle_end/flambda/simple_value_approx.ml(573):20128-20169
                 (after middle_end/flambda/simple_value_approx.ml(573):20128-20169
                   (apply (field 27 (global Stdlib__list!))
                     (function t
                       (funct-body middle_end/flambda/simple_value_approx.ml(573):20141-20166
                         (before middle_end/flambda/simple_value_approx.ml(573):20151-20165
                           (not
                             (after middle_end/flambda/simple_value_approx.ml(573):20155-20165
                               (apply useful t))))))
                     ts)))))
         warn_on_mutation =
           (function t
             (funct-body middle_end/flambda/simple_value_approx.ml(575)<ghost>:20192-20627
               (before middle_end/flambda/simple_value_approx.ml(576):20198-20627
                 (let (*match* = (field 0 t))
                   (catch
                     (catch
                       (catch
                         (switch *match*
                          case int 0: (exit 74)
                          case tag 0:
                           (let (fields =a (field 1 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(577):20247-20270
                               (after middle_end/flambda/simple_value_approx.ml(577):20247-20270
                                 (apply
                                   (field 3
                                     (global Int_replace_polymorphic_compare!))
                                   (array.length[addr] fields) 0))))
                          case tag 8:
                           (let
                             (*match* =a (field 0 *match*)
                              *match* =a (field 0 *match*))
                             (if *match* (exit 73) (exit 74)))
                          case tag 9: (exit 74)
                          case tag 10: (exit 74)
                          case tag 11: (exit 75)
                          case tag 12: (exit 75)
                          case tag 13: (exit 74)
                          default: (exit 73))
                        with (73)
                         (before middle_end/flambda/simple_value_approx.ml(581):20447-20451
                           1a))
                      with (74)
                       (before middle_end/flambda/simple_value_approx.ml(583):20570-20575
                         0a))
                    with (75)
                     (before middle_end/flambda/simple_value_approx.ml(584):20615-20627
                       (raise
                         (after middle_end/flambda/simple_value_approx.ml(584):20615-20627
                           (makeblock 0 (global Assert_failure!)
                             [0:
                              "middle_end/flambda/simple_value_approx.ml" 584
                              39])))))))))
         get_field =
           (function t i[int]
             (funct-body middle_end/flambda/simple_value_approx.ml(590)<ghost>:20696-22511
               (before middle_end/flambda/simple_value_approx.ml(591):20736-22511
                 (let (*match* = (field 0 t))
                   (catch
                     (catch
                       (catch
                         (switch *match*
                          case tag 0:
                           (let (fields =a (field 1 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(593):20793-21115
                               (if
                                 (&&
                                   (after middle_end/flambda/simple_value_approx.ml(593):20796-20802
                                     (apply
                                       (field 5
                                         (global Int_replace_polymorphic_compare!))
                                       i 0))
                                   (after middle_end/flambda/simple_value_approx.ml(593):20806-20829
                                     (apply
                                       (field 2
                                         (global Int_replace_polymorphic_compare!))
                                       i (array.length[addr] fields))))
                                 (before middle_end/flambda/simple_value_approx.ml(593):20835-20868
                                   (makeblock 0
                                     (after middle_end/flambda/simple_value_approx.ml(594):20850-20860
                                       (array.get[addr] fields i))))
                                 (before middle_end/flambda/simple_value_approx.ml(595):20874-21115
                                   0a))))
                          case tag 4: (exit 77)
                          case tag 5: (exit 77)
                          case tag 6: (exit 78)
                          case tag 7: (exit 78)
                          case tag 8: (exit 77)
                          case tag 9:
                           (before middle_end/flambda/simple_value_approx.ml(615):21892-21916
                             (makeblock 0
                               (after middle_end/flambda/simple_value_approx.ml(615):21895-21916
                                 (apply value_unknown 0a))))
                          case tag 10:
                           (let (reason =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(625):22271-22296
                               (makeblock 0
                                 (after middle_end/flambda/simple_value_approx.ml(625):22274-22296
                                   (apply value_unknown reason)))))
                          case tag 11: (exit 78)
                          case tag 12: (exit 78)
                          case tag 13:
                           (let (value =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(629):22468-22511
                               (makeblock 0
                                 (after middle_end/flambda/simple_value_approx.ml(629):22471-22511
                                   (apply value_unknown (makeblock 0 value))))))
                          default: (exit 76))
                        with (76)
                         (before middle_end/flambda/simple_value_approx.ml(608):21522-21537
                           (makeblock 0 value_bottom)))
                      with (77)
                       (before middle_end/flambda/simple_value_approx.ml(618):22025-22036
                         0a))
                    with (78)
                     (before middle_end/flambda/simple_value_approx.ml(623):22214-22238
                       (makeblock 0
                         (after middle_end/flambda/simple_value_approx.ml(623):22217-22238
                           (apply value_unknown 0a)))))))))
         check_approx_for_block =
           (function t
             (funct-body middle_end/flambda/simple_value_approx.ml(635)<ghost>:22609-22971
               (before middle_end/flambda/simple_value_approx.ml(636):22615-22971
                 (let (*match* = (field 0 t))
                   (catch
                     (switch *match*
                      case tag 0:
                       (let
                         (fields =a (field 1 *match*)
                          tag =a (field 0 *match*))
                         (before middle_end/flambda/simple_value_approx.ml(638):22671-22687
                           (makeblock 0 tag fields)))
                      default: (exit 79))
                    with (79)
                     (before middle_end/flambda/simple_value_approx.ml(647):22966-22971
                       0a))))))
         descrs =
           (function approxs
             (funct-body middle_end/flambda/simple_value_approx.ml(649)<ghost>:22984-23029
               (before middle_end/flambda/simple_value_approx.ml(649):22994-23029
                 (after middle_end/flambda/simple_value_approx.ml(649):22994-23029
                   (apply (field 16 (global Stdlib__list!))
                     (function v
                       (funct-body middle_end/flambda/simple_value_approx.ml(649):23003-23021
                         (before middle_end/flambda/simple_value_approx.ml(649):23013-23020
                           (field 0 v))))
                     approxs)))))
         equal_boxed_int =
           (function bi1 i1 bi2 i2
             (funct-body middle_end/flambda/simple_value_approx.ml(651):23051-23297
               (before middle_end/flambda/simple_value_approx.ml(654):23137-23297
                 (let (*match* = bi1 *match* = bi2)
                   (catch
                     (switch* *match*
                      case int 0:
                       (if *match* (exit 80)
                         (before middle_end/flambda/simple_value_approx.ml(655):23177-23194
                           (after middle_end/flambda/simple_value_approx.ml(655):23177-23194
                             (apply (field 16 (global Stdlib__int32!)) i1 i2))))
                      case int 1:
                       (if (!= *match* 1) (exit 80)
                         (before middle_end/flambda/simple_value_approx.ml(656):23215-23232
                           (after middle_end/flambda/simple_value_approx.ml(656):23215-23232
                             (apply (field 16 (global Stdlib__int64!)) i1 i2))))
                      case int 2:
                       (if (>= *match* 2)
                         (before middle_end/flambda/simple_value_approx.ml(657):23261-23282
                           (after middle_end/flambda/simple_value_approx.ml(657):23261-23282
                             (apply (field 17 (global Stdlib__nativeint!)) i1
                               i2)))
                         (exit 80)))
                    with (80)
                     (before middle_end/flambda/simple_value_approx.ml(658):23292-23297
                       0a))))))
         equal_floats =
           (function f1 f2
             (funct-body middle_end/flambda/simple_value_approx.ml(660)<ghost>:23316-23472
               (before middle_end/flambda/simple_value_approx.ml(661):23326-23472
                 (let (*match* = f1 *match* = f2)
                   (catch
                     (if *match*
                       (if *match*
                         (let
                           (f2 =a (field 0 *match*) f1 =a (field 0 *match*))
                           (before middle_end/flambda/simple_value_approx.ml(664):23432-23472
                             (after middle_end/flambda/simple_value_approx.ml(664):23432-23472
                               (apply
                                 (field 0
                                   (global Int_replace_polymorphic_compare!))
                                 (after middle_end/flambda/simple_value_approx.ml(664):23432-23468
                                   (apply (field 0 (global Allocated_const!))
                                     f1 f2))
                                 0))))
                         (exit 81))
                       (if *match* (exit 81)
                         (before middle_end/flambda/simple_value_approx.ml(662):23362-23366
                           1a)))
                    with (81)
                     (before middle_end/flambda/simple_value_approx.ml(663):23402-23407
                       0a)))))))
        (letrec
          (meet_descr
             (function really_import_approx d1 d2
               (funct-body middle_end/flambda/simple_value_approx.ml(687)<ghost>:24086-24852
                 (before middle_end/flambda/simple_value_approx.ml(687):24116-24852
                   (let (*match* = d1 *match* = d2)
                     (catch
                       (switch *match*
                        case tag 0:
                         (switch *match*
                          case tag 0:
                           (let
                             (a2 =a (field 1 *match*)
                              tag2 =a (field 0 *match*)
                              a1 =a (field 1 *match*)
                              tag1 =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(702):24634-24696
                               (if
                                 (&&
                                   (after middle_end/flambda/simple_value_approx.ml(702):24634-24659
                                     (apply
                                       (field 0
                                         (global Int_replace_polymorphic_compare!))
                                       (after middle_end/flambda/simple_value_approx.ml(702):24634-24655
                                         (apply (field 12 (global Tag!)) tag1
                                           tag2))
                                       0))
                                   (after middle_end/flambda/simple_value_approx.ml(702):24663-24696
                                     (apply
                                       (field 0
                                         (global Int_replace_polymorphic_compare!))
                                       (array.length[addr] a1)
                                       (array.length[addr] a2))))
                                 (before middle_end/flambda/simple_value_approx.ml(703):24704-24823
                                   (let
                                     (fields =
                                        (after middle_end/flambda/simple_value_approx.ml(704):24723-24785
                                          (apply
                                            (field 15
                                              (global Stdlib__array!))
                                            (function i[int] v
                                              (funct-body middle_end/flambda/simple_value_approx.ml(704):24734-24782
                                                (before middle_end/flambda/simple_value_approx.ml(704):24746-24781
                                                  (after middle_end/flambda/simple_value_approx.ml(704):24746-24781
                                                    (apply meet
                                                      really_import_approx v
                                                      (after middle_end/flambda/simple_value_approx.ml(704):24775-24781
                                                        (array.get[addr] a2
                                                          i)))))))
                                            a1)))
                                     (before middle_end/flambda/simple_value_approx.ml(706):24797-24823
                                       (makeblock 0 tag1 fields))))
                                 (exit 82))))
                          default: (exit 82))
                        case tag 1:
                         (switch *match*
                          case tag 1:
                           (let
                             (j =a (field 0 *match*) i =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(688):24168-24173
                               (if
                                 (after middle_end/flambda/simple_value_approx.ml(688):24168-24173
                                   (apply
                                     (field 0
                                       (global Int_replace_polymorphic_compare!))
                                     i j))
                                 (before middle_end/flambda/simple_value_approx.ml(689):24183-24185
                                   d1)
                                 (exit 82))))
                          default: (exit 82))
                        case tag 3:
                         (switch *match*
                          case tag 3:
                           (let
                             (j =a (field 0 *match*) i =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(690):24230-24235
                               (if
                                 (after middle_end/flambda/simple_value_approx.ml(690):24230-24235
                                   (apply
                                     (field 0
                                       (global Int_replace_polymorphic_compare!))
                                     i j))
                                 (before middle_end/flambda/simple_value_approx.ml(691):24245-24247
                                   d1)
                                 (exit 82))))
                          default: (exit 82))
                        case tag 4:
                         (switch *match*
                          case tag 4:
                           (let
                             (j =a (field 0 *match*) i =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(696):24435-24451
                               (if
                                 (after middle_end/flambda/simple_value_approx.ml(696):24435-24451
                                   (apply equal_floats i j))
                                 (before middle_end/flambda/simple_value_approx.ml(697):24461-24463
                                   d1)
                                 (exit 82))))
                          default: (exit 82))
                        case tag 5:
                         (switch *match*
                          case tag 5:
                           (let
                             (i2 =a (field 1 *match*)
                              bi2 =a (field 0 *match*)
                              i1 =a (field 1 *match*)
                              bi1 =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(699):24532-24561
                               (if
                                 (after middle_end/flambda/simple_value_approx.ml(699):24532-24561
                                   (apply equal_boxed_int bi1 i1 bi2 i2))
                                 (before middle_end/flambda/simple_value_approx.ml(700):24571-24573
                                   d1)
                                 (exit 82))))
                          default: (exit 82))
                        case tag 11:
                         (switch *match*
                          case tag 11:
                           (let
                             (e2 =a (field 0 *match*)
                              e1 =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(694):24363-24384
                               (if
                                 (after middle_end/flambda/simple_value_approx.ml(694):24363-24384
                                   (apply (field 1 (global Export_id!)) e1
                                     e2))
                                 (before middle_end/flambda/simple_value_approx.ml(695):24394-24396
                                   d1)
                                 (exit 82))))
                          default: (exit 82))
                        case tag 12:
                         (switch *match*
                          case tag 12:
                           (let
                             (s2 =a (field 0 *match*)
                              s1 =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(692):24290-24308
                               (if
                                 (after middle_end/flambda/simple_value_approx.ml(692):24290-24308
                                   (apply (field 1 (global Symbol!)) s1 s2))
                                 (before middle_end/flambda/simple_value_approx.ml(693):24318-24320
                                   d1)
                                 (exit 82))))
                          default: (exit 82))
                        default: (exit 82))
                      with (82)
                       (before middle_end/flambda/simple_value_approx.ml(707):24833-24852
                         [10: 0a]))))))
            meet
              (function really_import_approx a1 a2
                (funct-body middle_end/flambda/simple_value_approx.ml(709)<ghost>:24863-25890
                  (before middle_end/flambda/simple_value_approx.ml(710):24895-25890
                    (let (*match* = a1 *match* = a2)
                      (catch
                        (catch
                          (let (*match* =a (field 0 *match*))
                            (catch
                              (catch
                                (if (isint *match*)
                                  (let (a =a *match*) (exit 88 a))
                                  (let (*match* =a (field 0 *match*))
                                    (catch
                                      (switch *match*
                                       case int 0:
                                        (let (a =a *match*) (exit 88 a))
                                       case tag 11: (exit 94)
                                       case tag 12: (exit 94)
                                       default:
                                        (switch *match*
                                         case tag 11: (exit 90)
                                         case tag 12: (exit 90)
                                         default: (exit 91)))
                                     with (94) (exit 89))))
                               with (91)
                                (before middle_end/flambda/simple_value_approx.ml(718):25195-25890
                                  (let
                                    (var =
                                       (let
                                         (*match* = (field 1 a1)
                                          *match* = (field 1 a2)
                                          *match* = *match*
                                          *match* = *match*)
                                         (catch
                                           (if *match*
                                             (if *match*
                                               (let
                                                 (v2 =a (field 0 *match*)
                                                  v1 =a (field 0 *match*))
                                                 (before middle_end/flambda/simple_value_approx.ml(722):25317-25387
                                                   (if
                                                     (after middle_end/flambda/simple_value_approx.ml(722):25320-25340
                                                       (apply
                                                         (field 1
                                                           (global Variable!))
                                                         v1 v2))
                                                     (before middle_end/flambda/simple_value_approx.ml(723):25358-25365
                                                       (makeblock 0 v1))
                                                     (before middle_end/flambda/simple_value_approx.ml(724):25383-25387
                                                       0a))))
                                               (exit 86))
                                             (exit 86))
                                          with (86)
                                           (before middle_end/flambda/simple_value_approx.ml(720):25270-25274
                                             0a))))
                                    (before middle_end/flambda/simple_value_approx.ml(726):25403-25890
                                      (let
                                        (symbol =
                                           (let
                                             (*match* = (field 2 a1)
                                              *match* = (field 2 a2)
                                              *match* = *match*
                                              *match* = *match*)
                                             (catch
                                               (if *match*
                                                 (if *match*
                                                   (let
                                                     (*match* =a
                                                        (field 0 *match*)
                                                      field2 =a
                                                        (field 1 *match*)
                                                      v2 =a (field 0 *match*)
                                                      *match* =a
                                                        (field 0 *match*)
                                                      field1 =a
                                                        (field 1 *match*)
                                                      v1 =a (field 0 *match*))
                                                     (before middle_end/flambda/simple_value_approx.ml(730):25554-25783
                                                       (if
                                                         (after middle_end/flambda/simple_value_approx.ml(730):25557-25575
                                                           (apply
                                                             (field 1
                                                               (global Symbol!))
                                                             v1 v2))
                                                         (before middle_end/flambda/simple_value_approx.ml(731):25593-25761
                                                           (let
                                                             (*match* =
                                                                field1
                                                              *match* =
                                                                field2)
                                                             (catch
                                                               (if *match*
                                                                 (if *match*
                                                                   (let
                                                                    (f2 =a
                                                                    (field 0
                                                                    *match*)
                                                                    f1 =a
                                                                    (field 0
                                                                    *match*))
                                                                    (before middle_end/flambda/simple_value_approx.ml(733):25697-25704
                                                                    (if
                                                                    (after middle_end/flambda/simple_value_approx.ml(733):25697-25704
                                                                    (apply
                                                                    (field 0
                                                                    (global Int_replace_polymorphic_compare!))
                                                                    f1 f2))
                                                                    (before middle_end/flambda/simple_value_approx.ml(734):25726-25735
                                                                    (field 2
                                                                    a1))
                                                                    (exit 83))))
                                                                   (exit 83))
                                                                 (if *match*
                                                                   (exit 83)
                                                                   (before middle_end/flambda/simple_value_approx.ml(732):25649-25658
                                                                    (field 2
                                                                    a1))))
                                                              with (83)
                                                               (before middle_end/flambda/simple_value_approx.ml(735):25757-25761
                                                                 0a))))
                                                         (before middle_end/flambda/simple_value_approx.ml(736):25779-25783
                                                           0a))))
                                                   (exit 84))
                                                 (exit 84))
                                              with (84)
                                               (before middle_end/flambda/simple_value_approx.ml(728):25487-25491
                                                 0a))))
                                        (before middle_end/flambda/simple_value_approx.ml(738):25799-25890
                                          (makeblock 0
                                            (after middle_end/flambda/simple_value_approx.ml(738):25809-25859
                                              (apply meet_descr
                                                really_import_approx
                                                (field 0 a1) (field 0 a2)))
                                            var symbol)))))))
                             with (90) (exit 89)))
                         with (88 a)
                          (before middle_end/flambda/simple_value_approx.ml(712):24980-24981
                            a))
                       with (89)
                        (before middle_end/flambda/simple_value_approx.ml(715):25095-25179
                          (after middle_end/flambda/simple_value_approx.ml(715):25095-25179
                            (apply meet really_import_approx
                              (after middle_end/flambda/simple_value_approx.ml(716):25128-25153
                                (apply really_import_approx a1))
                              (after middle_end/flambda/simple_value_approx.ml(716):25154-25179
                                (apply really_import_approx a2)))))))))))
          (let
            (freshen_and_check_closure_id =
               (function value_set_of_closures closure_id
                 (funct-body middle_end/flambda/simple_value_approx.ml(747)<ghost>:26228-26835
                   (before middle_end/flambda/simple_value_approx.ml(748):26291-26835
                     (let
                       (closure_id =
                          (after middle_end/flambda/simple_value_approx.ml(749):26312-26401
                            (apply (field 2 (field 13 (global Freshening!)))
                              (field 7 value_set_of_closures) closure_id)))
                       (before middle_end/flambda/simple_value_approx.ml(752):26409-26835
                         (try
                           (seq
                             (ignore
                               (after middle_end/flambda/simple_value_approx.ml(753):26424-26536
                                 (apply
                                   (field 26 (field 7 (global Variable!)))
                                   (after middle_end/flambda/simple_value_approx.ml(754):26450-26480
                                     (apply (field 10 (global Closure_id!))
                                       closure_id))
                                   (field 3 (field 0 value_set_of_closures)))))
                             (before middle_end/flambda/simple_value_approx.ml(757):26542-26552
                               closure_id))
                          with exn
                           (if (== exn (field 7 (global Stdlib!)))
                             (before middle_end/flambda/simple_value_approx.ml(759):26577-26835
                               (after middle_end/flambda/simple_value_approx.ml(759):26577-26835
                                 (apply (field 0 (global Misc!))
                                   (after middle_end/flambda/simple_value_approx.ml(759):26594-26835
                                     (apply
                                       (field 126 (global Stdlib__format!))
                                       [0:
                                        [11:
                                         "Function "
                                         [15:
                                          [11:
                                           " not found in the set of closures"
                                           [17:
                                            [0: "@ " 1 0]
                                            [15: [17: 4a [15: [17: 4a 0a]]]]]]]]
                                        "Function %a not found in the set of closures@ %a@.%a@."]
                                       (field 5 (global Closure_id!))
                                       closure_id print_value_set_of_closures
                                       value_set_of_closures
                                       print_function_declarations
                                       (field 0 value_set_of_closures))))))
                             (reraise exn))))))))
             check_approx_for_set_of_closures =
               (function t
                 (funct-body middle_end/flambda/simple_value_approx.ml(772)<ghost>:27086-27807
                   (before middle_end/flambda/simple_value_approx.ml(773):27129-27807
                     (let (*match* = (field 0 t))
                       (catch
                         (switch *match*
                          case tag 6:
                           (let (value_set_of_closures =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(781):27529-27562
                               (makeblock 2 (field 1 t)
                                 value_set_of_closures)))
                          case tag 10:
                           (let (*match* =a (field 0 *match*))
                             (if *match*
                               (let (value =a (field 0 *match*))
                                 (before middle_end/flambda/simple_value_approx.ml(776):27245-27286
                                   (makeblock 1 value)))
                               (exit 96)))
                          case tag 13:
                           (let (value =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(774):27178-27194
                               (makeblock 0 value)))
                          default: (exit 96))
                        with (96)
                         (before middle_end/flambda/simple_value_approx.ml(786):27802-27807
                           0a))))))
             strict_check_approx_for_set_of_closures =
               (function t
                 (funct-body middle_end/flambda/simple_value_approx.ml(792)<ghost>:27965-28223
                   (before middle_end/flambda/simple_value_approx.ml(794):28021-28223
                     (let
                       (*match* =
                          (after middle_end/flambda/simple_value_approx.ml(794):28027-28061
                            (apply check_approx_for_set_of_closures t)))
                       (catch
                         (switch *match*
                          case tag 2:
                           (let
                             (value_set_of_closures =a (field 1 *match*)
                              var =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(795):28106-28137
                               (makeblock 0 var value_set_of_closures)))
                          default: (exit 98))
                        with (98)
                         (before middle_end/flambda/simple_value_approx.ml(797):28218-28223
                           0a))))))
             check_approx_for_closure_allowing_unresolved =
               (function t
                 (funct-body middle_end/flambda/simple_value_approx.ml(807)<ghost>:28542-29879
                   (before middle_end/flambda/simple_value_approx.ml(809):28603-29879
                     (let (*match* = (field 0 t))
                       (catch
                         (switch *match*
                          case tag 7:
                           (let (value_closure =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(811):28661-29318
                               (let
                                 (*match* = (field 0 (field 0 value_closure)))
                                 (catch
                                   (switch *match*
                                    case tag 6:
                                     (let
                                       (value_set_of_closures =a
                                          (field 0 *match*))
                                       (before middle_end/flambda/simple_value_approx.ml(813):28773-29030
                                         (let
                                           (symbol =
                                              (let
                                                (*match* =
                                                   (field 2
                                                     (field 0 value_closure)))
                                                (catch
                                                  (if *match*
                                                    (let
                                                      (*match* =a
                                                         (field 0 *match*)
                                                       *match* =a
                                                         (field 1 *match*))
                                                      (if *match* (exit 99)
                                                        (let
                                                          (symbol =a
                                                             (field 0
                                                               *match*))
                                                          (before middle_end/flambda/simple_value_approx.ml(814):28867-28878
                                                            (makeblock 0
                                                              symbol)))))
                                                    (exit 99))
                                                 with (99)
                                                  (before middle_end/flambda/simple_value_approx.ml(815):28916-28920
                                                    0a))))
                                           (before middle_end/flambda/simple_value_approx.ml(817):28936-29030
                                             (makeblock 2 value_closure
                                               (field 1
                                                 (field 0 value_closure))
                                               symbol value_set_of_closures)))))
                                    default: (exit 100))
                                  with (100)
                                   (before middle_end/flambda/simple_value_approx.ml(824):29305-29310
                                     0a)))))
                          case tag 10:
                           (let (*match* =a (field 0 *match*))
                             (if *match*
                               (let (value =a (field 0 *match*))
                                 (before middle_end/flambda/simple_value_approx.ml(827):29369-29410
                                   (makeblock 1 value)))
                               (before middle_end/flambda/simple_value_approx.ml(836):29872-29879
                                 1a)))
                          case tag 13:
                           (let (symbol =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(828):29442-29459
                               (makeblock 0 symbol)))
                          default: (exit 101))
                        with (101)
                         (before middle_end/flambda/simple_value_approx.ml(833):29689-29694
                           0a))))))
             check_approx_for_closure =
               (function t
                 (funct-body middle_end/flambda/simple_value_approx.ml(843)<ghost>:30051-30428
                   (before middle_end/flambda/simple_value_approx.ml(844):30086-30428
                     (let
                       (*match* =
                          (after middle_end/flambda/simple_value_approx.ml(844):30092-30138
                            (apply
                              check_approx_for_closure_allowing_unresolved t)))
                       (catch
                         (switch *match*
                          case tag 2:
                           (let
                             (value_set_of_closures =a (field 3 *match*)
                              set_of_closures_symbol =a (field 2 *match*)
                              set_of_closures_var =a (field 1 *match*)
                              value_closure =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(847):30248-30340
                               (makeblock 0 value_closure set_of_closures_var
                                 set_of_closures_symbol
                                 value_set_of_closures)))
                          default: (exit 102))
                        with (102)
                         (before middle_end/flambda/simple_value_approx.ml(850):30423-30428
                           0a))))))
             approx_for_bound_var =
               (function value_set_of_closures var
                 (funct-body middle_end/flambda/simple_value_approx.ml(852)<ghost>:30455-30854
                   (before middle_end/flambda/simple_value_approx.ml(853):30485-30854
                     (try
                       (after middle_end/flambda/simple_value_approx.ml(854):30493-30557
                         (apply
                           (field 26 (field 7 (global Var_within_closure!)))
                           var (field 1 value_set_of_closures)))
                      with exn
                       (if (== exn (field 7 (global Stdlib!)))
                         (before middle_end/flambda/simple_value_approx.ml(857):30586-30854
                           (after middle_end/flambda/simple_value_approx.ml(857):30586-30854
                             (apply (field 1 (global Misc!))
                               [0:
                                [11:
                                 "The set-of-closures approximation "
                                 [15:
                                  [17:
                                   [0: "@ " 1 0]
                                   [11:
                                    "does not bind the variable "
                                    [15: [17: 4a [2: 0a [17: 4a 0a]]]]]]]]
                                "The set-of-closures approximation %a@ does not bind the variable %a@.%s@."]
                               print_value_set_of_closures
                               value_set_of_closures
                               (field 5 (global Var_within_closure!)) var
                               (after middle_end/flambda/simple_value_approx.ml(861):30787-30854
                                 (apply (field 12 (global Stdlib__printexc!))
                                   (after middle_end/flambda/simple_value_approx.ml(861):30821-30853
                                     (apply
                                       (field 13 (global Stdlib__printexc!))
                                       (field 18 (global Stdlib!)))))))))
                         (reraise exn))))))
             check_approx_for_float =
               (function t
                 (funct-body middle_end/flambda/simple_value_approx.ml(863)<ghost>:30883-31224
                   (before middle_end/flambda/simple_value_approx.ml(864):30904-31224
                     (let (*match* = (field 0 t))
                       (catch
                         (switch *match*
                          case tag 4:
                           (let (f =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(865):30944-30945
                               f))
                          default: (exit 104))
                        with (104)
                         (before middle_end/flambda/simple_value_approx.ml(871):31220-31224
                           0a))))))
             float_array_as_constant =
               (function t
                 (funct-body middle_end/flambda/simple_value_approx.ml(873)<ghost>:31254-31900
                   (before middle_end/flambda/simple_value_approx.ml(874):31300-31900
                     (let (*match* = (field 0 t))
                       (if *match*
                         (let (contents =a (field 0 *match*))
                           (before middle_end/flambda/simple_value_approx.ml(877):31382-31900
                             (after middle_end/flambda/simple_value_approx.ml(877):31382-31900
                               (apply (field 17 (global Stdlib__array!))
                                 (function elt acc
                                   (funct-body middle_end/flambda/simple_value_approx.ml(877):31399-31875
                                     (before middle_end/flambda/simple_value_approx.ml(878):31421-31874
                                       (let
                                         (*match* = (field 0 elt)
                                          *match* = acc
                                          *match* = *match*)
                                         (catch
                                           (if *match*
                                             (let (acc =a (field 0 *match*))
                                               (switch *match*
                                                case tag 4:
                                                 (let
                                                   (*match* =a
                                                      (field 0 *match*))
                                                   (if *match*
                                                     (let
                                                       (f =a
                                                          (field 0 *match*))
                                                       (before middle_end/flambda/simple_value_approx.ml(880):31497-31512
                                                         (makeblock 0
                                                           (makeblock 0 (float,*)
                                                             f acc))))
                                                     (exit 105)))
                                                default: (exit 105)))
                                             (exit 105))
                                          with (105)
                                           (before middle_end/flambda/simple_value_approx.ml(888):31870-31874
                                             0a))))))
                                 contents [0: 0a]))))
                         (before middle_end/flambda/simple_value_approx.ml(875):31348-31352
                           0a))))))
             check_approx_for_string =
               (function t
                 (funct-body middle_end/flambda/simple_value_approx.ml(891)<ghost>:31930-32292
                   (before middle_end/flambda/simple_value_approx.ml(892):31952-32292
                     (let (*match* = (field 0 t))
                       (catch
                         (switch *match*
                          case tag 8:
                           (let
                             (*match* =a (field 0 *match*)
                              contents =a (field 0 *match*))
                             (before middle_end/flambda/simple_value_approx.ml(893):32004-32012
                               contents))
                          default: (exit 108))
                        with (108)
                         (before middle_end/flambda/simple_value_approx.ml(900):32288-32292
                           0a))))))
             potentially_taken_const_switch_branch =
               (function t branch[int]
                 (funct-body middle_end/flambda/simple_value_approx.ml(907)<ghost>:32423-33076
                   (before middle_end/flambda/simple_value_approx.ml(908):32436-33076
                     (let (*match* = (field 0 t))
                       (catch
                         (catch
                           (catch
                             (catch
                               (switch *match*
                                case tag 1: (exit 114)
                                case tag 2:
                                 (let (c =a (field 0 *match*))
                                   (before middle_end/flambda/simple_value_approx.ml(918):32783-32803
                                     (if
                                       (after middle_end/flambda/simple_value_approx.ml(918):32783-32803
                                         (apply
                                           (field 0
                                             (global Int_replace_polymorphic_compare!))
                                           c branch))
                                       (before middle_end/flambda/simple_value_approx.ml(919):32811-32824
                                         2a)
                                       (exit 110))))
                                case tag 3: (exit 114)
                                case tag 10: (exit 111)
                                case tag 11: (exit 111)
                                case tag 12: (exit 111)
                                case tag 13: (exit 111)
                                default: (exit 113))
                              with (114)
                               (let (i =a (field 0 *match*) i =[int] i)
                                 (before middle_end/flambda/simple_value_approx.ml(916):32729-32739
                                   (if
                                     (after middle_end/flambda/simple_value_approx.ml(916):32729-32739
                                       (apply
                                         (field 0
                                           (global Int_replace_polymorphic_compare!))
                                         i branch))
                                     (before middle_end/flambda/simple_value_approx.ml(917):32747-32760
                                       2a)
                                     (exit 110)))))
                            with (111)
                             (before middle_end/flambda/simple_value_approx.ml(915):32676-32688
                               1a))
                          with (113)
                           (before middle_end/flambda/simple_value_approx.ml(925):33061-33076
                             0a))
                        with (110)
                         (before middle_end/flambda/simple_value_approx.ml(921):32882-32897
                           0a))))))
             potentially_taken_block_switch_branch =
               (function t tag[int]
                 (funct-body middle_end/flambda/simple_value_approx.ml(927)<ghost>:33120-34016
                   (before middle_end/flambda/simple_value_approx.ml(928):33130-34016
                     (let (*match* = (field 0 t))
                       (catch
                         (catch
                           (catch
                             (switch *match*
                              case int 0:
                               (before middle_end/flambda/simple_value_approx.ml(953):34001-34016
                                 0a)
                              case tag 0:
                               (let (block_tag =a (field 0 *match*))
                                 (before middle_end/flambda/simple_value_approx.ml(936):33368-33394
                                   (if
                                     (after middle_end/flambda/simple_value_approx.ml(936):33368-33394
                                       (apply
                                         (field 0
                                           (global Int_replace_polymorphic_compare!))
                                         (after middle_end/flambda/simple_value_approx.ml(936):33368-33388
                                           (apply (field 9 (global Tag!))
                                             block_tag))
                                         tag))
                                     (before middle_end/flambda/simple_value_approx.ml(937):33402-33415
                                       2a)
                                     (exit 116))))
                              case tag 1: (exit 118)
                              case tag 2: (exit 118)
                              case tag 3: (exit 118)
                              case tag 4:
                               (before middle_end/flambda/simple_value_approx.ml(938):33439-33459
                                 (if
                                   (after middle_end/flambda/simple_value_approx.ml(938):33439-33459
                                     (apply
                                       (field 0
                                         (global Int_replace_polymorphic_compare!))
                                       tag (field 13 (global Stdlib__obj!))))
                                   (before middle_end/flambda/simple_value_approx.ml(939):33467-33480
                                     2a)
                                   (exit 116)))
                              case tag 5:
                               (before middle_end/flambda/simple_value_approx.ml(947):33773-33793
                                 (if
                                   (after middle_end/flambda/simple_value_approx.ml(947):33773-33793
                                     (apply
                                       (field 0
                                         (global Int_replace_polymorphic_compare!))
                                       tag (field 15 (global Stdlib__obj!))))
                                   (before middle_end/flambda/simple_value_approx.ml(948):33801-33814
                                     2a)
                                   (exit 116)))
                              case tag 6: (exit 119)
                              case tag 7: (exit 119)
                              case tag 8:
                               (before middle_end/flambda/simple_value_approx.ml(942):33582-33602
                                 (if
                                   (after middle_end/flambda/simple_value_approx.ml(942):33582-33602
                                     (apply
                                       (field 0
                                         (global Int_replace_polymorphic_compare!))
                                       tag (field 12 (global Stdlib__obj!))))
                                   (before middle_end/flambda/simple_value_approx.ml(943):33610-33623
                                     2a)
                                   (exit 116)))
                              case tag 9:
                               (before middle_end/flambda/simple_value_approx.ml(940):33510-33536
                                 (if
                                   (after middle_end/flambda/simple_value_approx.ml(940):33510-33536
                                     (apply
                                       (field 0
                                         (global Int_replace_polymorphic_compare!))
                                       tag (field 14 (global Stdlib__obj!))))
                                   (before middle_end/flambda/simple_value_approx.ml(941):33544-33557
                                     2a)
                                   (exit 116)))
                              default:
                               (before middle_end/flambda/simple_value_approx.ml(933):33245-33257
                                 1a))
                            with (118)
                             (before middle_end/flambda/simple_value_approx.ml(935):33316-33331
                               0a))
                          with (119)
                           (before middle_end/flambda/simple_value_approx.ml(945):33681-33725
                             (if
                               (||
                                 (after middle_end/flambda/simple_value_approx.ml(945):33681-33702
                                   (apply
                                     (field 0
                                       (global Int_replace_polymorphic_compare!))
                                     tag (field 6 (global Stdlib__obj!))))
                                 (after middle_end/flambda/simple_value_approx.ml(945):33706-33725
                                   (apply
                                     (field 0
                                       (global Int_replace_polymorphic_compare!))
                                     tag (field 8 (global Stdlib__obj!)))))
                               (before middle_end/flambda/simple_value_approx.ml(946):33733-33745
                                 1a)
                               (exit 116))))
                        with (116)
                         (before middle_end/flambda/simple_value_approx.ml(951):33961-33976
                           0a))))))
             function_arity =
               (function fun_decl : int
                 (funct-body middle_end/flambda/simple_value_approx.ml(955)<ghost>:34037-34102
                   (before middle_end/flambda/simple_value_approx.ml(956):34075-34102
                     (after middle_end/flambda/simple_value_approx.ml(956):34075-34102
                       (apply (field 0 (global Stdlib__list!))
                         (field 1 fun_decl))))))
             function_declaration_approx =
               (function keep_body fun_var fun_decl
                 (funct-body middle_end/flambda/simple_value_approx.ml(958)<ghost>:34136-34750
                   (before middle_end/flambda/simple_value_approx.ml(960):34207-34750
                     (let
                       (function_body =
                          (if
                            (not
                              (after middle_end/flambda/simple_value_approx.ml(961):34238-34266
                                (apply keep_body fun_var fun_decl)))
                            (before middle_end/flambda/simple_value_approx.ml(961):34272-34276
                              0a)
                            (before middle_end/flambda/simple_value_approx.ml(962):34286-34647
                              (makeblock 0
                                (makeblock 0 (field 3 fun_decl)
                                  (field 4 fun_decl) (field 5 fun_decl)
                                  (field 6 fun_decl) (field 7 fun_decl)
                                  (field 8 fun_decl) (field 9 fun_decl)
                                  (field 2 fun_decl))))))
                       (before middle_end/flambda/simple_value_approx.ml(973):34655-34750
                         (makeblock 0 (field 0 fun_decl) (field 1 fun_decl)
                           function_body))))))
             function_declarations_approx =
               (function keep_body fun_decls
                 (funct-body middle_end/flambda/simple_value_approx.ml(977)<ghost>:34785-35118
                   (before middle_end/flambda/simple_value_approx.ml(979):34846-35118
                     (let
                       (funs =
                          (after middle_end/flambda/simple_value_approx.ml(980):34861-34934
                            (apply (field 33 (field 7 (global Variable!)))
                              (after middle_end/flambda/simple_value_approx.ml(980):34879-34919
                                (apply function_declaration_approx keep_body))
                              (field 3 fun_decls))))
                       (before middle_end/flambda/simple_value_approx.ml(982):34942-35118
                         (makeblock 0 (field 0 fun_decls) (field 1 fun_decls)
                           (field 2 fun_decls) funs))))))
             import_function_declarations_for_pack =
               (function function_decls import_set_of_closures_id
                 import_set_of_closures_origin
                 (funct-body middle_end/flambda/simple_value_approx.ml(987)<ghost>:35162-35524
                   (before middle_end/flambda/simple_value_approx.ml(989):35241-35524
                     (makeblock 0 (field 0 function_decls)
                       (after middle_end/flambda/simple_value_approx.ml(990):35270-35329
                         (apply import_set_of_closures_id
                           (field 1 function_decls)))
                       (after middle_end/flambda/simple_value_approx.ml(992):35366-35433
                         (apply import_set_of_closures_origin
                           (field 2 function_decls)))
                       (field 3 function_decls)))))
             update_function_declarations =
               (function function_decls funs
                 (funct-body middle_end/flambda/simple_value_approx.ml(997)<ghost>:35559-35935
                   (before middle_end/flambda/simple_value_approx.ml(998):35584-35935
                     (let
                       (compilation_unit =
                          (after middle_end/flambda/simple_value_approx.ml(998):35607-35642
                            (apply (field 15 (global Compilation_unit!)) 0a)))
                       (before middle_end/flambda/simple_value_approx.ml(999):35648-35935
                         (let (is_classic_mode = (field 0 function_decls))
                           (before middle_end/flambda/simple_value_approx.ml(1000):35706-35935
                             (let
                               (set_of_closures_id =
                                  (after middle_end/flambda/simple_value_approx.ml(1000):35731-35773
                                    (apply
                                      (field 9 (global Set_of_closures_id!))
                                      0a compilation_unit)))
                               (before middle_end/flambda/simple_value_approx.ml(1001):35779-35935
                                 (let
                                   (set_of_closures_origin =
                                      (field 2 function_decls))
                                   (before middle_end/flambda/simple_value_approx.ml(1002):35851-35935
                                     (makeblock 0 is_classic_mode
                                       set_of_closures_id
                                       set_of_closures_origin funs))))))))))))
             clear_function_bodies =
               (function function_decls
                 (funct-body middle_end/flambda/simple_value_approx.ml(1008)<ghost>:35963-36308
                   (before middle_end/flambda/simple_value_approx.ml(1009):36008-36308
                     (let
                       (funs =
                          (after middle_end/flambda/simple_value_approx.ml(1010):36023-36272
                            (apply (field 32 (field 7 (global Variable!)))
                              (function fun_decl
                                (funct-body middle_end/flambda/simple_value_approx.ml(1010):36040-36246
                                  (before middle_end/flambda/simple_value_approx.ml(1011):36088-36245
                                    (let (*match* = (field 2 fun_decl))
                                      (catch
                                        (if *match*
                                          (let
                                            (*match* =a (field 0 *match*)
                                             *match* =a (field 2 *match*))
                                            (if *match* (exit 120)
                                              (before middle_end/flambda/simple_value_approx.ml(1015):36207-36245
                                                (let (init = fun_decl)
                                                  (makeblock 0 (field 0 init)
                                                    (field 1 init) 0a)))))
                                          (exit 120))
                                       with (120)
                                        (before middle_end/flambda/simple_value_approx.ml(1013):36172-36180
                                          fun_decl))))))
                              (field 3 function_decls))))
                       (before middle_end/flambda/simple_value_approx.ml(1018):36280-36308
                         (let (init = function_decls)
                           (makeblock 0 (field 0 init) (field 1 init)
                             (field 2 init) funs)))))))
             update_function_declaration_body =
               (function function_decl f
                 (funct-body middle_end/flambda/simple_value_approx.ml(1021)<ghost>:36353-36840
                   (before middle_end/flambda/simple_value_approx.ml(1023):36431-36840
                     (let (*match* = (field 2 function_decl))
                       (if *match*
                         (let (function_body =a (field 0 *match*))
                           (before middle_end/flambda/simple_value_approx.ml(1026):36526-36840
                             (let
                               (new_function_body =
                                  (let
                                    (body =
                                       (after middle_end/flambda/simple_value_approx.ml(1027):36567-36587
                                         (apply f (field 7 function_body))))
                                    (before middle_end/flambda/simple_value_approx.ml(1028):36597-36767
                                      (let
                                        (free_variables =
                                           (after middle_end/flambda/simple_value_approx.ml(1028):36618-36645
                                             (apply
                                               (field 1 (global Flambda!)) 0a
                                               0a 0a body)))
                                        (before middle_end/flambda/simple_value_approx.ml(1029):36655-36767
                                          (let
                                            (free_symbols =
                                               (after middle_end/flambda/simple_value_approx.ml(1029):36674-36699
                                                 (apply
                                                   (field 5
                                                     (global Flambda!))
                                                   body)))
                                            (before middle_end/flambda/simple_value_approx.ml(1030):36709-36767
                                              (let (init = function_body)
                                                (makeblock 0 free_variables
                                                  free_symbols (field 2 init)
                                                  (field 3 init)
                                                  (field 4 init)
                                                  (field 5 init)
                                                  (field 6 init) body)))))))))
                               (before middle_end/flambda/simple_value_approx.ml(1032):36779-36840
                                 (let (init = function_decl)
                                   (makeblock 0 (field 0 init) (field 1 init)
                                     (makeblock 0 new_function_body)))))))
                         (before middle_end/flambda/simple_value_approx.ml(1024):36482-36495
                           function_decl))))))
             make_closure_map =
               (function input
                 (funct-body middle_end/flambda/simple_value_approx.ml(1034)<ghost>:36863-37226
                   (before middle_end/flambda/simple_value_approx.ml(1035):36873-37226
                     (let
                       (map =
                          (makemutable 0
                            (field 0 (field 7 (global Closure_id!)))))
                       (before middle_end/flambda/simple_value_approx.ml(1036):36913-37226
                         (let
                           (add_set_of_closures =
                              (function param function_decls
                                (funct-body middle_end/flambda/simple_value_approx.ml(1036)<ghost>:36937-37157
                                  (before middle_end/flambda/simple_value_approx.ml(1037):36986-37157
                                    (after middle_end/flambda/simple_value_approx.ml(1037):36986-37157
                                      (apply
                                        (field 11
                                          (field 7 (global Variable!)))
                                        (function var param
                                          (funct-body middle_end/flambda/simple_value_approx.ml(1037):37004-37131
                                            (before middle_end/flambda/simple_value_approx.ml(1038):37026-37130
                                              (let
                                                (closure_id =
                                                   (after middle_end/flambda/simple_value_approx.ml(1038):37043-37062
                                                     (apply
                                                       (field 9
                                                         (global Closure_id!))
                                                       var)))
                                                (before middle_end/flambda/simple_value_approx.ml(1039):37074-37130
                                                  (setfield_ptr 0 map
                                                    (after middle_end/flambda/simple_value_approx.ml(1039):37081-37130
                                                      (apply
                                                        (field 3
                                                          (field 7
                                                            (global Closure_id!)))
                                                        closure_id
                                                        function_decls
                                                        (field 0 map)))))))))
                                        (field 3 function_decls)))))))
                           (before middle_end/flambda/simple_value_approx.ml(1042):37165-37226
                             (seq
                               (after middle_end/flambda/simple_value_approx.ml(1042):37165-37218
                                 (apply
                                   (field 11
                                     (field 7 (global Set_of_closures_id!)))
                                   add_set_of_closures input))
                               (before middle_end/flambda/simple_value_approx.ml(1043):37222-37226
                                 (field 0 map)))))))))))
            (pseudo _none_(0)<ghost>:-1--1
              (makeblock 0 descr descrs print print_descr
                print_value_set_of_closures print_function_declarations
                function_declarations_approx create_value_set_of_closures
                update_freshening_of_value_set_of_closures value_unknown
                value_int value_char value_float value_any_float
                value_mutable_float_array value_immutable_float_array
                value_string value_boxed_int value_constptr value_block
                value_extern value_symbol value_bottom value_unresolved
                value_closure value_set_of_closures make_const_int
                make_const_char make_const_ptr make_const_bool
                make_const_float make_const_boxed_int make_const_int_named
                make_const_char_named make_const_ptr_named
                make_const_bool_named make_const_float_named
                make_const_boxed_int_named augment_with_variable
                augment_with_symbol augment_with_symbol_field
                replace_description augment_with_kind
                augment_kind_with_approx equal_boxed_int meet known useful
                all_not_useful warn_on_mutation simplify simplify_using_env
                simplify_named simplify_named_using_env
                simplify_var_to_var_using_env simplify_var get_field
                check_approx_for_block approx_for_bound_var
                freshen_and_check_closure_id
                strict_check_approx_for_set_of_closures
                check_approx_for_set_of_closures check_approx_for_closure
                check_approx_for_closure_allowing_unresolved
                check_approx_for_float float_array_as_constant
                check_approx_for_string potentially_taken_const_switch_branch
                potentially_taken_block_switch_branch function_arity
                update_function_declarations
                import_function_declarations_for_pack
                update_function_declaration_body make_closure_map
                clear_function_bodies))))))))
