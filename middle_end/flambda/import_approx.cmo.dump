(setglobal Import_approx!
  (let
    (import_set_of_closures =
       (let
         (import_function_declarations =
            (function clos
              (funct-body middle_end/flambda/import_approx.ml(22)<ghost>:1293-2357
                (before middle_end/flambda/import_approx.ml(26):1506-2357
                  (let
                    (sym_to_fun_var_map =
                       (function clos
                         (funct-body middle_end/flambda/import_approx.ml(26)<ghost>:1529-1802
                           (before middle_end/flambda/import_approx.ml(27):1570-1802
                             (after middle_end/flambda/import_approx.ml(27):1570-1802
                               (apply (field 12 (field 7 (global Variable!)))
                                 (function fun_var param acc
                                   (funct-body middle_end/flambda/import_approx.ml(27):1588-1767
                                     (before middle_end/flambda/import_approx.ml(28):1621-1766
                                       (let
                                         (closure_id =
                                            (after middle_end/flambda/import_approx.ml(28):1638-1661
                                              (apply
                                                (field 9
                                                  (global Closure_id!))
                                                fun_var)))
                                         (before middle_end/flambda/import_approx.ml(29):1676-1766
                                           (let
                                             (sym =
                                                (after middle_end/flambda/import_approx.ml(29):1686-1721
                                                  (apply
                                                    (field 24
                                                      (global Compilenv!))
                                                    closure_id)))
                                             (before middle_end/flambda/import_approx.ml(30):1736-1766
                                               (after middle_end/flambda/import_approx.ml(30):1736-1766
                                                 (apply
                                                   (field 3
                                                     (field 7
                                                       (global Symbol!)))
                                                   sym fun_var acc)))))))))
                                 (field 3 clos)
                                 (field 0 (field 7 (global Symbol!)))))))))
                    (before middle_end/flambda/import_approx.ml(33):1814-2357
                      (let
                        (sym_map =
                           (after middle_end/flambda/import_approx.ml(33):1828-1851
                             (apply sym_to_fun_var_map clos)))
                        (before middle_end/flambda/import_approx.ml(34):1859-2357
                          (let
                            (f_named =
                               (function named
                                 (funct-body middle_end/flambda/import_approx.ml(34)<ghost>:1871-2077
                                   (before middle_end/flambda/import_approx.ml(35):1903-2077
                                     (switch named
                                      case tag 0:
                                       (let (sym =a (field 0 named))
                                         (before middle_end/flambda/import_approx.ml(37):1950-2054
                                           (try
                                             (makeblock 10
                                               (makeblock 0
                                                 (after middle_end/flambda/import_approx.ml(37):1978-2007
                                                   (apply
                                                     (field 26
                                                       (field 7
                                                         (global Symbol!)))
                                                     sym sym_map))))
                                            with exn
                                             (if
                                               (== exn
                                                 (field 7 (global Stdlib!)))
                                               (before middle_end/flambda/import_approx.ml(38):2037-2042
                                                 named)
                                               (reraise exn)))))
                                      default:
                                       (let (named =a named)
                                         (before middle_end/flambda/import_approx.ml(40):2072-2077
                                           named)))))))
                            (before middle_end/flambda/import_approx.ml(42):2089-2357
                              (let
                                (funs =
                                   (after middle_end/flambda/import_approx.ml(43):2106-2304
                                     (apply
                                       (field 32
                                         (field 7 (global Variable!)))
                                       (function function_decl
                                         (funct-body middle_end/flambda/import_approx.ml(43):2123-2286
                                           (before middle_end/flambda/import_approx.ml(44):2180-2285
                                             (after middle_end/flambda/import_approx.ml(44):2180-2285
                                               (apply
                                                 (field 72
                                                   (global Simple_value_approx!))
                                                 function_decl
                                                 (after middle_end/flambda/import_approx.ml(45):2239-2285
                                                   (apply
                                                     (field 22
                                                       (global Flambda_iterators!))
                                                     f_named)))))))
                                       (field 3 clos))))
                                (before middle_end/flambda/import_approx.ml(48):2316-2357
                                  (after middle_end/flambda/import_approx.ml(48):2316-2357
                                    (apply
                                      (field 70
                                        (global Simple_value_approx!))
                                      clos funs))))))))))))))
         (before middle_end/flambda/import_approx.ml(50):2365-2936
           (let
             (aux =
                (function set_of_closures_id
                  (funct-body middle_end/flambda/import_approx.ml(50)<ghost>:2373-2852
                    (before middle_end/flambda/import_approx.ml(51):2398-2852
                      (let
                        (*match* =
                           (after middle_end/flambda/import_approx.ml(52):2410-2506
                             (apply (field 19 (global Compilenv!))
                               (after middle_end/flambda/import_approx.ml(53):2446-2506
                                 (apply
                                   (field 11 (global Set_of_closures_id!))
                                   set_of_closures_id)))))
                        (if *match*
                          (let (ex_info =a (field 0 *match*))
                            (before middle_end/flambda/import_approx.ml(57):2563-2852
                              (try
                                (let
                                  (function_declarations =
                                     (after middle_end/flambda/import_approx.ml(59):2613-2696
                                       (apply
                                         (field 26
                                           (field 7
                                             (global Set_of_closures_id!)))
                                         set_of_closures_id
                                         (field 0 ex_info))))
                                  (before middle_end/flambda/import_approx.ml(62):2716-2773
                                    (makeblock 0
                                      (after middle_end/flambda/import_approx.ml(62):2721-2773
                                        (apply import_function_declarations
                                          function_declarations)))))
                               with exn
                                (if (== exn (field 7 (global Stdlib!)))
                                  (before middle_end/flambda/import_approx.ml(64):2806-2852
                                    (after middle_end/flambda/import_approx.ml(64):2806-2852
                                      (apply (field 0 (global Misc!))
                                        "Cannot find set of closures")))
                                  (reraise exn)))))
                          (before middle_end/flambda/import_approx.ml(55):2530-2534
                            0a)))))))
             (before middle_end/flambda/import_approx.ml(66):2860-2936
               (after middle_end/flambda/import_approx.ml(66):2860-2936
                 (apply (field 26 (field 8 (global Set_of_closures_id!)))
                   (field 0 (global Compilenv!)) aux)))))))
    (letrec
      (import_ex
         (function ex
           (funct-body middle_end/flambda/import_approx.ml(68)<ghost>:2956-7496
             (before middle_end/flambda/import_approx.ml(69):2963-7496
               (let
                 (import_value_set_of_closures =
                    (function set_of_closures_id bound_vars free_vars ex_info
                      what
                      (funct-body middle_end/flambda/import_approx.ml(69)<ghost>:2996-4882
                        (before middle_end/flambda/import_approx.ml(71):3119-4882
                          (let
                            (bound_vars =
                               (after middle_end/flambda/import_approx.ml(71):3136-3187
                                 (apply
                                   (field 32
                                     (field 7 (global Var_within_closure!)))
                                   import_approx bound_vars)))
                            (before middle_end/flambda/import_approx.ml(72):3195-4882
                              (let
                                (*match* =
                                   (after middle_end/flambda/import_approx.ml(72):3201-3242
                                     (apply import_set_of_closures
                                       set_of_closures_id)))
                                (if *match*
                                  (let (function_decls =a (field 0 *match*))
                                    (before middle_end/flambda/import_approx.ml(77):3420-4882
                                      (let
                                        (is_classic_mode =
                                           (field 0 function_decls))
                                        (before middle_end/flambda/import_approx.ml(78):3482-4882
                                          (let
                                            (invariant_params =
                                               (catch
                                                 (try
                                                   (exit 8
                                                     (after middle_end/flambda/import_approx.ml(80):3529-3612
                                                       (apply
                                                         (field 26
                                                           (field 7
                                                             (global Set_of_closures_id!)))
                                                         set_of_closures_id
                                                         (field 6 ex_info))))
                                                  with exn
                                                   (if
                                                     (== exn
                                                       (field 7
                                                         (global Stdlib!)))
                                                     (before middle_end/flambda/import_approx.ml(84):3669-3991
                                                       (if is_classic_mode
                                                         (before middle_end/flambda/import_approx.ml(85):3705-3723
                                                           (field 0
                                                             (field 7
                                                               (global Variable!))))
                                                         (before middle_end/flambda/import_approx.ml(87):3751-3991
                                                           (after middle_end/flambda/import_approx.ml(87):3751-3991
                                                             (apply
                                                               (field 1
                                                                 (global Misc!))
                                                               [0:
                                                                [11:
                                                                 "Set of closures ID "
                                                                 [15:
                                                                  [11:
                                                                   " not found in invariant_params (when importing ["
                                                                   [15:
                                                                    [11:
                                                                    ": "
                                                                    [2:
                                                                    0a
                                                                    [11:
                                                                    "])" 0a]]]]]]]
                                                                "Set of closures ID %a not found in invariant_params (when importing [%a: %s])"]
                                                               (field 5
                                                                 (global Set_of_closures_id!))
                                                               set_of_closures_id
                                                               (field 5
                                                                 (global Export_id!))
                                                               ex what)))))
                                                     (reraise exn)))
                                                with (8 found)
                                                 (before middle_end/flambda/import_approx.ml(92):4011-4016
                                                   found)))
                                            (before middle_end/flambda/import_approx.ml(94):4032-4882
                                              (let
                                                (recursive =
                                                   (catch
                                                     (try
                                                       (exit 6
                                                         (after middle_end/flambda/import_approx.ml(96):4072-4136
                                                           (apply
                                                             (field 26
                                                               (field 7
                                                                 (global Set_of_closures_id!)))
                                                             set_of_closures_id
                                                             (field 7
                                                               ex_info))))
                                                      with exn
                                                       (if
                                                         (== exn
                                                           (field 7
                                                             (global Stdlib!)))
                                                         (before middle_end/flambda/import_approx.ml(99):4193-4508
                                                           (if
                                                             is_classic_mode
                                                             (before middle_end/flambda/import_approx.ml(100):4229-4247
                                                               (field 0
                                                                 (field 6
                                                                   (global Variable!))))
                                                             (before middle_end/flambda/import_approx.ml(102):4275-4508
                                                               (after middle_end/flambda/import_approx.ml(102):4275-4508
                                                                 (apply
                                                                   (field 1
                                                                    (global Misc!))
                                                                   [0:
                                                                    [11:
                                                                    "Set of closures ID "
                                                                    [15:
                                                                    [11:
                                                                    " not found in recursive (when importing ["
                                                                    [15:
                                                                    [11:
                                                                    ": "
                                                                    [2:
                                                                    0a
                                                                    [11:
                                                                    "])" 0a]]]]]]]
                                                                    "Set of closures ID %a not found in recursive (when importing [%a: %s])"]
                                                                   (field 5
                                                                    (global Set_of_closures_id!))
                                                                   set_of_closures_id
                                                                   (field 5
                                                                    (global Export_id!))
                                                                   ex what)))))
                                                         (reraise exn)))
                                                    with (6 found)
                                                     (before middle_end/flambda/import_approx.ml(107):4528-4533
                                                       found)))
                                                (before middle_end/flambda/import_approx.ml(109):4549-4882
                                                  (makeblock 0
                                                    (after middle_end/flambda/import_approx.ml(109):4554-4882
                                                      (apply
                                                        (field 7
                                                          (global Simple_value_approx!))
                                                        function_decls
                                                        bound_vars free_vars
                                                        (opaque
                                                          (makeblock 250
                                                            invariant_params))
                                                        (opaque
                                                          (makeblock 250
                                                            recursive))
                                                        (field 0
                                                          (field 7
                                                            (global Variable!)))
                                                        (field 0
                                                          (field 13
                                                            (global Freshening!)))
                                                        (field 0
                                                          (field 7
                                                            (global Closure_id!))))))))))))))
                                  (before middle_end/flambda/import_approx.ml(73):3262-3266
                                    0a)))))))))
                 (before middle_end/flambda/import_approx.ml(119):4890-7496
                   (let
                     (compilation_unit =
                        (after middle_end/flambda/import_approx.ml(119):4913-4946
                          (apply (field 11 (global Export_id!)) ex)))
                     (before middle_end/flambda/import_approx.ml(120):4952-7496
                       (let
                         (*match* =
                            (after middle_end/flambda/import_approx.ml(120):4958-5002
                              (apply (field 19 (global Compilenv!))
                                compilation_unit)))
                         (if *match*
                           (let (ex_info =a (field 0 *match*))
                             (before middle_end/flambda/import_approx.ml(123):5066-7496
                               (catch
                                 (try
                                   (exit 4
                                     (after middle_end/flambda/import_approx.ml(123):5072-5111
                                       (apply (field 6 (global Export_info!))
                                         ex_info ex)))
                                  with exn
                                   (if (== exn (field 7 (global Stdlib!)))
                                     (before middle_end/flambda/import_approx.ml(125):5152-5215
                                       (after middle_end/flambda/import_approx.ml(125):5152-5215
                                         (apply (field 1 (global Misc!))
                                           [0:
                                            [11:
                                             "Cannot find export id "
                                             [15: 0a]]
                                            "Cannot find export id %a"]
                                           (field 5 (global Export_id!)) ex)))
                                     (reraise exn)))
                                with (4 val)
                                 (switch* val
                                  case int 0:
                                   (before middle_end/flambda/import_approx.ml(126):5245-5266
                                     (after middle_end/flambda/import_approx.ml(126):5245-5266
                                       (apply
                                         (field 9
                                           (global Simple_value_approx!))
                                         0a)))
                                  case tag 0:
                                   (let
                                     (fields =a (field 1 val)
                                      tag =a (field 0 val))
                                     (before middle_end/flambda/import_approx.ml(152):6185-6235
                                       (after middle_end/flambda/import_approx.ml(152):6185-6235
                                         (apply
                                           (field 19
                                             (global Simple_value_approx!))
                                           tag
                                           (after middle_end/flambda/import_approx.ml(152):6203-6235
                                             (apply
                                               (field 14
                                                 (global Stdlib__array!))
                                               import_approx fields))))))
                                  case tag 1:
                                   (before middle_end/flambda/import_approx.ml(150):6122-6143
                                     (after middle_end/flambda/import_approx.ml(150):6122-6143
                                       (apply
                                         (field 9
                                           (global Simple_value_approx!))
                                         0a)))
                                  case tag 2:
                                   (let (i =a (field 0 val))
                                     (before middle_end/flambda/import_approx.ml(127):5288-5301
                                       (after middle_end/flambda/import_approx.ml(127):5288-5301
                                         (apply
                                           (field 10
                                             (global Simple_value_approx!))
                                           i))))
                                  case tag 3:
                                   (let (c =a (field 0 val))
                                     (before middle_end/flambda/import_approx.ml(128):5324-5338
                                       (after middle_end/flambda/import_approx.ml(128):5324-5338
                                         (apply
                                           (field 11
                                             (global Simple_value_approx!))
                                           c))))
                                  case tag 4:
                                   (let (i =a (field 0 val))
                                     (before middle_end/flambda/import_approx.ml(129):5365-5383
                                       (after middle_end/flambda/import_approx.ml(129):5365-5383
                                         (apply
                                           (field 18
                                             (global Simple_value_approx!))
                                           i))))
                                  case tag 5:
                                   (let (f =a (field 0 val))
                                     (before middle_end/flambda/import_approx.ml(130):5407-5422
                                       (after middle_end/flambda/import_approx.ml(130):5407-5422
                                         (apply
                                           (field 12
                                             (global Simple_value_approx!))
                                           f))))
                                  case tag 6:
                                   (let (float_array =a (field 0 val))
                                     (before middle_end/flambda/import_approx.ml(132):5468-5808
                                       (let (*match* = (field 0 float_array))
                                         (if *match*
                                           (let
                                             (contents =a (field 0 *match*))
                                             (before middle_end/flambda/import_approx.ml(136):5632-5798
                                               (after middle_end/flambda/import_approx.ml(136):5632-5798
                                                 (apply
                                                   (field 15
                                                     (global Simple_value_approx!))
                                                   (after middle_end/flambda/import_approx.ml(137):5672-5798
                                                     (apply
                                                       (field 14
                                                         (global Stdlib__array!))
                                                       (function param
                                                         (funct-body middle_end/flambda/import_approx.ml(137):5683-5775
                                                           (if param
                                                             (let
                                                               (f =a
                                                                  (field 0
                                                                    param))
                                                               (before middle_end/flambda/import_approx.ml(139):5759-5774
                                                                 (after middle_end/flambda/import_approx.ml(139):5759-5774
                                                                   (apply
                                                                    (field 12
                                                                    (global Simple_value_approx!))
                                                                    f))))
                                                             (before middle_end/flambda/import_approx.ml(138):5716-5733
                                                               (field 13
                                                                 (global Simple_value_approx!))))))
                                                       contents))))))
                                           (before middle_end/flambda/import_approx.ml(134):5544-5594
                                             (after middle_end/flambda/import_approx.ml(134):5544-5594
                                               (apply
                                                 (field 14
                                                   (global Simple_value_approx!))
                                                 (field 1 float_array))))))))
                                  case tag 7:
                                   (let
                                     (i =a (field 1 val) t =a (field 0 val))
                                     (before middle_end/flambda/import_approx.ml(142):5853-5874
                                       (after middle_end/flambda/import_approx.ml(142):5853-5874
                                         (apply
                                           (field 17
                                             (global Simple_value_approx!))
                                           t i))))
                                  case tag 8:
                                   (let
                                     (*match* =a (field 0 val)
                                      size =a (field 1 *match*)
                                      contents =a (field 0 *match*))
                                     (before middle_end/flambda/import_approx.ml(144):5922-6090
                                       (let
                                         (contents =
                                            (if contents
                                              (let
                                                (contents =a
                                                   (field 0 contents))
                                                (before middle_end/flambda/import_approx.ml(147):6033-6046
                                                  (makeblock 0 contents)))
                                              (before middle_end/flambda/import_approx.ml(146):5997-6001
                                                0a)))
                                         (before middle_end/flambda/import_approx.ml(149):6062-6090
                                           (after middle_end/flambda/import_approx.ml(149):6062-6090
                                             (apply
                                               (field 16
                                                 (global Simple_value_approx!))
                                               size contents))))))
                                  case tag 9:
                                   (let
                                     (*match* =a (field 0 val)
                                      *match* =a (field 1 *match*)
                                      aliased_symbol =a (field 4 *match*)
                                      free_vars =a (field 2 *match*)
                                      bound_vars =a (field 1 *match*)
                                      set_of_closures_id =a (field 0 *match*)
                                      closure_id =a (field 0 *match*))
                                     (before middle_end/flambda/import_approx.ml(156):6383-6873
                                       (let
                                         (value_set_of_closures =
                                            (after middle_end/flambda/import_approx.ml(157):6419-6590
                                              (apply
                                                import_value_set_of_closures
                                                set_of_closures_id bound_vars
                                                free_vars ex_info
                                                (after middle_end/flambda/import_approx.ml(159):6526-6590
                                                  (apply
                                                    (field 126
                                                      (global Stdlib__format!))
                                                    [0:
                                                     [11:
                                                      "Value_closure "
                                                      [15: 0a]]
                                                     "Value_closure %a"]
                                                    (field 5
                                                      (global Closure_id!))
                                                    closure_id)))))
                                         (before middle_end/flambda/import_approx.ml(161):6606-6873
                                           (if value_set_of_closures
                                             (let
                                               (value_set_of_closures =a
                                                  (field 0
                                                    value_set_of_closures))
                                               (before middle_end/flambda/import_approx.ml(164):6766-6863
                                                 (after middle_end/flambda/import_approx.ml(164):6766-6863
                                                   (apply
                                                     (field 24
                                                       (global Simple_value_approx!))
                                                     0a 0a aliased_symbol
                                                     value_set_of_closures
                                                     closure_id))))
                                             (before middle_end/flambda/import_approx.ml(162):6661-6719
                                               (after middle_end/flambda/import_approx.ml(162):6661-6719
                                                 (apply
                                                   (field 23
                                                     (global Simple_value_approx!))
                                                   (makeblock 0
                                                     set_of_closures_id)))))))))
                                  case tag 10:
                                   (let
                                     (*match* =a (field 0 val)
                                      aliased_symbol =a (field 4 *match*)
                                      free_vars =a (field 2 *match*)
                                      bound_vars =a (field 1 *match*)
                                      set_of_closures_id =a (field 0 *match*))
                                     (before middle_end/flambda/import_approx.ml(169):6981-7496
                                       (let
                                         (value_set_of_closures =
                                            (after middle_end/flambda/import_approx.ml(170):7017-7137
                                              (apply
                                                import_value_set_of_closures
                                                set_of_closures_id bound_vars
                                                free_vars ex_info
                                                "Value_set_of_closures")))
                                         (before middle_end/flambda/import_approx.ml(173):7153-7496
                                           (if value_set_of_closures
                                             (let
                                               (value_set_of_closures =a
                                                  (field 0
                                                    value_set_of_closures))
                                               (before middle_end/flambda/import_approx.ml(177):7315-7496
                                                 (let
                                                   (approx =
                                                      (after middle_end/flambda/import_approx.ml(177):7328-7373
                                                        (apply
                                                          (field 25
                                                            (global Simple_value_approx!))
                                                          0a
                                                          value_set_of_closures)))
                                                   (before middle_end/flambda/import_approx.ml(178):7385-7496
                                                     (if aliased_symbol
                                                       (let
                                                         (symbol =a
                                                            (field 0
                                                              aliased_symbol))
                                                         (before middle_end/flambda/import_approx.ml(180):7461-7496
                                                           (after middle_end/flambda/import_approx.ml(180):7461-7496
                                                             (apply
                                                               (field 39
                                                                 (global Simple_value_approx!))
                                                               approx symbol))))
                                                       (before middle_end/flambda/import_approx.ml(179):7429-7435
                                                         approx))))))
                                             (before middle_end/flambda/import_approx.ml(175):7210-7268
                                               (after middle_end/flambda/import_approx.ml(175):7210-7268
                                                 (apply
                                                   (field 23
                                                     (global Simple_value_approx!))
                                                   (makeblock 0
                                                     set_of_closures_id)))))))))))))
                           (before middle_end/flambda/import_approx.ml(121):5020-5041
                             (after middle_end/flambda/import_approx.ml(121):5020-5041
                               (apply (field 9 (global Simple_value_approx!))
                                 0a))))))))))))
        import_approx
          (function ap
            (funct-body middle_end/flambda/import_approx.ml(182)<ghost>:7516-7682
              (before middle_end/flambda/import_approx.ml(183):7546-7682
                (switch* ap
                 case int 0:
                  (before middle_end/flambda/import_approx.ml(184):7581-7602
                    (after middle_end/flambda/import_approx.ml(184):7581-7602
                      (apply (field 9 (global Simple_value_approx!)) 0a)))
                 case tag 0:
                  (let (ex =a (field 0 ap))
                    (before middle_end/flambda/import_approx.ml(185):7622-7639
                      (after middle_end/flambda/import_approx.ml(185):7622-7639
                        (apply (field 20 (global Simple_value_approx!)) ex))))
                 case tag 1:
                  (let (sym =a (field 0 ap))
                    (before middle_end/flambda/import_approx.ml(186):7664-7682
                      (after middle_end/flambda/import_approx.ml(186):7664-7682
                        (apply (field 21 (global Simple_value_approx!)) sym)))))))))
      (let
        (import_symbol =
           (function sym
             (funct-body middle_end/flambda/import_approx.ml(188)<ghost>:7702-8302
               (before middle_end/flambda/import_approx.ml(189):7710-8302
                 (if
                   (after middle_end/flambda/import_approx.ml(189):7713-7750
                     (apply (field 10 (global Compilenv!)) sym))
                   (before middle_end/flambda/import_approx.ml(190):7760-7781
                     (after middle_end/flambda/import_approx.ml(190):7760-7781
                       (apply (field 9 (global Simple_value_approx!)) 0a)))
                   (before middle_end/flambda/import_approx.ml(191):7789-8302
                     (let
                       (compilation_unit =
                          (after middle_end/flambda/import_approx.ml(192):7822-7849
                            (apply (field 12 (global Symbol!)) sym)))
                       (before middle_end/flambda/import_approx.ml(193):7857-8296
                         (let
                           (*match* =
                              (after middle_end/flambda/import_approx.ml(193):7863-7907
                                (apply (field 19 (global Compilenv!))
                                  compilation_unit)))
                           (if *match*
                             (let (export_info =a (field 0 *match*))
                               (before middle_end/flambda/import_approx.ml(196):7991-8296
                                 (catch
                                   (try
                                     (exit 10
                                       (after middle_end/flambda/import_approx.ml(196):7997-8038
                                         (apply
                                           (field 26
                                             (field 7 (global Symbol!)))
                                           sym (field 2 export_info))))
                                    with exn
                                     (if (== exn (field 7 (global Stdlib!)))
                                       (before middle_end/flambda/import_approx.ml(199):8146-8296
                                         (after middle_end/flambda/import_approx.ml(199):8146-8296
                                           (apply (field 1 (global Misc!))
                                             [0:
                                              [11:
                                               "Compilation unit = "
                                               [15:
                                                [11:
                                                 " Cannot find symbol "
                                                 [15: 0a]]]]
                                              "Compilation unit = %a Cannot find symbol %a"]
                                             (field 5
                                               (global Compilation_unit!))
                                             compilation_unit
                                             (field 5 (global Symbol!)) sym)))
                                       (reraise exn)))
                                  with (10 approx)
                                   (before middle_end/flambda/import_approx.ml(197):8062-8106
                                     (after middle_end/flambda/import_approx.ml(197):8062-8106
                                       (apply
                                         (field 39
                                           (global Simple_value_approx!))
                                         (after middle_end/flambda/import_approx.ml(197):8084-8102
                                           (apply import_ex approx))
                                         sym))))))
                             (before middle_end/flambda/import_approx.ml(194):7927-7958
                               (after middle_end/flambda/import_approx.ml(194):7927-7958
                                 (apply
                                   (field 23 (global Simple_value_approx!))
                                   (makeblock 1 sym))))))))))))))
        (letrec
          (really_import
             (function approx
               (funct-body middle_end/flambda/import_approx.ml(209)<ghost>:8495-8638
                 (before middle_end/flambda/import_approx.ml(210):8518-8638
                   (catch
                     (switch approx
                      case tag 11:
                       (let (ex =a (field 0 approx))
                         (before middle_end/flambda/import_approx.ml(211):8559-8578
                           (after middle_end/flambda/import_approx.ml(211):8559-8578
                             (apply really_import_ex ex))))
                      case tag 12:
                       (let (sym =a (field 0 approx))
                         (before middle_end/flambda/import_approx.ml(212):8603-8627
                           (after middle_end/flambda/import_approx.ml(212):8603-8627
                             (apply really_import_symbol sym))))
                      default: (exit 12))
                    with (12)
                     (let (r =a approx)
                       (before middle_end/flambda/import_approx.ml(213):8637-8638
                         r))))))
            really_import_ex
              (function ex
                (funct-body middle_end/flambda/import_approx.ml(215)<ghost>:8661-8702
                  (before middle_end/flambda/import_approx.ml(216):8668-8702
                    (after middle_end/flambda/import_approx.ml(216):8668-8702
                      (apply really_import
                        (field 0
                          (after middle_end/flambda/import_approx.ml(216):8682-8696
                            (apply import_ex ex))))))))
            really_import_symbol
              (function sym
                (funct-body middle_end/flambda/import_approx.ml(218)<ghost>:8729-8776
                  (before middle_end/flambda/import_approx.ml(219):8737-8776
                    (after middle_end/flambda/import_approx.ml(219):8737-8776
                      (apply really_import
                        (field 0
                          (after middle_end/flambda/import_approx.ml(219):8751-8770
                            (apply import_symbol sym)))))))))
          (let
            (really_import_approx =
               (function approx
                 (funct-body middle_end/flambda/import_approx.ml(221)<ghost>:8803-8897
                   (before middle_end/flambda/import_approx.ml(222):8840-8897
                     (after middle_end/flambda/import_approx.ml(222):8840-8897
                       (apply (field 41 (global Simple_value_approx!)) approx
                         (after middle_end/flambda/import_approx.ml(222):8869-8897
                           (apply really_import (field 0 approx)))))))))
            (pseudo _none_(0)<ghost>:-1--1
              (makeblock 0 really_import really_import_approx import_symbol))))))))
