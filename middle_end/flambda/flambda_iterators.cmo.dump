(setglobal Flambda_iterators!
  (let
    (apply_on_subexpressions =
       (function f f_named flam
         (funct-body middle_end/flambda/flambda_iterators.ml(20)<ghost>:1266-2037
           (before middle_end/flambda/flambda_iterators.ml(21):1299-2037
             (catch
               (switch flam
                case tag 1:
                 (let
                   (*match* =a (field 0 flam)
                    body =a (field 2 *match*)
                    defining_expr =a (field 1 *match*))
                   (before middle_end/flambda/flambda_iterators.ml(25):1443-1476
                     (seq
                       (after middle_end/flambda/flambda_iterators.ml(25):1443-1464
                         (apply f_named defining_expr))
                       (before middle_end/flambda/flambda_iterators.ml(26):1470-1476
                         (after middle_end/flambda/flambda_iterators.ml(26):1470-1476
                           (apply f body))))))
                case tag 2:
                 (let (*match* =a (field 0 flam) body =a (field 3 *match*))
                   (before middle_end/flambda/flambda_iterators.ml(28):1512-1518
                     (after middle_end/flambda/flambda_iterators.ml(28):1512-1518
                       (apply f body))))
                case tag 3:
                 (let (body =a (field 1 flam) defs =a (field 0 flam))
                   (before middle_end/flambda/flambda_iterators.ml(30):1551-1602
                     (seq
                       (after middle_end/flambda/flambda_iterators.ml(30):1551-1590
                         (apply (field 14 (global Stdlib__list!))
                           (function param
                             (funct-body middle_end/flambda/flambda_iterators.ml(30):1561-1585
                               (let (l =a (field 1 param))
                                 (before middle_end/flambda/flambda_iterators.ml(30):1575-1584
                                   (after middle_end/flambda/flambda_iterators.ml(30):1575-1584
                                     (apply f_named l))))))
                           defs))
                       (before middle_end/flambda/flambda_iterators.ml(31):1596-1602
                         (after middle_end/flambda/flambda_iterators.ml(31):1596-1602
                           (apply f body))))))
                case tag 7:
                 (let (f2 =a (field 2 flam) f1 =a (field 1 flam))
                   (before middle_end/flambda/flambda_iterators.ml(44):1962-1971
                     (seq
                       (after middle_end/flambda/flambda_iterators.ml(44):1962-1966
                         (apply f f1))
                       (before middle_end/flambda/flambda_iterators.ml(44):1967-1971
                         (after middle_end/flambda/flambda_iterators.ml(44):1967-1971
                           (apply f f2))))))
                case tag 8:
                 (let (sw =a (field 1 flam))
                   (before middle_end/flambda/flambda_iterators.ml(33):1629-1744
                     (seq
                       (after middle_end/flambda/flambda_iterators.ml(33):1629-1667
                         (apply (field 14 (global Stdlib__list!))
                           (function param
                             (funct-body middle_end/flambda/flambda_iterators.ml(33):1639-1657
                               (let (l =a (field 1 param))
                                 (before middle_end/flambda/flambda_iterators.ml(33):1653-1656
                                   (after middle_end/flambda/flambda_iterators.ml(33):1653-1656
                                     (apply f l))))))
                           (field 1 sw)))
                       (before middle_end/flambda/flambda_iterators.ml(34):1673-1744
                         (seq
                           (after middle_end/flambda/flambda_iterators.ml(34):1673-1711
                             (apply (field 14 (global Stdlib__list!))
                               (function param
                                 (funct-body middle_end/flambda/flambda_iterators.ml(34):1683-1701
                                   (let (l =a (field 1 param))
                                     (before middle_end/flambda/flambda_iterators.ml(34):1697-1700
                                       (after middle_end/flambda/flambda_iterators.ml(34):1697-1700
                                         (apply f l))))))
                               (field 3 sw)))
                           (before middle_end/flambda/flambda_iterators.ml(35):1717-1744
                             (after middle_end/flambda/flambda_iterators.ml(35):1717-1744
                               (apply (field 8 (global Stdlib__option!)) f
                                 (field 4 sw)))))))))
                case tag 9:
                 (let (def =a (field 2 flam) sw =a (field 1 flam))
                   (before middle_end/flambda/flambda_iterators.ml(37):1783-1837
                     (seq
                       (after middle_end/flambda/flambda_iterators.ml(37):1783-1814
                         (apply (field 14 (global Stdlib__list!))
                           (function param
                             (funct-body middle_end/flambda/flambda_iterators.ml(37):1793-1811
                               (let (l =a (field 1 param))
                                 (before middle_end/flambda/flambda_iterators.ml(37):1807-1810
                                   (after middle_end/flambda/flambda_iterators.ml(37):1807-1810
                                     (apply f l))))))
                           sw))
                       (before middle_end/flambda/flambda_iterators.ml(38):1820-1837
                         (after middle_end/flambda/flambda_iterators.ml(38):1820-1837
                           (apply (field 8 (global Stdlib__option!)) f def))))))
                case tag 11:
                 (let (f2 =a (field 3 flam) f1 =a (field 2 flam))
                   (before middle_end/flambda/flambda_iterators.ml(40):1874-1885
                     (seq
                       (after middle_end/flambda/flambda_iterators.ml(40):1874-1878
                         (apply f f1))
                       (before middle_end/flambda/flambda_iterators.ml(40):1880-1884
                         (after middle_end/flambda/flambda_iterators.ml(40):1880-1884
                           (apply f f2))))))
                case tag 12:
                 (let (f2 =a (field 2 flam) f1 =a (field 0 flam))
                   (before middle_end/flambda/flambda_iterators.ml(42):1916-1926
                     (seq
                       (after middle_end/flambda/flambda_iterators.ml(42):1916-1920
                         (apply f f1))
                       (before middle_end/flambda/flambda_iterators.ml(42):1922-1926
                         (after middle_end/flambda/flambda_iterators.ml(42):1922-1926
                           (apply f f2))))))
                case tag 13:
                 (let (f2 =a (field 1 flam) f1 =a (field 0 flam))
                   (before middle_end/flambda/flambda_iterators.ml(46):1997-2007
                     (seq
                       (after middle_end/flambda/flambda_iterators.ml(46):1997-2001
                         (apply f f1))
                       (before middle_end/flambda/flambda_iterators.ml(46):2003-2007
                         (after middle_end/flambda/flambda_iterators.ml(46):2003-2007
                           (apply f f2))))))
                case tag 14:
                 (let (*match* =a (field 0 flam) body =a (field 4 *match*))
                   (before middle_end/flambda/flambda_iterators.ml(47):2031-2037
                     (after middle_end/flambda/flambda_iterators.ml(47):2031-2037
                       (apply f body))))
                default: (exit 1))
              with (1)
               (before middle_end/flambda/flambda_iterators.ml(23):1398-1400
                 0a))))))
    (letrec
      (list_map_sharing
         (function f l
           (funct-body middle_end/flambda/flambda_iterators.ml(49)<ghost>:2064-2248
             (before middle_end/flambda/flambda_iterators.ml(50):2072-2248
               (if l
                 (let (t =a (field 1 l) h =a (field 0 l))
                   (before middle_end/flambda/flambda_iterators.ml(53):2115-2248
                     (let
                       (new_t =
                          (after middle_end/flambda/flambda_iterators.ml(53):2127-2147
                            (apply list_map_sharing f t)))
                       (before middle_end/flambda/flambda_iterators.ml(54):2155-2248
                         (let
                           (new_h =
                              (after middle_end/flambda/flambda_iterators.ml(54):2167-2170
                                (apply f h)))
                           (before middle_end/flambda/flambda_iterators.ml(55):2178-2248
                             (if (&& (== h new_h) (== t new_t))
                               (before middle_end/flambda/flambda_iterators.ml(56):2217-2218
                                 l)
                               (before middle_end/flambda/flambda_iterators.ml(58):2234-2248
                                 (makeblock 0 new_h new_t)))))))))
                 (before middle_end/flambda/flambda_iterators.ml(51):2095-2096
                   l))))))
      (let
        (may_map_sharing =
           (function f v
             (funct-body middle_end/flambda/flambda_iterators.ml(60)<ghost>:2270-2398
               (before middle_end/flambda/flambda_iterators.ml(61):2278-2398
                 (if v
                   (let (s =a (field 0 v))
                     (before middle_end/flambda/flambda_iterators.ml(64):2323-2398
                       (let
                         (new_s =
                            (after middle_end/flambda/flambda_iterators.ml(64):2335-2338
                              (apply f s)))
                         (before middle_end/flambda/flambda_iterators.ml(65):2346-2398
                           (if (== s new_s)
                             (before middle_end/flambda/flambda_iterators.ml(66):2371-2372
                               v)
                             (before middle_end/flambda/flambda_iterators.ml(68):2388-2398
                               (makeblock 0 new_s)))))))
                   (before middle_end/flambda/flambda_iterators.ml(62):2303-2304
                     v)))))
         map_snd_sharing =
           (function f cpl
             (funct-body middle_end/flambda/flambda_iterators.ml(70)<ghost>:2420-2513
               (let (b =a (field 1 cpl) a =a (field 0 cpl))
                 (before middle_end/flambda/flambda_iterators.ml(71):2442-2513
                   (let
                     (new_b =
                        (after middle_end/flambda/flambda_iterators.ml(71):2454-2459
                          (apply f a b)))
                     (before middle_end/flambda/flambda_iterators.ml(72):2465-2513
                       (if (== b new_b)
                         (before middle_end/flambda/flambda_iterators.ml(73):2488-2491
                           cpl)
                         (before middle_end/flambda/flambda_iterators.ml(75):2503-2513
                           (makeblock 0 a new_b)))))))))
         map_subexpressions =
           (function f f_named tree
             (funct-body middle_end/flambda/flambda_iterators.ml(77)<ghost>:2538-5240
               (before middle_end/flambda/flambda_iterators.ml(78):2581-5240
                 (catch
                   (switch tree
                    case tag 1:
                     (let
                       (*match* =a (field 0 tree)
                        body =a (field 2 *match*)
                        defining_expr =a (field 1 *match*)
                        var =a (field 0 *match*))
                       (before middle_end/flambda/flambda_iterators.ml(82):2732-2932
                         (let
                           (new_named =
                              (after middle_end/flambda/flambda_iterators.ml(82):2748-2773
                                (apply f_named var defining_expr)))
                           (before middle_end/flambda/flambda_iterators.ml(83):2781-2932
                             (let
                               (new_body =
                                  (after middle_end/flambda/flambda_iterators.ml(83):2796-2802
                                    (apply f body)))
                               (before middle_end/flambda/flambda_iterators.ml(84):2810-2932
                                 (if
                                   (&& (== new_named defining_expr)
                                     (== new_body body))
                                   (before middle_end/flambda/flambda_iterators.ml(85):2871-2875
                                     tree)
                                   (before middle_end/flambda/flambda_iterators.ml(87):2891-2932
                                     (after middle_end/flambda/flambda_iterators.ml(87):2891-2932
                                       (apply (field 11 (global Flambda!))
                                         var new_named new_body))))))))))
                    case tag 2:
                     (let (mutable_let =a (field 0 tree))
                       (before middle_end/flambda/flambda_iterators.ml(98):3209-3361
                         (let
                           (new_body =
                              (after middle_end/flambda/flambda_iterators.ml(98):3224-3242
                                (apply f (field 3 mutable_let))))
                           (before middle_end/flambda/flambda_iterators.ml(99):3250-3361
                             (if (== new_body (field 3 mutable_let))
                               (before middle_end/flambda/flambda_iterators.ml(100):3293-3297
                                 tree)
                               (before middle_end/flambda/flambda_iterators.ml(102):3313-3361
                                 (makeblock 2
                                   (let (init = mutable_let)
                                     (makeblock 0 (field 0 init)
                                       (field 1 init) (field 2 init)
                                       new_body)))))))))
                    case tag 3:
                     (let (body =a (field 1 tree) defs =a (field 0 tree))
                       (before middle_end/flambda/flambda_iterators.ml(89):2965-3173
                         (let
                           (new_defs =
                              (after middle_end/flambda/flambda_iterators.ml(90):2986-3033
                                (apply list_map_sharing
                                  (after middle_end/flambda/flambda_iterators.ml(90):3003-3028
                                    (apply map_snd_sharing f_named))
                                  defs)))
                           (before middle_end/flambda/flambda_iterators.ml(92):3045-3173
                             (let
                               (new_body =
                                  (after middle_end/flambda/flambda_iterators.ml(92):3060-3066
                                    (apply f body)))
                               (before middle_end/flambda/flambda_iterators.ml(93):3074-3173
                                 (if
                                   (&& (== new_defs defs) (== new_body body))
                                   (before middle_end/flambda/flambda_iterators.ml(94):3125-3129
                                     tree)
                                   (before middle_end/flambda/flambda_iterators.ml(96):3145-3173
                                     (makeblock 3 new_defs new_body)))))))))
                    case tag 7:
                     (let
                       (ifnot =a (field 2 tree)
                        ifso =a (field 1 tree)
                        arg =a (field 0 tree))
                       (before middle_end/flambda/flambda_iterators.ml(143):4667-4838
                         (let
                           (new_ifso =
                              (after middle_end/flambda/flambda_iterators.ml(143):4682-4688
                                (apply f ifso)))
                           (before middle_end/flambda/flambda_iterators.ml(144):4696-4838
                             (let
                               (new_ifnot =
                                  (after middle_end/flambda/flambda_iterators.ml(144):4712-4719
                                    (apply f ifnot)))
                               (before middle_end/flambda/flambda_iterators.ml(145):4727-4838
                                 (if
                                   (&& (== new_ifso ifso)
                                     (== new_ifnot ifnot))
                                   (before middle_end/flambda/flambda_iterators.ml(146):4780-4784
                                     tree)
                                   (before middle_end/flambda/flambda_iterators.ml(148):4800-4838
                                     (makeblock 7 arg new_ifso new_ifnot)))))))))
                    case tag 8:
                     (let (sw =a (field 1 tree) arg =a (field 0 tree))
                       (before middle_end/flambda/flambda_iterators.ml(104):3390-3913
                         (let
                           (aux =
                              (after middle_end/flambda/flambda_iterators.ml(104):3400-3432
                                (apply map_snd_sharing
                                  (function param[int] v
                                    (funct-body middle_end/flambda/flambda_iterators.ml(104):3416-3432
                                      (before middle_end/flambda/flambda_iterators.ml(104):3428-3431
                                        (after middle_end/flambda/flambda_iterators.ml(104):3428-3431
                                          (apply f v))))))))
                           (before middle_end/flambda/flambda_iterators.ml(105):3440-3913
                             (let
                               (new_consts =
                                  (after middle_end/flambda/flambda_iterators.ml(105):3457-3487
                                    (apply list_map_sharing aux (field 1 sw))))
                               (before middle_end/flambda/flambda_iterators.ml(106):3495-3913
                                 (let
                                   (new_blocks =
                                      (after middle_end/flambda/flambda_iterators.ml(106):3512-3542
                                        (apply list_map_sharing aux
                                          (field 3 sw))))
                                   (before middle_end/flambda/flambda_iterators.ml(107):3550-3913
                                     (let
                                       (new_failaction =
                                          (after middle_end/flambda/flambda_iterators.ml(107):3571-3602
                                            (apply may_map_sharing f
                                              (field 4 sw))))
                                       (before middle_end/flambda/flambda_iterators.ml(108):3610-3913
                                         (if
                                           (&&
                                             (== (field 4 sw) new_failaction)
                                             (&& (== new_consts (field 1 sw))
                                               (== new_blocks (field 3 sw))))
                                           (before middle_end/flambda/flambda_iterators.ml(111):3724-3728
                                             tree)
                                           (before middle_end/flambda/flambda_iterators.ml(113):3744-3913
                                             (let
                                               (sw =
                                                  (let (init = sw)
                                                    (makeblock 0
                                                      (field 0 init)
                                                      new_consts
                                                      (field 2 init)
                                                      new_blocks
                                                      new_failaction)))
                                               (before middle_end/flambda/flambda_iterators.ml(120):3897-3913
                                                 (makeblock 8 arg sw)))))))))))))))
                    case tag 9:
                     (let
                       (def =a (field 2 tree)
                        sw =a (field 1 tree)
                        arg =a (field 0 tree))
                       (before middle_end/flambda/flambda_iterators.ml(122):3954-4172
                         (let
                           (new_sw =
                              (after middle_end/flambda/flambda_iterators.ml(122):3967-4021
                                (apply list_map_sharing
                                  (after middle_end/flambda/flambda_iterators.ml(122):3984-4018
                                    (apply map_snd_sharing
                                      (function param v
                                        (funct-body middle_end/flambda/flambda_iterators.ml(122):4001-4017
                                          (before middle_end/flambda/flambda_iterators.ml(122):4013-4016
                                            (after middle_end/flambda/flambda_iterators.ml(122):4013-4016
                                              (apply f v)))))))
                                  sw)))
                           (before middle_end/flambda/flambda_iterators.ml(123):4029-4172
                             (let
                               (new_def =
                                  (after middle_end/flambda/flambda_iterators.ml(123):4043-4064
                                    (apply may_map_sharing f def)))
                               (before middle_end/flambda/flambda_iterators.ml(124):4072-4172
                                 (if (&& (== sw new_sw) (== def new_def))
                                   (before middle_end/flambda/flambda_iterators.ml(125):4117-4121
                                     tree)
                                   (before middle_end/flambda/flambda_iterators.ml(127):4137-4172
                                     (makeblock 9 arg new_sw new_def)))))))))
                    case tag 11:
                     (let
                       (handler =a (field 3 tree)
                        body =a (field 2 tree)
                        vars =a (field 1 tree)
                        i =a (field 0 tree))
                       (before middle_end/flambda/flambda_iterators.ml(129):4222-4408
                         (let
                           (new_body =
                              (after middle_end/flambda/flambda_iterators.ml(129):4237-4243
                                (apply f body)))
                           (before middle_end/flambda/flambda_iterators.ml(130):4251-4408
                             (let
                               (new_handler =
                                  (after middle_end/flambda/flambda_iterators.ml(130):4269-4278
                                    (apply f handler)))
                               (before middle_end/flambda/flambda_iterators.ml(131):4286-4408
                                 (if
                                   (&& (== new_body body)
                                     (== new_handler handler))
                                   (before middle_end/flambda/flambda_iterators.ml(132):4343-4347
                                     tree)
                                   (before middle_end/flambda/flambda_iterators.ml(134):4363-4408
                                     (makeblock 11 i vars new_body
                                       new_handler)))))))))
                    case tag 12:
                     (let
                       (handler =a (field 2 tree)
                        id =a (field 1 tree)
                        body =a (field 0 tree))
                       (before middle_end/flambda/flambda_iterators.ml(136):4448-4624
                         (let
                           (new_body =
                              (after middle_end/flambda/flambda_iterators.ml(136):4463-4469
                                (apply f body)))
                           (before middle_end/flambda/flambda_iterators.ml(137):4477-4624
                             (let
                               (new_handler =
                                  (after middle_end/flambda/flambda_iterators.ml(137):4495-4504
                                    (apply f handler)))
                               (before middle_end/flambda/flambda_iterators.ml(138):4512-4624
                                 (if
                                   (&& (== body new_body)
                                     (== handler new_handler))
                                   (before middle_end/flambda/flambda_iterators.ml(139):4569-4573
                                     tree)
                                   (before middle_end/flambda/flambda_iterators.ml(141):4589-4624
                                     (makeblock 12 new_body id new_handler)))))))))
                    case tag 13:
                     (let (body =a (field 1 tree) cond =a (field 0 tree))
                       (before middle_end/flambda/flambda_iterators.ml(150):4868-5022
                         (let
                           (new_cond =
                              (after middle_end/flambda/flambda_iterators.ml(150):4883-4889
                                (apply f cond)))
                           (before middle_end/flambda/flambda_iterators.ml(151):4897-5022
                             (let
                               (new_body =
                                  (after middle_end/flambda/flambda_iterators.ml(151):4912-4918
                                    (apply f body)))
                               (before middle_end/flambda/flambda_iterators.ml(152):4926-5022
                                 (if
                                   (&& (== new_cond cond) (== new_body body))
                                   (before middle_end/flambda/flambda_iterators.ml(153):4977-4981
                                     tree)
                                   (before middle_end/flambda/flambda_iterators.ml(155):4997-5022
                                     (makeblock 13 new_cond new_body)))))))))
                    case tag 14:
                     (let
                       (*match* =a (field 0 tree)
                        body =a (field 4 *match*)
                        direction =a (field 3 *match*)
                        to_value =a (field 2 *match*)
                        from_value =a (field 1 *match*)
                        bound_var =a (field 0 *match*))
                       (before middle_end/flambda/flambda_iterators.ml(157):5092-5240
                         (let
                           (new_body =
                              (after middle_end/flambda/flambda_iterators.ml(157):5107-5113
                                (apply f body)))
                           (before middle_end/flambda/flambda_iterators.ml(158):5121-5240
                             (if (== new_body body)
                               (before middle_end/flambda/flambda_iterators.ml(159):5152-5156
                                 tree)
                               (before middle_end/flambda/flambda_iterators.ml(161):5172-5240
                                 (makeblock 14
                                   (makeblock 0 bound_var from_value to_value
                                     direction new_body))))))))
                    default: (exit 2))
                  with (2)
                   (before middle_end/flambda/flambda_iterators.ml(80):2680-2684
                     tree)))))
         iter_general = (field 25 (global Flambda!))
         iter =
           (function f f_named t
             (funct-body middle_end/flambda/flambda_iterators.ml(165)<ghost>:5292-5356
               (before middle_end/flambda/flambda_iterators.ml(165):5306-5356
                 (after middle_end/flambda/flambda_iterators.ml(165):5306-5356
                   (apply iter_general 0a f f_named (makeblock 0 t))))))
         iter_expr =
           (function f t
             (funct-body middle_end/flambda/flambda_iterators.ml(166)<ghost>:5371-5399
               (before middle_end/flambda/flambda_iterators.ml(166):5377-5399
                 (after middle_end/flambda/flambda_iterators.ml(166):5377-5399
                   (apply iter f
                     (function param
                       (funct-body middle_end/flambda/flambda_iterators.ml(166):5384-5397
                         (before middle_end/flambda/flambda_iterators.ml(166):5394-5396
                           0a)))
                     t)))))
         iter_on_named =
           (function f f_named t
             (funct-body middle_end/flambda/flambda_iterators.ml(167)<ghost>:5418-5485
               (before middle_end/flambda/flambda_iterators.ml(168):5434-5485
                 (after middle_end/flambda/flambda_iterators.ml(168):5434-5485
                   (apply iter_general 0a f f_named (makeblock 1 t))))))
         iter_named =
           (function f_named t
             (funct-body middle_end/flambda/flambda_iterators.ml(169)<ghost>:5501-5555
               (before middle_end/flambda/flambda_iterators.ml(169):5513-5555
                 (after middle_end/flambda/flambda_iterators.ml(169):5513-5555
                   (apply iter
                     (function param
                       (funct-body middle_end/flambda/flambda_iterators.ml(169):5518-5545
                         (before middle_end/flambda/flambda_iterators.ml(169):5542-5544
                           0a)))
                     f_named t)))))
         iter_named_on_named =
           (function f_named named
             (funct-body middle_end/flambda/flambda_iterators.ml(170)<ghost>:5580-5683
               (before middle_end/flambda/flambda_iterators.ml(171):5598-5683
                 (after middle_end/flambda/flambda_iterators.ml(171):5598-5683
                   (apply iter_general 0a
                     (function param
                       (funct-body middle_end/flambda/flambda_iterators.ml(171):5627-5654
                         (before middle_end/flambda/flambda_iterators.ml(171):5651-5653
                           0a)))
                     f_named (makeblock 1 named))))))
         iter_toplevel =
           (function f f_named t
             (funct-body middle_end/flambda/flambda_iterators.ml(174)<ghost>:5703-5768
               (before middle_end/flambda/flambda_iterators.ml(175):5719-5768
                 (after middle_end/flambda/flambda_iterators.ml(175):5719-5768
                   (apply iter_general 1a f f_named (makeblock 0 t))))))
         iter_named_toplevel =
           (function f f_named named
             (funct-body middle_end/flambda/flambda_iterators.ml(176)<ghost>:5793-5867
               (before middle_end/flambda/flambda_iterators.ml(177):5813-5867
                 (after middle_end/flambda/flambda_iterators.ml(177):5813-5867
                   (apply iter_general 1a f f_named (makeblock 1 named))))))
         iter_all_immutable_let_and_let_rec_bindings =
           (function t f
             (funct-body middle_end/flambda/flambda_iterators.ml(179)<ghost>:5917-6107
               (before middle_end/flambda/flambda_iterators.ml(180):5926-6107
                 (after middle_end/flambda/flambda_iterators.ml(180):5926-6107
                   (apply iter_expr
                     (function param
                       (funct-body middle_end/flambda/flambda_iterators.ml(180):5936-6101
                         (catch
                           (switch param
                            case tag 1:
                             (let
                               (*match* =a (field 0 param)
                                defining_expr =a (field 1 *match*)
                                var =a (field 0 *match*))
                               (before middle_end/flambda/flambda_iterators.ml(181):5987-6006
                                 (after middle_end/flambda/flambda_iterators.ml(181):5987-6006
                                   (apply f var defining_expr))))
                            case tag 3:
                             (let (defs =a (field 0 param))
                               (before middle_end/flambda/flambda_iterators.ml(182):6036-6084
                                 (after middle_end/flambda/flambda_iterators.ml(182):6036-6084
                                   (apply (field 14 (global Stdlib__list!))
                                     (function param
                                       (funct-body middle_end/flambda/flambda_iterators.ml(182):6046-6079
                                         (let
                                           (named =a (field 1 param)
                                            var =a (field 0 param))
                                           (before middle_end/flambda/flambda_iterators.ml(182):6067-6078
                                             (after middle_end/flambda/flambda_iterators.ml(182):6067-6078
                                               (apply f var named))))))
                                     defs))))
                            default: (exit 3))
                          with (3)
                           (before middle_end/flambda/flambda_iterators.ml(183):6098-6100
                             0a))))
                     t)))))
         iter_all_toplevel_immutable_let_and_let_rec_bindings =
           (function t f
             (funct-body middle_end/flambda/flambda_iterators.ml(186)<ghost>:6166-6406
               (before middle_end/flambda/flambda_iterators.ml(187):6175-6406
                 (after middle_end/flambda/flambda_iterators.ml(187):6175-6406
                   (apply iter_general 1a
                     (function param
                       (funct-body middle_end/flambda/flambda_iterators.ml(188):6207-6372
                         (catch
                           (switch param
                            case tag 1:
                             (let
                               (*match* =a (field 0 param)
                                defining_expr =a (field 1 *match*)
                                var =a (field 0 *match*))
                               (before middle_end/flambda/flambda_iterators.ml(189):6258-6277
                                 (after middle_end/flambda/flambda_iterators.ml(189):6258-6277
                                   (apply f var defining_expr))))
                            case tag 3:
                             (let (defs =a (field 0 param))
                               (before middle_end/flambda/flambda_iterators.ml(190):6307-6355
                                 (after middle_end/flambda/flambda_iterators.ml(190):6307-6355
                                   (apply (field 14 (global Stdlib__list!))
                                     (function param
                                       (funct-body middle_end/flambda/flambda_iterators.ml(190):6317-6350
                                         (let
                                           (named =a (field 1 param)
                                            var =a (field 0 param))
                                           (before middle_end/flambda/flambda_iterators.ml(190):6338-6349
                                             (after middle_end/flambda/flambda_iterators.ml(190):6338-6349
                                               (apply f var named))))))
                                     defs))))
                            default: (exit 4))
                          with (4)
                           (before middle_end/flambda/flambda_iterators.ml(191):6369-6371
                             0a))))
                     (function param
                       (funct-body middle_end/flambda/flambda_iterators.ml(192):6377-6390
                         (before middle_end/flambda/flambda_iterators.ml(192):6387-6389
                           0a)))
                     (makeblock 0 t))))))
         iter_on_sets_of_closures =
           (function f t
             (funct-body middle_end/flambda/flambda_iterators.ml(195)<ghost>:6437-6707
               (before middle_end/flambda/flambda_iterators.ml(196):6445-6707
                 (after middle_end/flambda/flambda_iterators.ml(196):6445-6707
                   (apply iter_named
                     (function param
                       (funct-body middle_end/flambda/flambda_iterators.ml(196):6456-6701
                         (switch param
                          case tag 5:
                           (let (clos =a (field 0 param))
                             (before middle_end/flambda/flambda_iterators.ml(197):6498-6504
                               (after middle_end/flambda/flambda_iterators.ml(197):6498-6504
                                 (apply f clos))))
                          default:
                           (before middle_end/flambda/flambda_iterators.ml(201):6698-6700
                             0a))))
                     t)))))
         iter_exprs_at_toplevel_of_program =
           (function program f
             (funct-body middle_end/flambda/flambda_iterators.ml(204)<ghost>:6747-7723
               (before middle_end/flambda/flambda_iterators.ml(205):6782-7723
                 (letrec
                   (loop
                      (function program
                        (funct-body middle_end/flambda/flambda_iterators.ml(205)<ghost>:6795-7690
                          (before middle_end/flambda/flambda_iterators.ml(206):6834-7690
                            (switch* program
                             case tag 0:
                              (let (*match* =a (field 1 program))
                                (switch *match*
                                 case tag 2:
                                  (let
                                    (program =a (field 2 program)
                                     set_of_closures =a (field 0 *match*))
                                    (before middle_end/flambda/flambda_iterators.ml(208):6925-7095
                                      (seq
                                        (after middle_end/flambda/flambda_iterators.ml(208):6925-7075
                                          (apply
                                            (field 11
                                              (field 7 (global Variable!)))
                                            (function param function_decl
                                              (funct-body middle_end/flambda/flambda_iterators.ml(208):6943-7031
                                                (before middle_end/flambda/flambda_iterators.ml(209):7010-7030
                                                  (after middle_end/flambda/flambda_iterators.ml(209):7010-7030
                                                    (apply f
                                                      (field 2 function_decl))))))
                                            (field 3
                                              (field 0 set_of_closures))))
                                        (before middle_end/flambda/flambda_iterators.ml(211):7083-7095
                                          (after middle_end/flambda/flambda_iterators.ml(211):7083-7095
                                            (apply loop program))))))
                                 default:
                                  (let (program =a (field 2 program))
                                    (before middle_end/flambda/flambda_iterators.ml(222):7499-7511
                                      (after middle_end/flambda/flambda_iterators.ml(222):7499-7511
                                        (apply loop program))))))
                             case tag 1:
                              (let
                                (program =a (field 1 program)
                                 defs =a (field 0 program))
                                (before middle_end/flambda/flambda_iterators.ml(213):7142-7456
                                  (seq
                                    (after middle_end/flambda/flambda_iterators.ml(213):7142-7436
                                      (apply
                                        (field 14 (global Stdlib__list!))
                                        (function param
                                          (funct-body middle_end/flambda/flambda_iterators.ml(213):7152-7431
                                            (let (*match* =a (field 1 param))
                                              (switch *match*
                                               case tag 2:
                                                (let
                                                  (set_of_closures =a
                                                     (field 0 *match*))
                                                  (before middle_end/flambda/flambda_iterators.ml(215):7234-7410
                                                    (after middle_end/flambda/flambda_iterators.ml(215):7234-7410
                                                      (apply
                                                        (field 11
                                                          (field 7
                                                            (global Variable!)))
                                                        (function param
                                                          function_decl
                                                          (funct-body middle_end/flambda/flambda_iterators.ml(216):7266-7360
                                                            (before middle_end/flambda/flambda_iterators.ml(217):7339-7359
                                                              (after middle_end/flambda/flambda_iterators.ml(217):7339-7359
                                                                (apply f
                                                                  (field 2
                                                                    function_decl))))))
                                                        (field 3
                                                          (field 0
                                                            set_of_closures))))))
                                               default:
                                                (before middle_end/flambda/flambda_iterators.ml(219):7428-7430
                                                  0a)))))
                                        defs))
                                    (before middle_end/flambda/flambda_iterators.ml(220):7444-7456
                                      (after middle_end/flambda/flambda_iterators.ml(220):7444-7456
                                        (apply loop program))))))
                             case tag 2:
                              (let
                                (program =a (field 3 program)
                                 fields =a (field 2 program))
                                (before middle_end/flambda/flambda_iterators.ml(224):7569-7607
                                  (seq
                                    (after middle_end/flambda/flambda_iterators.ml(224):7569-7587
                                      (apply
                                        (field 14 (global Stdlib__list!)) f
                                        fields))
                                    (before middle_end/flambda/flambda_iterators.ml(225):7595-7607
                                      (after middle_end/flambda/flambda_iterators.ml(225):7595-7607
                                        (apply loop program))))))
                             case tag 3:
                              (let
                                (program =a (field 1 program)
                                 expr =a (field 0 program))
                                (before middle_end/flambda/flambda_iterators.ml(227):7646-7672
                                  (seq
                                    (after middle_end/flambda/flambda_iterators.ml(227):7646-7652
                                      (apply f expr))
                                    (before middle_end/flambda/flambda_iterators.ml(228):7660-7672
                                      (after middle_end/flambda/flambda_iterators.ml(228):7660-7672
                                        (apply loop program))))))
                             case tag 4:
                              (before middle_end/flambda/flambda_iterators.ml(229):7688-7690
                                0a))))))
                   (before middle_end/flambda/flambda_iterators.ml(231):7698-7723
                     (after middle_end/flambda/flambda_iterators.ml(231):7698-7723
                       (apply loop (field 1 program))))))))
         iter_named_of_program =
           (function program f
             (funct-body middle_end/flambda/flambda_iterators.ml(233)<ghost>:7751-7825
               (before middle_end/flambda/flambda_iterators.ml(234):7766-7825
                 (after middle_end/flambda/flambda_iterators.ml(234):7766-7825
                   (apply iter_exprs_at_toplevel_of_program program
                     (after middle_end/flambda/flambda_iterators.ml(234):7811-7825
                       (apply iter_named f)))))))
         iter_on_set_of_closures_of_program =
           (function program f
             (funct-body middle_end/flambda/flambda_iterators.ml(236)<ghost>:7866-9102
               (before middle_end/flambda/flambda_iterators.ml(237):7901-9102
                 (letrec
                   (loop
                      (function program
                        (funct-body middle_end/flambda/flambda_iterators.ml(237)<ghost>:7914-9069
                          (before middle_end/flambda/flambda_iterators.ml(238):7953-9069
                            (switch* program
                             case tag 0:
                              (let (*match* =a (field 1 program))
                                (switch *match*
                                 case tag 2:
                                  (let
                                    (program =a (field 2 program)
                                     set_of_closures =a (field 0 *match*))
                                    (before middle_end/flambda/flambda_iterators.ml(240):8044-8297
                                      (seq
                                        (after middle_end/flambda/flambda_iterators.ml(240):8044-8076
                                          (apply f 1a set_of_closures))
                                        (before middle_end/flambda/flambda_iterators.ml(241):8084-8297
                                          (seq
                                            (after middle_end/flambda/flambda_iterators.ml(241):8084-8277
                                              (apply
                                                (field 11
                                                  (field 7
                                                    (global Variable!)))
                                                (function param function_decl
                                                  (funct-body middle_end/flambda/flambda_iterators.ml(241):8102-8233
                                                    (before middle_end/flambda/flambda_iterators.ml(242):8169-8232
                                                      (after middle_end/flambda/flambda_iterators.ml(242):8169-8232
                                                        (apply
                                                          iter_on_sets_of_closures
                                                          (after middle_end/flambda/flambda_iterators.ml(242):8194-8213
                                                            (apply f 0a))
                                                          (field 2
                                                            function_decl))))))
                                                (field 3
                                                  (field 0 set_of_closures))))
                                            (before middle_end/flambda/flambda_iterators.ml(244):8285-8297
                                              (after middle_end/flambda/flambda_iterators.ml(244):8285-8297
                                                (apply loop program))))))))
                                 default:
                                  (let (program =a (field 2 program))
                                    (before middle_end/flambda/flambda_iterators.ml(256):8790-8802
                                      (after middle_end/flambda/flambda_iterators.ml(256):8790-8802
                                        (apply loop program))))))
                             case tag 1:
                              (let
                                (program =a (field 1 program)
                                 defs =a (field 0 program))
                                (before middle_end/flambda/flambda_iterators.ml(246):8344-8747
                                  (seq
                                    (after middle_end/flambda/flambda_iterators.ml(246):8344-8727
                                      (apply
                                        (field 14 (global Stdlib__list!))
                                        (function param
                                          (funct-body middle_end/flambda/flambda_iterators.ml(246):8354-8722
                                            (let (*match* =a (field 1 param))
                                              (switch *match*
                                               case tag 2:
                                                (let
                                                  (set_of_closures =a
                                                     (field 0 *match*))
                                                  (before middle_end/flambda/flambda_iterators.ml(248):8436-8701
                                                    (seq
                                                      (after middle_end/flambda/flambda_iterators.ml(248):8436-8468
                                                        (apply f 1a
                                                          set_of_closures))
                                                      (before middle_end/flambda/flambda_iterators.ml(249):8482-8701
                                                        (after middle_end/flambda/flambda_iterators.ml(249):8482-8701
                                                          (apply
                                                            (field 11
                                                              (field 7
                                                                (global Variable!)))
                                                            (function param
                                                              function_decl
                                                              (funct-body middle_end/flambda/flambda_iterators.ml(250):8514-8651
                                                                (before middle_end/flambda/flambda_iterators.ml(251):8587-8650
                                                                  (after middle_end/flambda/flambda_iterators.ml(251):8587-8650
                                                                    (apply
                                                                    iter_on_sets_of_closures
                                                                    (after middle_end/flambda/flambda_iterators.ml(251):8612-8631
                                                                    (apply f
                                                                    0a))
                                                                    (field 2
                                                                    function_decl))))))
                                                            (field 3
                                                              (field 0
                                                                set_of_closures))))))))
                                               default:
                                                (before middle_end/flambda/flambda_iterators.ml(253):8719-8721
                                                  0a)))))
                                        defs))
                                    (before middle_end/flambda/flambda_iterators.ml(254):8735-8747
                                      (after middle_end/flambda/flambda_iterators.ml(254):8735-8747
                                        (apply loop program))))))
                             case tag 2:
                              (let
                                (program =a (field 3 program)
                                 fields =a (field 2 program))
                                (before middle_end/flambda/flambda_iterators.ml(258):8860-8943
                                  (seq
                                    (after middle_end/flambda/flambda_iterators.ml(258):8860-8923
                                      (apply
                                        (field 14 (global Stdlib__list!))
                                        (after middle_end/flambda/flambda_iterators.ml(258):8870-8916
                                          (apply iter_on_sets_of_closures
                                            (after middle_end/flambda/flambda_iterators.ml(258):8896-8915
                                              (apply f 0a))))
                                        fields))
                                    (before middle_end/flambda/flambda_iterators.ml(259):8931-8943
                                      (after middle_end/flambda/flambda_iterators.ml(259):8931-8943
                                        (apply loop program))))))
                             case tag 3:
                              (let
                                (program =a (field 1 program)
                                 expr =a (field 0 program))
                                (before middle_end/flambda/flambda_iterators.ml(261):8982-9051
                                  (seq
                                    (after middle_end/flambda/flambda_iterators.ml(261):8982-9031
                                      (apply iter_on_sets_of_closures
                                        (after middle_end/flambda/flambda_iterators.ml(261):9007-9026
                                          (apply f 0a))
                                        expr))
                                    (before middle_end/flambda/flambda_iterators.ml(262):9039-9051
                                      (after middle_end/flambda/flambda_iterators.ml(262):9039-9051
                                        (apply loop program))))))
                             case tag 4:
                              (before middle_end/flambda/flambda_iterators.ml(263):9067-9069
                                0a))))))
                   (before middle_end/flambda/flambda_iterators.ml(265):9077-9102
                     (after middle_end/flambda/flambda_iterators.ml(265):9077-9102
                       (apply loop (field 1 program))))))))
         iter_constant_defining_values_on_program =
           (function program f
             (funct-body middle_end/flambda/flambda_iterators.ml(267)<ghost>:9149-9601
               (before middle_end/flambda/flambda_iterators.ml(268):9184-9601
                 (letrec
                   (loop
                      (function program
                        (funct-body middle_end/flambda/flambda_iterators.ml(268)<ghost>:9197-9568
                          (before middle_end/flambda/flambda_iterators.ml(269):9236-9568
                            (switch* program
                             case tag 0:
                              (let
                                (program =a (field 2 program)
                                 const =a (field 1 program))
                                (before middle_end/flambda/flambda_iterators.ml(271):9301-9328
                                  (seq
                                    (after middle_end/flambda/flambda_iterators.ml(271):9301-9308
                                      (apply f const))
                                    (before middle_end/flambda/flambda_iterators.ml(272):9316-9328
                                      (after middle_end/flambda/flambda_iterators.ml(272):9316-9328
                                        (apply loop program))))))
                             case tag 1:
                              (let
                                (program =a (field 1 program)
                                 defs =a (field 0 program))
                                (before middle_end/flambda/flambda_iterators.ml(274):9375-9437
                                  (seq
                                    (after middle_end/flambda/flambda_iterators.ml(274):9375-9417
                                      (apply
                                        (field 14 (global Stdlib__list!))
                                        (function param
                                          (funct-body middle_end/flambda/flambda_iterators.ml(274):9385-9412
                                            (let (const =a (field 1 param))
                                              (before middle_end/flambda/flambda_iterators.ml(274):9404-9411
                                                (after middle_end/flambda/flambda_iterators.ml(274):9404-9411
                                                  (apply f const))))))
                                        defs))
                                    (before middle_end/flambda/flambda_iterators.ml(275):9425-9437
                                      (after middle_end/flambda/flambda_iterators.ml(275):9425-9437
                                        (apply loop program))))))
                             case tag 2:
                              (let (program =a (field 3 program))
                                (before middle_end/flambda/flambda_iterators.ml(277):9490-9502
                                  (after middle_end/flambda/flambda_iterators.ml(277):9490-9502
                                    (apply loop program))))
                             case tag 3:
                              (let (program =a (field 1 program))
                                (before middle_end/flambda/flambda_iterators.ml(279):9538-9550
                                  (after middle_end/flambda/flambda_iterators.ml(279):9538-9550
                                    (apply loop program))))
                             case tag 4:
                              (before middle_end/flambda/flambda_iterators.ml(280):9566-9568
                                0a))))))
                   (before middle_end/flambda/flambda_iterators.ml(282):9576-9601
                     (after middle_end/flambda/flambda_iterators.ml(282):9576-9601
                       (apply loop (field 1 program))))))))
         map_general =
           (function toplevel f f_named tree
             (funct-body middle_end/flambda/flambda_iterators.ml(284)<ghost>:9619-15178
               (before middle_end/flambda/flambda_iterators.ml(285):9648-15178
                 (letrec
                   (aux
                      (function tree
                        (funct-body middle_end/flambda/flambda_iterators.ml(285)<ghost>:9660-13214
                          (before middle_end/flambda/flambda_iterators.ml(286):9685-13214
                            (catch
                              (switch tree
                               case tag 1:
                                (before middle_end/flambda/flambda_iterators.ml(288):9722-9816
                                  (after middle_end/flambda/flambda_iterators.ml(288):9722-9816
                                    (apply (field 9 (global Flambda!)) tree
                                      aux_named aux f)))
                               default: (exit 11))
                             with (11)
                              (before middle_end/flambda/flambda_iterators.ml(291):9834-13214
                                (let
                                  (exp =
                                     (catch
                                       (switch tree
                                        case tag 1:
                                         (before middle_end/flambda/flambda_iterators.ml(295):9999-10011
                                           (raise
                                             (after middle_end/flambda/flambda_iterators.ml(295):9999-10011
                                               (makeblock 0
                                                 (global Assert_failure!)
                                                 [0:
                                                  "middle_end/flambda/flambda_iterators.ml"
                                                  295 19]))))
                                        case tag 2:
                                         (let (mutable_let =a (field 0 tree))
                                           (before middle_end/flambda/flambda_iterators.ml(297):10059-10237
                                             (let
                                               (new_body =
                                                  (after middle_end/flambda/flambda_iterators.ml(297):10074-10094
                                                    (apply aux
                                                      (field 3 mutable_let))))
                                               (before middle_end/flambda/flambda_iterators.ml(298):10108-10237
                                                 (if
                                                   (== new_body
                                                     (field 3 mutable_let))
                                                   (before middle_end/flambda/flambda_iterators.ml(299):10157-10161
                                                     tree)
                                                   (before middle_end/flambda/flambda_iterators.ml(301):10189-10237
                                                     (makeblock 2
                                                       (let
                                                         (init = mutable_let)
                                                         (makeblock 0
                                                           (field 0 init)
                                                           (field 1 init)
                                                           (field 2 init)
                                                           new_body)))))))))
                                        case tag 3:
                                         (let
                                           (body =a (field 1 tree)
                                            defs =a (field 0 tree))
                                           (before middle_end/flambda/flambda_iterators.ml(303):10282-10641
                                             (let
                                               (done_something =
                                                  (makemutable 0 0a))
                                               (before middle_end/flambda/flambda_iterators.ml(304):10326-10641
                                                 (let
                                                   (defs =
                                                      (after middle_end/flambda/flambda_iterators.ml(305):10349-10462
                                                        (apply
                                                          (field 16
                                                            (global Stdlib__list!))
                                                          (function param
                                                            (funct-body middle_end/flambda/flambda_iterators.ml(305):10358-10443
                                                              (let
                                                                (lam =a
                                                                   (field 1
                                                                    param)
                                                                 id =a
                                                                   (field 0
                                                                    param))
                                                                (before middle_end/flambda/flambda_iterators.ml(306):10392-10442
                                                                  (makeblock 0
                                                                    id
                                                                    (after middle_end/flambda/flambda_iterators.ml(306):10396-10442
                                                                    (apply
                                                                    aux_named_done_something
                                                                    id lam
                                                                    done_something)))))))
                                                          defs)))
                                                   (before middle_end/flambda/flambda_iterators.ml(309):10486-10641
                                                     (let
                                                       (body =
                                                          (after middle_end/flambda/flambda_iterators.ml(309):10497-10535
                                                            (apply
                                                              aux_done_something
                                                              body
                                                              done_something)))
                                                       (before middle_end/flambda/flambda_iterators.ml(310):10549-10641
                                                         (if
                                                           (not
                                                             (field 0
                                                               done_something))
                                                           (before middle_end/flambda/flambda_iterators.ml(311):10589-10593
                                                             tree)
                                                           (before middle_end/flambda/flambda_iterators.ml(313):10621-10641
                                                             (makeblock 3
                                                               defs body)))))))))))
                                        case tag 7:
                                         (let
                                           (ifnot =a (field 2 tree)
                                            ifso =a (field 1 tree)
                                            arg =a (field 0 tree))
                                           (before middle_end/flambda/flambda_iterators.ml(367):12485-12691
                                             (let
                                               (new_ifso =
                                                  (after middle_end/flambda/flambda_iterators.ml(367):12500-12508
                                                    (apply aux ifso)))
                                               (before middle_end/flambda/flambda_iterators.ml(368):12522-12691
                                                 (let
                                                   (new_ifnot =
                                                      (after middle_end/flambda/flambda_iterators.ml(368):12538-12547
                                                        (apply aux ifnot)))
                                                   (before middle_end/flambda/flambda_iterators.ml(369):12561-12691
                                                     (if
                                                       (&& (== new_ifso ifso)
                                                         (== new_ifnot ifnot))
                                                       (before middle_end/flambda/flambda_iterators.ml(370):12620-12624
                                                         tree)
                                                       (before middle_end/flambda/flambda_iterators.ml(372):12652-12691
                                                         (makeblock 7 arg
                                                           new_ifso
                                                           new_ifnot)))))))))
                                        case tag 8:
                                         (let
                                           (sw =a (field 1 tree)
                                            arg =a (field 0 tree))
                                           (before middle_end/flambda/flambda_iterators.ml(315):10682-11419
                                             (let
                                               (done_something =
                                                  (makemutable 0 0a))
                                               (before middle_end/flambda/flambda_iterators.ml(316):10726-11419
                                                 (let
                                                   (sw =
                                                      (let (init = sw)
                                                        (makeblock 0
                                                          (field 0 init)
                                                          (after middle_end/flambda/flambda_iterators.ml(325):11029-11140
                                                            (apply
                                                              (field 16
                                                                (global Stdlib__list!))
                                                              (function param
                                                                (funct-body middle_end/flambda/flambda_iterators.ml(325):11038-11112
                                                                  (let
                                                                    (v =a
                                                                    (field 1
                                                                    param)
                                                                    i =a
                                                                    (field 0
                                                                    param))
                                                                    (before middle_end/flambda/flambda_iterators.ml(326):11073-11111
                                                                    (makeblock 0 (int,*)
                                                                    i
                                                                    (after middle_end/flambda/flambda_iterators.ml(326):11076-11111
                                                                    (apply
                                                                    aux_done_something
                                                                    v
                                                                    done_something)))))))
                                                              (field 1 sw)))
                                                          (field 2 init)
                                                          (after middle_end/flambda/flambda_iterators.ml(329):11181-11292
                                                            (apply
                                                              (field 16
                                                                (global Stdlib__list!))
                                                              (function param
                                                                (funct-body middle_end/flambda/flambda_iterators.ml(329):11190-11264
                                                                  (let
                                                                    (v =a
                                                                    (field 1
                                                                    param)
                                                                    i =a
                                                                    (field 0
                                                                    param))
                                                                    (before middle_end/flambda/flambda_iterators.ml(330):11225-11263
                                                                    (makeblock 0 (int,*)
                                                                    i
                                                                    (after middle_end/flambda/flambda_iterators.ml(330):11228-11263
                                                                    (apply
                                                                    aux_done_something
                                                                    v
                                                                    done_something)))))))
                                                              (field 3 sw)))
                                                          (let
                                                            (*match* =
                                                               (field 4 sw))
                                                            (if *match*
                                                              (let
                                                                (failaction =a
                                                                   (field 0
                                                                    *match*))
                                                                (before middle_end/flambda/flambda_iterators.ml(322):10917-10968
                                                                  (makeblock 0
                                                                    (after middle_end/flambda/flambda_iterators.ml(322):10922-10968
                                                                    (apply
                                                                    aux_done_something
                                                                    failaction
                                                                    done_something)))))
                                                              (before middle_end/flambda/flambda_iterators.ml(320):10857-10861
                                                                0a))))))
                                                   (before middle_end/flambda/flambda_iterators.ml(334):11331-11419
                                                     (if
                                                       (not
                                                         (field 0
                                                           done_something))
                                                       (before middle_end/flambda/flambda_iterators.ml(335):11371-11375
                                                         tree)
                                                       (before middle_end/flambda/flambda_iterators.ml(337):11403-11419
                                                         (makeblock 8 arg sw)))))))))
                                        case tag 9:
                                         (let
                                           (def =a (field 2 tree)
                                            sw =a (field 1 tree)
                                            arg =a (field 0 tree))
                                           (before middle_end/flambda/flambda_iterators.ml(339):11472-11884
                                             (let
                                               (done_something =
                                                  (makemutable 0 0a))
                                               (before middle_end/flambda/flambda_iterators.ml(340):11516-11884
                                                 (let
                                                   (sw =
                                                      (after middle_end/flambda/flambda_iterators.ml(341):11537-11603
                                                        (apply
                                                          (field 16
                                                            (global Stdlib__list!))
                                                          (function param
                                                            (funct-body middle_end/flambda/flambda_iterators.ml(341):11546-11600
                                                              (let
                                                                (v =a
                                                                   (field 1
                                                                    param)
                                                                 i =a
                                                                   (field 0
                                                                    param))
                                                                (before middle_end/flambda/flambda_iterators.ml(341):11561-11599
                                                                  (makeblock 0
                                                                    i
                                                                    (after middle_end/flambda/flambda_iterators.ml(341):11564-11599
                                                                    (apply
                                                                    aux_done_something
                                                                    v
                                                                    done_something)))))))
                                                          sw)))
                                                   (before middle_end/flambda/flambda_iterators.ml(343):11627-11884
                                                     (let
                                                       (def =
                                                          (if def
                                                            (let
                                                              (def =a
                                                                 (field 0
                                                                   def))
                                                              (before middle_end/flambda/flambda_iterators.ml(346):11717-11761
                                                                (makeblock 0
                                                                  (after middle_end/flambda/flambda_iterators.ml(346):11722-11761
                                                                    (apply
                                                                    aux_done_something
                                                                    def
                                                                    done_something)))))
                                                            (before middle_end/flambda/flambda_iterators.ml(345):11686-11690
                                                              0a)))
                                                       (before middle_end/flambda/flambda_iterators.ml(348):11785-11884
                                                         (if
                                                           (not
                                                             (field 0
                                                               done_something))
                                                           (before middle_end/flambda/flambda_iterators.ml(349):11825-11829
                                                             tree)
                                                           (before middle_end/flambda/flambda_iterators.ml(351):11857-11884
                                                             (makeblock 9 arg
                                                               sw def)))))))))))
                                        case tag 11:
                                         (let
                                           (handler =a (field 3 tree)
                                            body =a (field 2 tree)
                                            vars =a (field 1 tree)
                                            i =a (field 0 tree))
                                           (before middle_end/flambda/flambda_iterators.ml(353):11946-12166
                                             (let
                                               (new_body =
                                                  (after middle_end/flambda/flambda_iterators.ml(353):11961-11969
                                                    (apply aux body)))
                                               (before middle_end/flambda/flambda_iterators.ml(354):11983-12166
                                                 (let
                                                   (new_handler =
                                                      (after middle_end/flambda/flambda_iterators.ml(354):12001-12012
                                                        (apply aux handler)))
                                                   (before middle_end/flambda/flambda_iterators.ml(355):12026-12166
                                                     (if
                                                       (&& (== new_body body)
                                                         (== new_handler
                                                           handler))
                                                       (before middle_end/flambda/flambda_iterators.ml(356):12089-12093
                                                         tree)
                                                       (before middle_end/flambda/flambda_iterators.ml(358):12121-12166
                                                         (makeblock 11 i vars
                                                           new_body
                                                           new_handler)))))))))
                                        case tag 12:
                                         (let
                                           (handler =a (field 2 tree)
                                            id =a (field 1 tree)
                                            body =a (field 0 tree))
                                           (before middle_end/flambda/flambda_iterators.ml(360):12218-12429
                                             (let
                                               (new_body =
                                                  (after middle_end/flambda/flambda_iterators.ml(360):12233-12241
                                                    (apply aux body)))
                                               (before middle_end/flambda/flambda_iterators.ml(361):12255-12429
                                                 (let
                                                   (new_handler =
                                                      (after middle_end/flambda/flambda_iterators.ml(361):12273-12284
                                                        (apply aux handler)))
                                                   (before middle_end/flambda/flambda_iterators.ml(362):12298-12429
                                                     (if
                                                       (&& (== new_body body)
                                                         (== new_handler
                                                           handler))
                                                       (before middle_end/flambda/flambda_iterators.ml(363):12361-12365
                                                         tree)
                                                       (before middle_end/flambda/flambda_iterators.ml(365):12393-12429
                                                         (makeblock 12
                                                           new_body id
                                                           new_handler)))))))))
                                        case tag 13:
                                         (let
                                           (body =a (field 1 tree)
                                            cond =a (field 0 tree))
                                           (before middle_end/flambda/flambda_iterators.ml(374):12734-12923
                                             (let
                                               (new_cond =
                                                  (after middle_end/flambda/flambda_iterators.ml(374):12749-12757
                                                    (apply aux cond)))
                                               (before middle_end/flambda/flambda_iterators.ml(375):12771-12923
                                                 (let
                                                   (new_body =
                                                      (after middle_end/flambda/flambda_iterators.ml(375):12786-12794
                                                        (apply aux body)))
                                                   (before middle_end/flambda/flambda_iterators.ml(376):12808-12923
                                                     (if
                                                       (&& (== new_cond cond)
                                                         (== new_body body))
                                                       (before middle_end/flambda/flambda_iterators.ml(377):12865-12869
                                                         tree)
                                                       (before middle_end/flambda/flambda_iterators.ml(379):12897-12923
                                                         (makeblock 13
                                                           new_cond new_body)))))))))
                                        case tag 14:
                                         (let
                                           (*match* =a (field 0 tree)
                                            body =a (field 4 *match*)
                                            direction =a (field 3 *match*)
                                            to_value =a (field 2 *match*)
                                            from_value =a (field 1 *match*)
                                            bound_var =a (field 0 *match*))
                                           (before middle_end/flambda/flambda_iterators.ml(381):13005-13193
                                             (let
                                               (new_body =
                                                  (after middle_end/flambda/flambda_iterators.ml(381):13020-13028
                                                    (apply aux body)))
                                               (before middle_end/flambda/flambda_iterators.ml(382):13042-13193
                                                 (if (== new_body body)
                                                   (before middle_end/flambda/flambda_iterators.ml(383):13079-13083
                                                     tree)
                                                   (before middle_end/flambda/flambda_iterators.ml(385):13111-13193
                                                     (makeblock 14
                                                       (makeblock 0 bound_var
                                                         from_value to_value
                                                         direction new_body))))))))
                                        default: (exit 10))
                                      with (10)
                                       (before middle_end/flambda/flambda_iterators.ml(294):9975-9979
                                         tree)))
                                  (before middle_end/flambda/flambda_iterators.ml(388):13209-13214
                                    (after middle_end/flambda/flambda_iterators.ml(388):13209-13214
                                      (apply f exp)))))))))
                     aux_done_something
                       (function expr done_something
                         (funct-body middle_end/flambda/flambda_iterators.ml(389)<ghost>:13240-13384
                           (before middle_end/flambda/flambda_iterators.ml(390):13266-13384
                             (let
                               (new_expr =
                                  (after middle_end/flambda/flambda_iterators.ml(390):13281-13289
                                    (apply aux expr)))
                               (before middle_end/flambda/flambda_iterators.ml(391):13297-13384
                                 (seq
                                   (if (not (== new_expr expr))
                                     (before middle_end/flambda/flambda_iterators.ml(391):13328-13370
                                       (setfield_imm 0 done_something 1a))
                                     0a)
                                   (before middle_end/flambda/flambda_iterators.ml(394):13376-13384
                                     new_expr)))))))
                     aux_named
                       (function id named
                         (funct-body middle_end/flambda/flambda_iterators.ml(395)<ghost>:13401-14968
                           (before middle_end/flambda/flambda_iterators.ml(396):13449-14968
                             (let
                               (named =
                                  (switch named
                                   case tag 5:
                                    (let
                                      (*match* =a (field 0 named)
                                       direct_call_surrogates =a
                                         (field 3 *match*)
                                       specialised_args =a (field 2 *match*)
                                       free_vars =a (field 1 *match*)
                                       function_decls =a (field 0 *match*))
                                      (before middle_end/flambda/flambda_iterators.ml(403):13803-14818
                                        (if toplevel
                                          (before middle_end/flambda/flambda_iterators.ml(403):13820-13825
                                            named)
                                          (before middle_end/flambda/flambda_iterators.ml(404):13839-14818
                                            (let
                                              (done_something =
                                                 (makemutable 0 0a))
                                              (before middle_end/flambda/flambda_iterators.ml(406):13899-14806
                                                (let
                                                  (funs =
                                                     (after middle_end/flambda/flambda_iterators.ml(407):13922-14379
                                                       (apply
                                                         (field 32
                                                           (field 7
                                                             (global Variable!)))
                                                         (function func_decl
                                                           (funct-body middle_end/flambda/flambda_iterators.ml(407):13939-14345
                                                             (before middle_end/flambda/flambda_iterators.ml(408):14006-14344
                                                               (let
                                                                 (new_body =
                                                                    (after middle_end/flambda/flambda_iterators.ml(408):14021-14039
                                                                    (apply
                                                                    aux
                                                                    (field 2
                                                                    func_decl))))
                                                                 (before middle_end/flambda/flambda_iterators.ml(409):14059-14344
                                                                   (if
                                                                    (==
                                                                    new_body
                                                                    (field 2
                                                                    func_decl))
                                                                    (before middle_end/flambda/flambda_iterators.ml(409):14094-14147
                                                                    func_decl)
                                                                    (before middle_end/flambda/flambda_iterators.ml(411):14153-14344
                                                                    (seq
                                                                    (setfield_imm 0
                                                                    done_something
                                                                    1a)
                                                                    (before middle_end/flambda/flambda_iterators.ml(413):14219-14324
                                                                    (after middle_end/flambda/flambda_iterators.ml(413):14219-14324
                                                                    (apply
                                                                    (field 15
                                                                    (global Flambda!))
                                                                    func_decl
                                                                    (field 1
                                                                    func_decl)
                                                                    new_body)))))))))))
                                                         (field 3
                                                           function_decls))))
                                                  (before middle_end/flambda/flambda_iterators.ml(418):14403-14806
                                                    (if
                                                      (not
                                                        (field 0
                                                          done_something))
                                                      (before middle_end/flambda/flambda_iterators.ml(419):14443-14448
                                                        named)
                                                      (before middle_end/flambda/flambda_iterators.ml(421):14476-14806
                                                        (let
                                                          (function_decls =
                                                             (after middle_end/flambda/flambda_iterators.ml(422):14511-14568
                                                               (apply
                                                                 (field 20
                                                                   (global Flambda!))
                                                                 function_decls
                                                                 funs)))
                                                          (before middle_end/flambda/flambda_iterators.ml(424):14596-14806
                                                            (let
                                                              (set_of_closures =
                                                                 (after middle_end/flambda/flambda_iterators.ml(425):14632-14747
                                                                   (apply
                                                                    (field 23
                                                                    (global Flambda!))
                                                                    function_decls
                                                                    free_vars
                                                                    specialised_args
                                                                    direct_call_surrogates)))
                                                              (before middle_end/flambda/flambda_iterators.ml(428):14775-14806
                                                                (makeblock 5
                                                                  set_of_closures)))))))))))))))
                                   case tag 10:
                                    (let (expr =a (field 0 named))
                                      (before middle_end/flambda/flambda_iterators.ml(431):14848-14940
                                        (let
                                          (new_expr =
                                             (after middle_end/flambda/flambda_iterators.ml(431):14863-14871
                                               (apply aux expr)))
                                          (before middle_end/flambda/flambda_iterators.ml(432):14883-14940
                                            (if (== new_expr expr)
                                              (before middle_end/flambda/flambda_iterators.ml(432):14908-14913
                                                named)
                                              (before middle_end/flambda/flambda_iterators.ml(433):14927-14940
                                                (makeblock 10 new_expr)))))))
                                   default:
                                    (before middle_end/flambda/flambda_iterators.ml(400):13678-13683
                                      named)))
                               (before middle_end/flambda/flambda_iterators.ml(435):14952-14968
                                 (after middle_end/flambda/flambda_iterators.ml(435):14952-14968
                                   (apply f_named id named)))))))
                     aux_named_done_something
                       (function id named done_something
                         (funct-body middle_end/flambda/flambda_iterators.ml(436)<ghost>:15000-15162
                           (before middle_end/flambda/flambda_iterators.ml(437):15030-15162
                             (let
                               (new_named =
                                  (after middle_end/flambda/flambda_iterators.ml(437):15046-15064
                                    (apply aux_named id named)))
                               (before middle_end/flambda/flambda_iterators.ml(438):15072-15162
                                 (seq
                                   (if (not (== new_named named))
                                     (before middle_end/flambda/flambda_iterators.ml(438):15105-15147
                                       (setfield_imm 0 done_something 1a))
                                     0a)
                                   (before middle_end/flambda/flambda_iterators.ml(441):15153-15162
                                     new_named))))))))
                   (before middle_end/flambda/flambda_iterators.ml(443):15170-15178
                     (after middle_end/flambda/flambda_iterators.ml(443):15170-15178
                       (apply aux tree)))))))
         iter_apply_on_program =
           (function program f
             (funct-body middle_end/flambda/flambda_iterators.ml(445)<ghost>:15206-15381
               (before middle_end/flambda/flambda_iterators.ml(446):15221-15381
                 (after middle_end/flambda/flambda_iterators.ml(446):15221-15381
                   (apply iter_exprs_at_toplevel_of_program program
                     (function expr
                       (funct-body middle_end/flambda/flambda_iterators.ml(446):15266-15381
                         (before middle_end/flambda/flambda_iterators.ml(447):15283-15380
                           (after middle_end/flambda/flambda_iterators.ml(447):15283-15380
                             (apply iter
                               (function param
                                 (funct-body middle_end/flambda/flambda_iterators.ml(447):15288-15349
                                   (catch
                                     (switch param
                                      case tag 4:
                                       (let (apply =a (field 0 param))
                                         (before middle_end/flambda/flambda_iterators.ml(448):15323-15330
                                           (after middle_end/flambda/flambda_iterators.ml(448):15323-15330
                                             (apply f apply))))
                                      default: (exit 13))
                                    with (13)
                                     (before middle_end/flambda/flambda_iterators.ml(449):15346-15348
                                       0a))))
                               (function param
                                 (funct-body middle_end/flambda/flambda_iterators.ml(450):15356-15369
                                   (before middle_end/flambda/flambda_iterators.ml(450):15366-15368
                                     0a)))
                               expr))))))))))
         map =
           (function f f_named tree
             (funct-body middle_end/flambda/flambda_iterators.ml(453)<ghost>:15391-15467
               (before middle_end/flambda/flambda_iterators.ml(454):15410-15467
                 (after middle_end/flambda/flambda_iterators.ml(454):15410-15467
                   (apply map_general 0a f
                     (function param n
                       (funct-body middle_end/flambda/flambda_iterators.ml(454):15440-15462
                         (before middle_end/flambda/flambda_iterators.ml(454):15452-15461
                           (after middle_end/flambda/flambda_iterators.ml(454):15452-15461
                             (apply f_named n)))))
                     tree)))))
         map_expr =
           (function f tree
             (funct-body middle_end/flambda/flambda_iterators.ml(455)<ghost>:15481-15521
               (before middle_end/flambda/flambda_iterators.ml(455):15490-15521
                 (after middle_end/flambda/flambda_iterators.ml(455):15490-15521
                   (apply map f
                     (function named
                       (funct-body middle_end/flambda/flambda_iterators.ml(455):15496-15516
                         (before middle_end/flambda/flambda_iterators.ml(455):15510-15515
                           named)))
                     tree)))))
         map_named =
           (function f_named tree
             (funct-body middle_end/flambda/flambda_iterators.ml(456)<ghost>:15536-15586
               (before middle_end/flambda/flambda_iterators.ml(456):15551-15586
                 (after middle_end/flambda/flambda_iterators.ml(456):15551-15586
                   (apply map
                     (function expr
                       (funct-body middle_end/flambda/flambda_iterators.ml(456):15555-15573
                         (before middle_end/flambda/flambda_iterators.ml(456):15568-15572
                           expr)))
                     f_named tree)))))
         map_named_with_id =
           (function f_named tree
             (funct-body middle_end/flambda/flambda_iterators.ml(457)<ghost>:15609-15685
               (before middle_end/flambda/flambda_iterators.ml(458):15626-15685
                 (after middle_end/flambda/flambda_iterators.ml(458):15626-15685
                   (apply map_general 0a
                     (function expr
                       (funct-body middle_end/flambda/flambda_iterators.ml(458):15654-15672
                         (before middle_end/flambda/flambda_iterators.ml(458):15667-15671
                           expr)))
                     f_named tree)))))
         map_toplevel =
           (function f f_named tree
             (funct-body middle_end/flambda/flambda_iterators.ml(459)<ghost>:15703-15778
               (before middle_end/flambda/flambda_iterators.ml(460):15722-15778
                 (after middle_end/flambda/flambda_iterators.ml(460):15722-15778
                   (apply map_general 1a f
                     (function param n
                       (funct-body middle_end/flambda/flambda_iterators.ml(460):15751-15773
                         (before middle_end/flambda/flambda_iterators.ml(460):15763-15772
                           (after middle_end/flambda/flambda_iterators.ml(460):15763-15772
                             (apply f_named n)))))
                     tree)))))
         map_toplevel_expr =
           (function f_expr tree
             (funct-body middle_end/flambda/flambda_iterators.ml(461)<ghost>:15801-15862
               (before middle_end/flambda/flambda_iterators.ml(462):15817-15862
                 (after middle_end/flambda/flambda_iterators.ml(462):15817-15862
                   (apply map_toplevel f_expr
                     (function named
                       (funct-body middle_end/flambda/flambda_iterators.ml(462):15837-15857
                         (before middle_end/flambda/flambda_iterators.ml(462):15851-15856
                           named)))
                     tree)))))
         map_toplevel_named =
           (function f_named tree
             (funct-body middle_end/flambda/flambda_iterators.ml(463)<ghost>:15886-15947
               (before middle_end/flambda/flambda_iterators.ml(464):15903-15947
                 (after middle_end/flambda/flambda_iterators.ml(464):15903-15947
                   (apply map_toplevel
                     (function tree
                       (funct-body middle_end/flambda/flambda_iterators.ml(464):15916-15934
                         (before middle_end/flambda/flambda_iterators.ml(464):15929-15933
                           tree)))
                     f_named tree)))))
         map_symbols =
           (function tree f
             (funct-body middle_end/flambda/flambda_iterators.ml(466)<ghost>:15965-16537
               (before middle_end/flambda/flambda_iterators.ml(467):15977-16537
                 (after middle_end/flambda/flambda_iterators.ml(467):15977-16537
                   (apply map_named
                     (function named
                       (funct-body middle_end/flambda/flambda_iterators.ml(467):15987-16528
                         (switch named
                          case tag 0:
                           (let (sym =a (field 0 named))
                             (before middle_end/flambda/flambda_iterators.ml(469):16038-16145
                               (let
                                 (new_sym =
                                    (after middle_end/flambda/flambda_iterators.ml(469):16052-16057
                                      (apply f sym)))
                                 (before middle_end/flambda/flambda_iterators.ml(470):16069-16145
                                   (if (== new_sym sym)
                                     (before middle_end/flambda/flambda_iterators.ml(471):16102-16107
                                       named)
                                     (before middle_end/flambda/flambda_iterators.ml(473):16131-16145
                                       (makeblock 0 new_sym)))))))
                          case tag 4:
                           (let
                             (named =a named
                              field =a (field 1 named)
                              sym =a (field 0 named))
                             (before middle_end/flambda/flambda_iterators.ml(475):16209-16336
                               (let
                                 (new_sym =
                                    (after middle_end/flambda/flambda_iterators.ml(475):16223-16228
                                      (apply f sym)))
                                 (before middle_end/flambda/flambda_iterators.ml(476):16240-16336
                                   (if (== new_sym sym)
                                     (before middle_end/flambda/flambda_iterators.ml(477):16273-16278
                                       named)
                                     (before middle_end/flambda/flambda_iterators.ml(479):16302-16336
                                       (makeblock 4 (*,int) new_sym field)))))))
                          default:
                           (let (named =a named)
                             (before middle_end/flambda/flambda_iterators.ml(482):16522-16527
                               named)))))
                     tree)))))
         map_symbols_on_set_of_closures =
           (function set_of_closures f
             (funct-body middle_end/flambda/flambda_iterators.ml(486)<ghost>:16578-17363
               (let
                 (direct_call_surrogates =a (field 3 set_of_closures)
                  specialised_args =a (field 2 set_of_closures)
                  free_vars =a (field 1 set_of_closures)
                  function_decls =a (field 0 set_of_closures))
                 (before middle_end/flambda/flambda_iterators.ml(490):16705-17363
                   (let (done_something = (makemutable 0 0a))
                     (before middle_end/flambda/flambda_iterators.ml(491):16741-17363
                       (let
                         (funs =
                            (after middle_end/flambda/flambda_iterators.ml(492):16756-17095
                              (apply (field 32 (field 7 (global Variable!)))
                                (function func_decl
                                  (funct-body middle_end/flambda/flambda_iterators.ml(492):16773-17069
                                    (before middle_end/flambda/flambda_iterators.ml(493):16832-17068
                                      (let
                                        (body =
                                           (after middle_end/flambda/flambda_iterators.ml(493):16843-16872
                                             (apply map_symbols
                                               (field 2 func_decl) f)))
                                        (before middle_end/flambda/flambda_iterators.ml(494):16884-17068
                                          (seq
                                            (if
                                              (not
                                                (== body (field 2 func_decl)))
                                              (before middle_end/flambda/flambda_iterators.ml(494):16921-16972
                                                (setfield_imm 0
                                                  done_something 1a))
                                              0a)
                                            (before middle_end/flambda/flambda_iterators.ml(497):16982-17068
                                              (after middle_end/flambda/flambda_iterators.ml(497):16982-17068
                                                (apply
                                                  (field 15
                                                    (global Flambda!))
                                                  func_decl
                                                  (field 1 func_decl) body)))))))))
                                (field 3 function_decls))))
                         (before middle_end/flambda/flambda_iterators.ml(501):17103-17363
                           (if (not (field 0 done_something))
                             (before middle_end/flambda/flambda_iterators.ml(502):17135-17150
                               set_of_closures)
                             (before middle_end/flambda/flambda_iterators.ml(504):17162-17363
                               (let
                                 (function_decls =
                                    (after middle_end/flambda/flambda_iterators.ml(505):17189-17246
                                      (apply (field 20 (global Flambda!))
                                        function_decls funs)))
                                 (before middle_end/flambda/flambda_iterators.ml(507):17258-17363
                                   (after middle_end/flambda/flambda_iterators.ml(507):17258-17363
                                     (apply (field 23 (global Flambda!))
                                       function_decls free_vars
                                       specialised_args
                                       direct_call_surrogates))))))))))))))
         map_toplevel_sets_of_closures =
           (function tree f
             (funct-body middle_end/flambda/flambda_iterators.ml(510)<ghost>:17399-17898
               (before middle_end/flambda/flambda_iterators.ml(511):17411-17898
                 (after middle_end/flambda/flambda_iterators.ml(511):17411-17898
                   (apply map_toplevel_named
                     (function named
                       (funct-body middle_end/flambda/flambda_iterators.ml(511):17430-17889
                         (switch named
                          case tag 5:
                           (let (set_of_closures =a (field 0 named))
                             (before middle_end/flambda/flambda_iterators.ml(513):17502-17678
                               (let
                                 (new_set_of_closures =
                                    (after middle_end/flambda/flambda_iterators.ml(513):17528-17545
                                      (apply f set_of_closures)))
                                 (before middle_end/flambda/flambda_iterators.ml(514):17557-17678
                                   (if
                                     (== new_set_of_closures set_of_closures)
                                     (before middle_end/flambda/flambda_iterators.ml(515):17614-17619
                                       named)
                                     (before middle_end/flambda/flambda_iterators.ml(517):17643-17678
                                       (makeblock 5 new_set_of_closures)))))))
                          default:
                           (let (named =a named)
                             (before middle_end/flambda/flambda_iterators.ml(521):17883-17888
                               named)))))
                     tree)))))
         map_apply =
           (function tree f
             (funct-body middle_end/flambda/flambda_iterators.ml(524)<ghost>:17914-18152
               (before middle_end/flambda/flambda_iterators.ml(525):17926-18152
                 (after middle_end/flambda/flambda_iterators.ml(525):17926-18152
                   (apply map
                     (function expr
                       (funct-body middle_end/flambda/flambda_iterators.ml(525):17930-18118
                         (catch
                           (switch expr
                            case tag 4:
                             (let (apply =a (field 0 expr))
                               (before middle_end/flambda/flambda_iterators.ml(527):17981-18096
                                 (let
                                   (new_apply =
                                      (after middle_end/flambda/flambda_iterators.ml(527):17997-18004
                                        (apply f apply)))
                                   (before middle_end/flambda/flambda_iterators.ml(528):18016-18096
                                     (if (== new_apply apply)
                                       (before middle_end/flambda/flambda_iterators.ml(529):18053-18057
                                         expr)
                                       (before middle_end/flambda/flambda_iterators.ml(531):18081-18096
                                         (makeblock 4 new_apply)))))))
                            default: (exit 16))
                          with (16)
                           (let (expr =a expr)
                             (before middle_end/flambda/flambda_iterators.ml(532):18113-18117
                               expr)))))
                     (function named
                       (funct-body middle_end/flambda/flambda_iterators.ml(533):18123-18143
                         (before middle_end/flambda/flambda_iterators.ml(533):18137-18142
                           named)))
                     tree)))))
         map_sets_of_closures =
           (function tree f
             (funct-body middle_end/flambda/flambda_iterators.ml(536)<ghost>:18179-18669
               (before middle_end/flambda/flambda_iterators.ml(537):18191-18669
                 (after middle_end/flambda/flambda_iterators.ml(537):18191-18669
                   (apply map_named
                     (function named
                       (funct-body middle_end/flambda/flambda_iterators.ml(537):18201-18660
                         (switch named
                          case tag 5:
                           (let (set_of_closures =a (field 0 named))
                             (before middle_end/flambda/flambda_iterators.ml(539):18273-18449
                               (let
                                 (new_set_of_closures =
                                    (after middle_end/flambda/flambda_iterators.ml(539):18299-18316
                                      (apply f set_of_closures)))
                                 (before middle_end/flambda/flambda_iterators.ml(540):18328-18449
                                   (if
                                     (== new_set_of_closures set_of_closures)
                                     (before middle_end/flambda/flambda_iterators.ml(541):18385-18390
                                       named)
                                     (before middle_end/flambda/flambda_iterators.ml(543):18414-18449
                                       (makeblock 5 new_set_of_closures)))))))
                          default:
                           (let (named =a named)
                             (before middle_end/flambda/flambda_iterators.ml(547):18654-18659
                               named)))))
                     tree)))))
         map_project_var_to_expr_opt =
           (function tree f
             (funct-body middle_end/flambda/flambda_iterators.ml(550)<ghost>:18703-19116
               (before middle_end/flambda/flambda_iterators.ml(551):18715-19116
                 (after middle_end/flambda/flambda_iterators.ml(551):18715-19116
                   (apply map_named
                     (function named
                       (funct-body middle_end/flambda/flambda_iterators.ml(551):18725-19107
                         (switch named
                          case tag 8:
                           (let (project_var =a (field 0 named))
                             (before middle_end/flambda/flambda_iterators.ml(553):18789-18888
                               (let
                                 (*match* =
                                    (after middle_end/flambda/flambda_iterators.ml(553):18801-18814
                                      (apply f project_var)))
                                 (if *match*
                                   (let (expr =a (field 0 *match*))
                                     (before middle_end/flambda/flambda_iterators.ml(555):18867-18876
                                       (makeblock 10 expr)))
                                   (before middle_end/flambda/flambda_iterators.ml(554):18838-18843
                                     named)))))
                          default:
                           (let (named =a named)
                             (before middle_end/flambda/flambda_iterators.ml(560):19101-19106
                               named)))))
                     tree)))))
         map_project_var_to_named_opt =
           (function tree f
             (funct-body middle_end/flambda/flambda_iterators.ml(563)<ghost>:19151-19561
               (before middle_end/flambda/flambda_iterators.ml(564):19163-19561
                 (after middle_end/flambda/flambda_iterators.ml(564):19163-19561
                   (apply map_named
                     (function named
                       (funct-body middle_end/flambda/flambda_iterators.ml(564):19173-19552
                         (switch named
                          case tag 8:
                           (let (project_var =a (field 0 named))
                             (before middle_end/flambda/flambda_iterators.ml(566):19237-19333
                               (let
                                 (*match* =
                                    (after middle_end/flambda/flambda_iterators.ml(566):19249-19262
                                      (apply f project_var)))
                                 (if *match*
                                   (let (named =a (field 0 *match*))
                                     (before middle_end/flambda/flambda_iterators.ml(568):19316-19321
                                       named))
                                   (before middle_end/flambda/flambda_iterators.ml(567):19286-19291
                                     named)))))
                          default:
                           (let (named =a named)
                             (before middle_end/flambda/flambda_iterators.ml(573):19546-19551
                               named)))))
                     tree)))))
         map_function_bodies =
           (function set_of_closures f
             (funct-body middle_end/flambda/flambda_iterators.ml(576)<ghost>:19587-20502
               (before middle_end/flambda/flambda_iterators.ml(577):19638-20502
                 (let (done_something = (makemutable 0 0a))
                   (before middle_end/flambda/flambda_iterators.ml(578):19674-20502
                     (let
                       (funs =
                          (after middle_end/flambda/flambda_iterators.ml(579):19689-20102
                            (apply (field 32 (field 7 (global Variable!)))
                              (function function_decl
                                (funct-body middle_end/flambda/flambda_iterators.ml(579):19706-20060
                                  (before middle_end/flambda/flambda_iterators.ml(580):19769-20059
                                    (let
                                      (new_body =
                                         (after middle_end/flambda/flambda_iterators.ml(580):19784-19804
                                           (apply f (field 2 function_decl))))
                                      (before middle_end/flambda/flambda_iterators.ml(581):19816-20059
                                        (if
                                          (== new_body
                                            (field 2 function_decl))
                                          (before middle_end/flambda/flambda_iterators.ml(582):19865-19878
                                            function_decl)
                                          (before middle_end/flambda/flambda_iterators.ml(583):19892-20059
                                            (seq
                                              (setfield_imm 0 done_something
                                                1a)
                                              (before middle_end/flambda/flambda_iterators.ml(585):19942-20047
                                                (after middle_end/flambda/flambda_iterators.ml(585):19942-20047
                                                  (apply
                                                    (field 15
                                                      (global Flambda!))
                                                    function_decl
                                                    (field 1 function_decl)
                                                    new_body)))))))))))
                              (field 3 (field 0 set_of_closures)))))
                       (before middle_end/flambda/flambda_iterators.ml(590):20110-20502
                         (if (not (field 0 done_something))
                           (before middle_end/flambda/flambda_iterators.ml(591):20142-20157
                             set_of_closures)
                           (before middle_end/flambda/flambda_iterators.ml(593):20169-20502
                             (let
                               (function_decls =
                                  (after middle_end/flambda/flambda_iterators.ml(594):20196-20269
                                    (apply (field 20 (global Flambda!))
                                      (field 0 set_of_closures) funs)))
                               (before middle_end/flambda/flambda_iterators.ml(596):20281-20502
                                 (after middle_end/flambda/flambda_iterators.ml(596):20281-20502
                                   (apply (field 23 (global Flambda!))
                                     function_decls (field 1 set_of_closures)
                                     (field 2 set_of_closures)
                                     (field 3 set_of_closures))))))))))))))
         map_sets_of_closures_of_program =
           (function program f
             (funct-body middle_end/flambda/flambda_iterators.ml(602)<ghost>:20540-24212
               (before middle_end/flambda/flambda_iterators.ml(604):20634-24212
                 (letrec
                   (loop
                      (function program
                        (funct-body middle_end/flambda/flambda_iterators.ml(604)<ghost>:20647-24140
                          (before middle_end/flambda/flambda_iterators.ml(605):20709-24140
                            (let
                              (map_constant_set_of_closures =
                                 (function set_of_closures
                                   (funct-body middle_end/flambda/flambda_iterators.ml(605)<ghost>:20742-21955
                                     (before middle_end/flambda/flambda_iterators.ml(606):20792-21955
                                       (let
                                         (done_something = (makemutable 0 0a))
                                         (before middle_end/flambda/flambda_iterators.ml(607):20832-21955
                                           (let
                                             (function_decls =
                                                (let
                                                  (funs =
                                                     (after middle_end/flambda/flambda_iterators.ml(609):20882-21372
                                                       (apply
                                                         (field 32
                                                           (field 7
                                                             (global Variable!)))
                                                         (function
                                                           function_decl
                                                           (funct-body middle_end/flambda/flambda_iterators.ml(609):20899-21324
                                                             (before middle_end/flambda/flambda_iterators.ml(611):20986-21323
                                                               (let
                                                                 (body =
                                                                    (after middle_end/flambda/flambda_iterators.ml(611):20997-21039
                                                                    (apply
                                                                    map_sets_of_closures
                                                                    (field 2
                                                                    function_decl)
                                                                    f)))
                                                                 (before middle_end/flambda/flambda_iterators.ml(612):21057-21323
                                                                   (if
                                                                    (== body
                                                                    (field 2
                                                                    function_decl))
                                                                    (before middle_end/flambda/flambda_iterators.ml(613):21108-21121
                                                                    function_decl)
                                                                    (before middle_end/flambda/flambda_iterators.ml(614):21141-21323
                                                                    (seq
                                                                    (setfield_imm 0
                                                                    done_something
                                                                    1a)
                                                                    (before middle_end/flambda/flambda_iterators.ml(616):21203-21305
                                                                    (after middle_end/flambda/flambda_iterators.ml(616):21203-21305
                                                                    (apply
                                                                    (field 15
                                                                    (global Flambda!))
                                                                    function_decl
                                                                    (field 1
                                                                    function_decl)
                                                                    body)))))))))))
                                                         (field 3
                                                           (field 0
                                                             set_of_closures)))))
                                                  (before middle_end/flambda/flambda_iterators.ml(621):21392-21569
                                                    (if
                                                      (not
                                                        (field 0
                                                          done_something))
                                                      (before middle_end/flambda/flambda_iterators.ml(622):21430-21460
                                                        (field 0
                                                          set_of_closures))
                                                      (before middle_end/flambda/flambda_iterators.ml(624):21484-21569
                                                        (after middle_end/flambda/flambda_iterators.ml(624):21484-21569
                                                          (apply
                                                            (field 20
                                                              (global Flambda!))
                                                            (field 0
                                                              set_of_closures)
                                                            funs)))))))
                                             (before middle_end/flambda/flambda_iterators.ml(627):21585-21955
                                               (let
                                                 (new_set_of_closures =
                                                    (after middle_end/flambda/flambda_iterators.ml(627):21611-21628
                                                      (apply f
                                                        set_of_closures)))
                                                 (before middle_end/flambda/flambda_iterators.ml(628):21638-21955
                                                   (if
                                                     (== new_set_of_closures
                                                       set_of_closures)
                                                     (before middle_end/flambda/flambda_iterators.ml(629):21693-21708
                                                       set_of_closures)
                                                     (before middle_end/flambda/flambda_iterators.ml(631):21728-21955
                                                       (after middle_end/flambda/flambda_iterators.ml(631):21728-21955
                                                         (apply
                                                           (field 23
                                                             (global Flambda!))
                                                           function_decls
                                                           (field 1
                                                             set_of_closures)
                                                           (field 2
                                                             set_of_closures)
                                                           (field 3
                                                             set_of_closures)))))))))))))))
                              (before middle_end/flambda/flambda_iterators.ml(636):21967-24140
                                (switch* program
                                 case tag 0:
                                  (let
                                    (const =a (field 1 program)
                                     symbol =a (field 0 program))
                                    (switch const
                                     case tag 2:
                                      (let
                                        (program' =a (field 2 program)
                                         set_of_closures =a (field 0 const))
                                        (before middle_end/flambda/flambda_iterators.ml(638):22064-22376
                                          (let
                                            (new_set_of_closures =
                                               (after middle_end/flambda/flambda_iterators.ml(638):22090-22134
                                                 (apply
                                                   map_constant_set_of_closures
                                                   set_of_closures)))
                                            (before middle_end/flambda/flambda_iterators.ml(639):22144-22376
                                              (let
                                                (new_program' =
                                                   (after middle_end/flambda/flambda_iterators.ml(639):22163-22176
                                                     (apply loop program')))
                                                (before middle_end/flambda/flambda_iterators.ml(640):22186-22376
                                                  (if
                                                    (&&
                                                      (== new_set_of_closures
                                                        set_of_closures)
                                                      (== new_program'
                                                        program'))
                                                    (before middle_end/flambda/flambda_iterators.ml(642):22279-22286
                                                      program)
                                                    (before middle_end/flambda/flambda_iterators.ml(644):22306-22376
                                                      (makeblock 0 symbol
                                                        (makeblock 2
                                                          new_set_of_closures)
                                                        new_program')))))))))
                                     default:
                                      (let
                                        (symbol =a symbol
                                         program' =a (field 2 program))
                                        (before middle_end/flambda/flambda_iterators.ml(646):22429-22579
                                          (let
                                            (new_program' =
                                               (after middle_end/flambda/flambda_iterators.ml(646):22448-22461
                                                 (apply loop program')))
                                            (before middle_end/flambda/flambda_iterators.ml(647):22471-22579
                                              (if (== new_program' program')
                                                (before middle_end/flambda/flambda_iterators.ml(648):22512-22519
                                                  program)
                                                (before middle_end/flambda/flambda_iterators.ml(650):22539-22579
                                                  (makeblock 0 symbol const
                                                    new_program')))))))))
                                 case tag 1:
                                  (let
                                    (program' =a (field 1 program)
                                     defs =a (field 0 program))
                                    (before middle_end/flambda/flambda_iterators.ml(652):22627-23306
                                      (let
                                        (done_something = (makemutable 0 0a))
                                        (before middle_end/flambda/flambda_iterators.ml(653):22667-23306
                                          (let
                                            (defs =
                                               (after middle_end/flambda/flambda_iterators.ml(654):22686-23121
                                                 (apply
                                                   (field 16
                                                     (global Stdlib__list!))
                                                   (function def
                                                     (funct-body middle_end/flambda/flambda_iterators.ml(654):22695-23106
                                                       (let
                                                         (var =a
                                                            (field 0 def)
                                                          *match* =a
                                                            (field 1 def))
                                                         (switch *match*
                                                          case tag 2:
                                                           (let
                                                             (set_of_closures =a
                                                                (field 0
                                                                  *match*))
                                                             (before middle_end/flambda/flambda_iterators.ml(656):22783-23080
                                                               (let
                                                                 (new_set_of_closures =
                                                                    (after middle_end/flambda/flambda_iterators.ml(657):22825-22869
                                                                    (apply
                                                                    map_constant_set_of_closures
                                                                    set_of_closures)))
                                                                 (before middle_end/flambda/flambda_iterators.ml(659):22901-23080
                                                                   (seq
                                                                    (if
                                                                    (not
                                                                    (==
                                                                    new_set_of_closures
                                                                    set_of_closures))
                                                                    (before middle_end/flambda/flambda_iterators.ml(659):22954-23016
                                                                    (setfield_imm 0
                                                                    done_something
                                                                    1a)) 0a)
                                                                    (before middle_end/flambda/flambda_iterators.ml(662):23032-23080
                                                                    (makeblock 0
                                                                    var
                                                                    (makeblock 2
                                                                    new_set_of_closures))))))))
                                                          default:
                                                           (before middle_end/flambda/flambda_iterators.ml(663):23102-23105
                                                             def)))))
                                                   defs)))
                                            (before middle_end/flambda/flambda_iterators.ml(666):23137-23306
                                              (let
                                                (new_program' =
                                                   (after middle_end/flambda/flambda_iterators.ml(666):23156-23169
                                                     (apply loop program')))
                                                (before middle_end/flambda/flambda_iterators.ml(667):23179-23306
                                                  (if
                                                    (&&
                                                      (== new_program'
                                                        program')
                                                      (not
                                                        (field 0
                                                          done_something)))
                                                    (before middle_end/flambda/flambda_iterators.ml(668):23243-23250
                                                      program)
                                                    (before middle_end/flambda/flambda_iterators.ml(670):23270-23306
                                                      (makeblock 1 defs
                                                        (after middle_end/flambda/flambda_iterators.ml(670):23292-23305
                                                          (apply loop
                                                            program')))))))))))))
                                 case tag 2:
                                  (let
                                    (program' =a (field 3 program)
                                     fields =a (field 2 program)
                                     tag =a (field 1 program)
                                     symbol =a (field 0 program))
                                    (before middle_end/flambda/flambda_iterators.ml(672):23372-23863
                                      (let
                                        (done_something = (makemutable 0 0a))
                                        (before middle_end/flambda/flambda_iterators.ml(673):23412-23863
                                          (let
                                            (fields =
                                               (after middle_end/flambda/flambda_iterators.ml(674):23433-23661
                                                 (apply
                                                   (field 16
                                                     (global Stdlib__list!))
                                                   (function field
                                                     (funct-body middle_end/flambda/flambda_iterators.ml(674):23442-23644
                                                       (before middle_end/flambda/flambda_iterators.ml(675):23468-23643
                                                         (let
                                                           (new_field =
                                                              (after middle_end/flambda/flambda_iterators.ml(675):23484-23513
                                                                (apply
                                                                  map_sets_of_closures
                                                                  field f)))
                                                           (before middle_end/flambda/flambda_iterators.ml(676):23529-23643
                                                             (seq
                                                               (if
                                                                 (not
                                                                   (==
                                                                    new_field
                                                                    field))
                                                                 (before middle_end/flambda/flambda_iterators.ml(676):23562-23620
                                                                   (setfield_imm 0
                                                                    done_something
                                                                    1a))
                                                                 0a)
                                                               (before middle_end/flambda/flambda_iterators.ml(679):23634-23643
                                                                 new_field)))))))
                                                   fields)))
                                            (before middle_end/flambda/flambda_iterators.ml(682):23677-23863
                                              (let
                                                (new_program' =
                                                   (after middle_end/flambda/flambda_iterators.ml(682):23696-23709
                                                     (apply loop program')))
                                                (before middle_end/flambda/flambda_iterators.ml(683):23719-23863
                                                  (if
                                                    (&&
                                                      (== new_program'
                                                        program')
                                                      (not
                                                        (field 0
                                                          done_something)))
                                                    (before middle_end/flambda/flambda_iterators.ml(684):23783-23790
                                                      program)
                                                    (before middle_end/flambda/flambda_iterators.ml(686):23810-23863
                                                      (makeblock 2 symbol tag
                                                        fields new_program')))))))))))
                                 case tag 3:
                                  (let
                                    (program' =a (field 1 program)
                                     expr =a (field 0 program))
                                    (before middle_end/flambda/flambda_iterators.ml(688):23903-24117
                                      (let
                                        (new_expr =
                                           (after middle_end/flambda/flambda_iterators.ml(688):23918-23946
                                             (apply map_sets_of_closures expr
                                               f)))
                                        (before middle_end/flambda/flambda_iterators.ml(689):23956-24117
                                          (let
                                            (new_program' =
                                               (after middle_end/flambda/flambda_iterators.ml(689):23975-23988
                                                 (apply loop program')))
                                            (before middle_end/flambda/flambda_iterators.ml(690):23998-24117
                                              (if
                                                (&& (== new_expr expr)
                                                  (== new_program' program'))
                                                (before middle_end/flambda/flambda_iterators.ml(691):24059-24066
                                                  program)
                                                (before middle_end/flambda/flambda_iterators.ml(693):24086-24117
                                                  (makeblock 3 new_expr
                                                    new_program')))))))))
                                 case tag 4:
                                  (before middle_end/flambda/flambda_iterators.ml(694):24133-24140
                                    program))))))))
                   (before middle_end/flambda/flambda_iterators.ml(696):24148-24212
                     (let (init = program)
                       (makeblock 0 (field 0 init)
                         (after middle_end/flambda/flambda_iterators.ml(697):24182-24207
                           (apply loop (field 1 program))))))))))
         map_exprs_at_toplevel_of_program =
           (function program f
             (funct-body middle_end/flambda/flambda_iterators.ml(700)<ghost>:24251-27697
               (before middle_end/flambda/flambda_iterators.ml(702):24317-27697
                 (letrec
                   (loop
                      (function program
                        (funct-body middle_end/flambda/flambda_iterators.ml(702)<ghost>:24330-27625
                          (before middle_end/flambda/flambda_iterators.ml(703):24392-27625
                            (let
                              (map_constant_set_of_closures =
                                 (function set_of_closures
                                   (funct-body middle_end/flambda/flambda_iterators.ml(703)<ghost>:24425-25416
                                     (before middle_end/flambda/flambda_iterators.ml(704):24475-25416
                                       (let
                                         (done_something = (makemutable 0 0a))
                                         (before middle_end/flambda/flambda_iterators.ml(705):24515-25416
                                           (let
                                             (funs =
                                                (after middle_end/flambda/flambda_iterators.ml(706):24534-24966
                                                  (apply
                                                    (field 32
                                                      (field 7
                                                        (global Variable!)))
                                                    (function function_decl
                                                      (funct-body middle_end/flambda/flambda_iterators.ml(706):24551-24920
                                                        (before middle_end/flambda/flambda_iterators.ml(707):24618-24919
                                                          (let
                                                            (body =
                                                               (after middle_end/flambda/flambda_iterators.ml(707):24629-24649
                                                                 (apply f
                                                                   (field 2
                                                                    function_decl))))
                                                            (before middle_end/flambda/flambda_iterators.ml(708):24665-24919
                                                              (if
                                                                (== body
                                                                  (field 2
                                                                    function_decl))
                                                                (before middle_end/flambda/flambda_iterators.ml(709):24714-24727
                                                                  function_decl)
                                                                (before middle_end/flambda/flambda_iterators.ml(710):24745-24919
                                                                  (seq
                                                                    (setfield_imm 0
                                                                    done_something
                                                                    1a)
                                                                    (before middle_end/flambda/flambda_iterators.ml(712):24803-24903
                                                                    (after middle_end/flambda/flambda_iterators.ml(712):24803-24903
                                                                    (apply
                                                                    (field 15
                                                                    (global Flambda!))
                                                                    function_decl
                                                                    (field 1
                                                                    function_decl)
                                                                    body)))))))))))
                                                    (field 3
                                                      (field 0
                                                        set_of_closures)))))
                                             (before middle_end/flambda/flambda_iterators.ml(717):24982-25416
                                               (if
                                                 (not
                                                   (field 0 done_something))
                                                 (before middle_end/flambda/flambda_iterators.ml(718):25018-25033
                                                   set_of_closures)
                                                 (before middle_end/flambda/flambda_iterators.ml(720):25053-25416
                                                   (let
                                                     (function_decls =
                                                        (after middle_end/flambda/flambda_iterators.ml(721):25084-25169
                                                          (apply
                                                            (field 20
                                                              (global Flambda!))
                                                            (field 0
                                                              set_of_closures)
                                                            funs)))
                                                     (before middle_end/flambda/flambda_iterators.ml(724):25189-25416
                                                       (after middle_end/flambda/flambda_iterators.ml(724):25189-25416
                                                         (apply
                                                           (field 23
                                                             (global Flambda!))
                                                           function_decls
                                                           (field 1
                                                             set_of_closures)
                                                           (field 2
                                                             set_of_closures)
                                                           (field 3
                                                             set_of_closures)))))))))))))))
                              (before middle_end/flambda/flambda_iterators.ml(730):25497-27625
                                (switch* program
                                 case tag 0:
                                  (let
                                    (const =a (field 1 program)
                                     symbol =a (field 0 program))
                                    (switch const
                                     case tag 2:
                                      (let
                                        (program' =a (field 2 program)
                                         set_of_closures =a (field 0 const))
                                        (before middle_end/flambda/flambda_iterators.ml(732):25594-25906
                                          (let
                                            (new_set_of_closures =
                                               (after middle_end/flambda/flambda_iterators.ml(732):25620-25664
                                                 (apply
                                                   map_constant_set_of_closures
                                                   set_of_closures)))
                                            (before middle_end/flambda/flambda_iterators.ml(733):25674-25906
                                              (let
                                                (new_program' =
                                                   (after middle_end/flambda/flambda_iterators.ml(733):25693-25706
                                                     (apply loop program')))
                                                (before middle_end/flambda/flambda_iterators.ml(734):25716-25906
                                                  (if
                                                    (&&
                                                      (== new_set_of_closures
                                                        set_of_closures)
                                                      (== new_program'
                                                        program'))
                                                    (before middle_end/flambda/flambda_iterators.ml(736):25809-25816
                                                      program)
                                                    (before middle_end/flambda/flambda_iterators.ml(738):25836-25906
                                                      (makeblock 0 symbol
                                                        (makeblock 2
                                                          new_set_of_closures)
                                                        new_program')))))))))
                                     default:
                                      (let
                                        (symbol =a symbol
                                         program' =a (field 2 program))
                                        (before middle_end/flambda/flambda_iterators.ml(740):25959-26109
                                          (let
                                            (new_program' =
                                               (after middle_end/flambda/flambda_iterators.ml(740):25978-25991
                                                 (apply loop program')))
                                            (before middle_end/flambda/flambda_iterators.ml(741):26001-26109
                                              (if (== new_program' program')
                                                (before middle_end/flambda/flambda_iterators.ml(742):26042-26049
                                                  program)
                                                (before middle_end/flambda/flambda_iterators.ml(744):26069-26109
                                                  (makeblock 0 symbol const
                                                    new_program')))))))))
                                 case tag 1:
                                  (let
                                    (program' =a (field 1 program)
                                     defs =a (field 0 program))
                                    (before middle_end/flambda/flambda_iterators.ml(746):26157-26835
                                      (let
                                        (done_something = (makemutable 0 0a))
                                        (before middle_end/flambda/flambda_iterators.ml(747):26197-26835
                                          (let
                                            (defs =
                                               (after middle_end/flambda/flambda_iterators.ml(748):26216-26651
                                                 (apply
                                                   (field 16
                                                     (global Stdlib__list!))
                                                   (function def
                                                     (funct-body middle_end/flambda/flambda_iterators.ml(748):26225-26636
                                                       (let
                                                         (var =a
                                                            (field 0 def)
                                                          *match* =a
                                                            (field 1 def))
                                                         (switch *match*
                                                          case tag 2:
                                                           (let
                                                             (set_of_closures =a
                                                                (field 0
                                                                  *match*))
                                                             (before middle_end/flambda/flambda_iterators.ml(750):26313-26610
                                                               (let
                                                                 (new_set_of_closures =
                                                                    (after middle_end/flambda/flambda_iterators.ml(751):26355-26399
                                                                    (apply
                                                                    map_constant_set_of_closures
                                                                    set_of_closures)))
                                                                 (before middle_end/flambda/flambda_iterators.ml(753):26431-26610
                                                                   (seq
                                                                    (if
                                                                    (not
                                                                    (==
                                                                    new_set_of_closures
                                                                    set_of_closures))
                                                                    (before middle_end/flambda/flambda_iterators.ml(753):26484-26546
                                                                    (setfield_imm 0
                                                                    done_something
                                                                    1a)) 0a)
                                                                    (before middle_end/flambda/flambda_iterators.ml(756):26562-26610
                                                                    (makeblock 0
                                                                    var
                                                                    (makeblock 2
                                                                    new_set_of_closures))))))))
                                                          default:
                                                           (before middle_end/flambda/flambda_iterators.ml(757):26632-26635
                                                             def)))))
                                                   defs)))
                                            (before middle_end/flambda/flambda_iterators.ml(760):26667-26835
                                              (let
                                                (new_program' =
                                                   (after middle_end/flambda/flambda_iterators.ml(760):26686-26699
                                                     (apply loop program')))
                                                (before middle_end/flambda/flambda_iterators.ml(761):26709-26835
                                                  (if
                                                    (&&
                                                      (== new_program'
                                                        program')
                                                      (not
                                                        (field 0
                                                          done_something)))
                                                    (before middle_end/flambda/flambda_iterators.ml(762):26773-26780
                                                      program)
                                                    (before middle_end/flambda/flambda_iterators.ml(764):26800-26835
                                                      (makeblock 1 defs
                                                        new_program')))))))))))
                                 case tag 2:
                                  (let
                                    (program' =a (field 3 program)
                                     fields =a (field 2 program)
                                     tag =a (field 1 program)
                                     symbol =a (field 0 program))
                                    (before middle_end/flambda/flambda_iterators.ml(766):26901-27370
                                      (let
                                        (done_something = (makemutable 0 0a))
                                        (before middle_end/flambda/flambda_iterators.ml(767):26941-27370
                                          (let
                                            (fields =
                                               (after middle_end/flambda/flambda_iterators.ml(768):26962-27168
                                                 (apply
                                                   (field 16
                                                     (global Stdlib__list!))
                                                   (function field
                                                     (funct-body middle_end/flambda/flambda_iterators.ml(768):26971-27151
                                                       (before middle_end/flambda/flambda_iterators.ml(769):26997-27150
                                                         (let
                                                           (new_field =
                                                              (after middle_end/flambda/flambda_iterators.ml(769):27013-27020
                                                                (apply f
                                                                  field)))
                                                           (before middle_end/flambda/flambda_iterators.ml(770):27036-27150
                                                             (seq
                                                               (if
                                                                 (not
                                                                   (==
                                                                    new_field
                                                                    field))
                                                                 (before middle_end/flambda/flambda_iterators.ml(770):27069-27127
                                                                   (setfield_imm 0
                                                                    done_something
                                                                    1a))
                                                                 0a)
                                                               (before middle_end/flambda/flambda_iterators.ml(773):27141-27150
                                                                 new_field)))))))
                                                   fields)))
                                            (before middle_end/flambda/flambda_iterators.ml(776):27184-27370
                                              (let
                                                (new_program' =
                                                   (after middle_end/flambda/flambda_iterators.ml(776):27203-27216
                                                     (apply loop program')))
                                                (before middle_end/flambda/flambda_iterators.ml(777):27226-27370
                                                  (if
                                                    (&&
                                                      (== new_program'
                                                        program')
                                                      (not
                                                        (field 0
                                                          done_something)))
                                                    (before middle_end/flambda/flambda_iterators.ml(778):27290-27297
                                                      program)
                                                    (before middle_end/flambda/flambda_iterators.ml(780):27317-27370
                                                      (makeblock 2 symbol tag
                                                        fields new_program')))))))))))
                                 case tag 3:
                                  (let
                                    (program' =a (field 1 program)
                                     expr =a (field 0 program))
                                    (before middle_end/flambda/flambda_iterators.ml(782):27410-27602
                                      (let
                                        (new_expr =
                                           (after middle_end/flambda/flambda_iterators.ml(782):27425-27431
                                             (apply f expr)))
                                        (before middle_end/flambda/flambda_iterators.ml(783):27441-27602
                                          (let
                                            (new_program' =
                                               (after middle_end/flambda/flambda_iterators.ml(783):27460-27473
                                                 (apply loop program')))
                                            (before middle_end/flambda/flambda_iterators.ml(784):27483-27602
                                              (if
                                                (&& (== new_expr expr)
                                                  (== new_program' program'))
                                                (before middle_end/flambda/flambda_iterators.ml(785):27544-27551
                                                  program)
                                                (before middle_end/flambda/flambda_iterators.ml(787):27571-27602
                                                  (makeblock 3 new_expr
                                                    new_program')))))))))
                                 case tag 4:
                                  (before middle_end/flambda/flambda_iterators.ml(788):27618-27625
                                    program))))))))
                   (before middle_end/flambda/flambda_iterators.ml(790):27633-27697
                     (let (init = program)
                       (makeblock 0 (field 0 init)
                         (after middle_end/flambda/flambda_iterators.ml(791):27667-27692
                           (apply loop (field 1 program))))))))))
         map_named_of_program =
           (function program f
             (funct-body middle_end/flambda/flambda_iterators.ml(794)<ghost>:27724-27920
               (before middle_end/flambda/flambda_iterators.ml(796):27832-27920
                 (after middle_end/flambda/flambda_iterators.ml(796):27832-27920
                   (apply map_exprs_at_toplevel_of_program program
                     (function expr
                       (funct-body middle_end/flambda/flambda_iterators.ml(797):27882-27920
                         (before middle_end/flambda/flambda_iterators.ml(797):27895-27919
                           (after middle_end/flambda/flambda_iterators.ml(797):27895-27919
                             (apply map_named_with_id f expr))))))))))
         map_all_immutable_let_and_let_rec_bindings =
           (function expr f
             (funct-body middle_end/flambda/flambda_iterators.ml(799)<ghost>:27969-28086
               (before middle_end/flambda/flambda_iterators.ml(801):28062-28086
                 (after middle_end/flambda/flambda_iterators.ml(801):28062-28086
                   (apply map_named_with_id f expr)))))
         fold_function_decls_ignoring_stubs =
           (function set_of_closures init f
             (funct-body middle_end/flambda/flambda_iterators.ml(804)<ghost>:28133-28327
               (before middle_end/flambda/flambda_iterators.ml(805):28190-28327
                 (after middle_end/flambda/flambda_iterators.ml(805):28190-28327
                   (apply (field 12 (field 7 (global Variable!)))
                     (function fun_var function_decl acc
                       (funct-body middle_end/flambda/flambda_iterators.ml(805):28208-28278
                         (before middle_end/flambda/flambda_iterators.ml(806):28248-28277
                           (after middle_end/flambda/flambda_iterators.ml(806):28248-28277
                             (apply f fun_var function_decl acc)))))
                     (field 3 (field 0 set_of_closures)) init))))))
        (pseudo _none_(0)<ghost>:-1--1
          (makeblock 0 apply_on_subexpressions map_subexpressions iter
            iter_expr iter_on_named iter_named iter_named_on_named
            iter_toplevel iter_named_toplevel iter_on_sets_of_closures
            iter_on_set_of_closures_of_program
            iter_all_immutable_let_and_let_rec_bindings
            iter_all_toplevel_immutable_let_and_let_rec_bindings
            iter_exprs_at_toplevel_of_program iter_named_of_program
            iter_constant_defining_values_on_program iter_apply_on_program
            map map_expr map_named map_toplevel map_toplevel_expr
            map_toplevel_named map_symbols map_symbols_on_set_of_closures
            map_toplevel_sets_of_closures map_apply map_function_bodies
            map_sets_of_closures map_sets_of_closures_of_program
            map_project_var_to_expr_opt map_project_var_to_named_opt
            map_exprs_at_toplevel_of_program map_named_of_program
            map_all_immutable_let_and_let_rec_bindings
            fold_function_decls_ignoring_stubs))))))
